{
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/agent_orchestrator.py",
            "timeout": 10
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/quality_gate.py",
            "timeout": 5
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/pre_command.py",
            "timeout": 5
          }
        ]
      },
      {
        "matcher": "mcp__playwright__.*",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/mcp_gateway.py --service playwright",
            "timeout": 5
          }
        ]
      },
      {
        "matcher": "mcp__obsidian__.*",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/mcp_gateway.py --service obsidian",
            "timeout": 5
          }
        ]
      },
      {
        "matcher": "mcp__web-search__.*",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/mcp_gateway.py --service web-search",
            "timeout": 5
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/model_tracker.py",
            "timeout": 5
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/post_command.py",
            "timeout": 5
          }
        ]
      },
      {
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/planning_trigger.py",
            "timeout": 3
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/agent_mention_parser.py",
            "timeout": 3
          },
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/slash_command_router.py",
            "timeout": 3
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/session_loader.py",
            "timeout": 10
          },
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/mcp_initializer.py",
            "timeout": 5
          },
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/pre_project.py",
            "timeout": 5
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/session_saver.py",
            "timeout": 5
          },
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/post_project.py",
            "timeout": 5
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$HOME/.claude/hooks/model_tracker.py",
            "timeout": 3
          }
        ]
      }
    ]
  },
  "agentSystem": {
    "enabled": true,
    "orchestrator": "master-orchestrator",
    "agents": [
      "master-orchestrator",
      "prompt-engineer",
      "business-analyst",
      "technical-cto",
      "ceo-strategy",
      "financial-analyst",
      "project-manager",
      "technical-specifications",
      "business-tech-alignment",
      "technical-documentation",
      "api-integration-specialist",
      "frontend-architecture",
      "frontend-mockup",
      "production-frontend",
      "backend-services",
      "database-architecture",
      "middleware-specialist",
      "testing-automation",
      "development-prompt",
      "script-automation",
      "integration-setup",
      "security-architecture",
      "performance-optimization",
      "devops-engineering",
      "quality-assurance",
      "mobile-development",
      "ui-ux-design",
      "usage-guide-agent"
    ]
  },
  "slashCommands": {
    "enabled": true,
    "commands": {
      "/new-project": "Start new project with full orchestration",
      "/resume-project": "Continue existing project",
      "/business-analysis": "Comprehensive business analysis",
      "/technical-feasibility": "Technical viability assessment",
      "/architecture-design": "System architecture design",
      "/database-design": "Database schema design",
      "/api-design": "API endpoint design",
      "/frontend-mockup": "Create HTML/CSS mockup",
      "/backend-implementation": "Implement backend services",
      "/full-stack-app": "Build complete application",
      "/test-suite": "Generate test suite",
      "/code-review": "Perform code review",
      "/deployment-setup": "Create deployment config",
      "/docker-setup": "Docker configuration",
      "/documentation": "Generate documentation",
      "/prompt-enhance": "Improve prompts",
      "/security-audit": "Security analysis",
      "/performance-optimization": "Performance tuning"
    }
  },
  "mcpIntegration": {
    "playwright": {
      "status": "active",
      "capabilities": ["browser-automation", "testing", "scraping", "visual-testing"]
    },
    "obsidian": {
      "status": "active",
      "capabilities": ["note-management", "documentation", "knowledge-base", "vault-search"]
    },
    "web-search": {
      "status": "active",
      "capabilities": ["web-search", "research", "information-gathering", "competitive-analysis"]
    }
  },
  "logging": {
    "enabled": true,
    "level": "info",
    "path": "$HOME/.claude/logs/",
    "rotation": "daily",
    "maxFiles": 30
  },
  "optimization": {
    "modelSelection": {
      "enabled": true,
      "strategy": "cost-optimized",
      "rules": {
        "complex-tasks": "opus",
        "simple-tasks": "haiku",
        "default": "opus"
      }
    },
    "parallelExecution": true,
    "caching": {
      "enabled": true,
      "ttl": 3600
    }
  },
  "qualityGates": {
    "codeStandards": {
      "enabled": true,
      "linting": true,
      "formatting": true,
      "security": true
    },
    "testing": {
      "required": true,
      "coverage": 80
    }
  }
}