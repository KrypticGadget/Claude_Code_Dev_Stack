{
  "mcp_tools": {
    "tier1": {
      "file-system": {
        "name": "@file-system",
        "description": "Read, write, and manage project files",
        "common_operations": [
          "read_file",
          "write_file",
          "list_directory",
          "create_directory",
          "delete_file",
          "move_file"
        ],
        "integration_points": {
          "agents": ["all"],
          "slash_commands": ["/new-project", "/backend-service", "/frontend-mockup", "/documentation"],
          "use_cases": [
            "Project structure creation",
            "Code generation",
            "Configuration management",
            "Asset handling"
          ]
        },
        "prompt_template": "Use @file-system to {operation} for {purpose}"
      },
      "git": {
        "name": "@git",
        "description": "Version control operations",
        "common_operations": [
          "init",
          "clone",
          "add",
          "commit",
          "push",
          "pull",
          "branch",
          "merge",
          "status",
          "log"
        ],
        "integration_points": {
          "agents": ["devops-automation-specialist", "project-initialization-specialist"],
          "slash_commands": ["/new-project", "/deploy", "/code-review"],
          "use_cases": [
            "Repository initialization",
            "Change tracking",
            "Branch management",
            "Deployment tagging"
          ]
        },
        "prompt_template": "Use @git to {operation} with message: {description}"
      },
      "database": {
        "name": "@database",
        "description": "Direct database operations",
        "common_operations": [
          "query",
          "insert",
          "update",
          "delete",
          "create_table",
          "alter_table",
          "create_index",
          "backup"
        ],
        "integration_points": {
          "agents": ["database-architect", "backend-engineer"],
          "slash_commands": ["/database-design", "/backend-service"],
          "use_cases": [
            "Schema creation",
            "Data migration",
            "Query optimization",
            "Seed data generation"
          ]
        },
        "prompt_template": "Use @database to {operation} on {table/schema}"
      },
      "api-test": {
        "name": "@api-test",
        "description": "API endpoint testing and validation",
        "common_operations": [
          "send_request",
          "validate_response",
          "benchmark_performance",
          "test_authentication",
          "check_rate_limits",
          "validate_schema"
        ],
        "integration_points": {
          "agents": ["testing-engineer", "api-gateway-specialist", "quality-assurance-lead"],
          "slash_commands": ["/test-suite", "/backend-service", "/integration"],
          "use_cases": [
            "Endpoint validation",
            "Performance testing",
            "Integration testing",
            "Security testing"
          ]
        },
        "prompt_template": "Use @api-test to {test_type} the {endpoint} endpoint"
      },
      "env-config": {
        "name": "@env-config",
        "description": "Environment variable and configuration management",
        "common_operations": [
          "set_variable",
          "get_variable",
          "load_env_file",
          "create_env_file",
          "encrypt_secrets",
          "manage_profiles"
        ],
        "integration_points": {
          "agents": ["devops-automation-specialist", "security-architect", "cloud-infrastructure-specialist"],
          "slash_commands": ["/cloud-setup", "/deploy", "/security-audit"],
          "use_cases": [
            "Secret management",
            "Environment separation",
            "Configuration deployment",
            "API key handling"
          ]
        },
        "prompt_template": "Use @env-config to {operation} for {environment}"
      }
    },
    "integration_rules": {
      "auto_include": {
        "project_initialization": ["@file-system", "@git", "@env-config"],
        "api_development": ["@file-system", "@database", "@api-test"],
        "deployment": ["@git", "@env-config"],
        "testing": ["@api-test", "@database"]
      },
      "security_requirements": {
        "@env-config": "Always use for sensitive data",
        "@database": "Parameterize all queries",
        "@git": "Never commit secrets"
      }
    },
    "prompt_enhancement": {
      "pattern": "When user requests {task}, automatically include {tools}",
      "examples": [
        {
          "task": "create new project",
          "tools": ["@file-system", "@git", "@env-config"],
          "reason": "Need file structure, version control, and configuration"
        },
        {
          "task": "add authentication",
          "tools": ["@database", "@env-config", "@api-test"],
          "reason": "Need user tables, secret management, and testing"
        },
        {
          "task": "deploy to production",
          "tools": ["@git", "@env-config"],
          "reason": "Need version tagging and production secrets"
        }
      ]
    }
  }
}