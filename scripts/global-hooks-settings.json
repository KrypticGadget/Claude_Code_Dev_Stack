{
  "hooks": {
    "enabled": true,
    "global_path": "${env:CLAUDE_HOME}/.claude-global",
    "hooks_command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/{hook_name}.py\"",
    "config_path": "${env:CLAUDE_HOME}/.claude-global/config",
    "state_path": "${env:CLAUDE_HOME}/.claude-global/state",
    "logs_path": "${env:CLAUDE_HOME}/.claude-global/logs",
    "environment": {
      "CLAUDE_HOME": "${env:CLAUDE_HOME}",
      "CLAUDE_PYTHON": "${env:CLAUDE_PYTHON:-python3}",
      "CLAUDE_HOOKS_DIR": "${env:CLAUDE_HOME}/.claude-global/hooks",
      "CLAUDE_PROJECT_DIR": "${env:PWD}",
      "CLAUDE_SESSION_ID": "${session_id}"
    },
    "SessionStart": [
      {
        "name": "Session Loader",
        "description": "Restore context and session state on startup",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/session_loader.py\"",
            "error_handling": "continue_on_error",
            "timeout": 5000
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "name": "Agent Mention Parser",
        "description": "Parse @agent- mentions and route requests",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/agent_mention_parser.py\" \"${user_prompt}\"",
            "error_handling": "continue_on_error",
            "timeout": 3000
          }
        ]
      },
      {
        "name": "Planning Trigger",
        "description": "Detect if planning is needed for complex tasks",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/planning_trigger.py\" \"${user_prompt}\"",
            "error_handling": "continue_on_error",
            "timeout": 3000
          }
        ]
      }
    ],
    "BeforeCodeEdit": [
      {
        "name": "Quality Gate",
        "description": "Check code quality before edits",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/quality_gate.py\" \"${file_path}\" \"${changes}\"",
            "error_handling": "continue_on_error",
            "timeout": 5000
          }
        ]
      }
    ],
    "AfterCodeEdit": [
      {
        "name": "Session Saver",
        "description": "Save session state after code changes",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/session_saver.py\" \"${file_path}\" \"${operation}\"",
            "error_handling": "continue_on_error",
            "timeout": 3000
          }
        ]
      }
    ],
    "AgentInvocation": [
      {
        "name": "Agent Orchestrator",
        "description": "Manage agent execution and coordination",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/agent_orchestrator.py\" \"${agent_name}\" \"${agent_prompt}\"",
            "error_handling": "continue_on_error",
            "timeout": 10000
          }
        ]
      },
      {
        "name": "Model Tracker",
        "description": "Track model usage and costs",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/model_tracker.py\" \"${agent_name}\" \"${model_type}\"",
            "error_handling": "continue_on_error",
            "timeout": 2000
          }
        ]
      }
    ],
    "MCPServerRequest": [
      {
        "name": "MCP Gateway",
        "description": "Validate and manage MCP server connections",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/mcp_gateway.py\" \"${mcp_server}\" \"${mcp_method}\"",
            "error_handling": "continue_on_error",
            "timeout": 5000
          }
        ]
      }
    ],
    "SessionEnd": [
      {
        "name": "Final Session Save",
        "description": "Save complete session state before exit",
        "hooks": [
          {
            "type": "command",
            "command": "\"${env:CLAUDE_PYTHON:-python3}\" \"${env:CLAUDE_HOME}/.claude-global/hooks/session_saver.py\" --final",
            "error_handling": "continue_on_error",
            "timeout": 5000
          }
        ]
      }
    ],
    "hook_config": {
      "max_retries": 3,
      "retry_delay": 1000,
      "log_level": "info",
      "cache_ttl": 300,
      "max_log_size": "10MB",
      "archive_logs_after": 7,
      "error_reporting": {
        "enabled": true,
        "method": "log_only",
        "include_stack_trace": false
      },
      "performance": {
        "enable_profiling": false,
        "max_concurrent_hooks": 3,
        "queue_timeout": 30000
      },
      "security": {
        "validate_commands": true,
        "allowed_executables": ["python", "python3", "python.exe"],
        "restrict_file_access": true,
        "allowed_directories": ["${env:CLAUDE_HOME}", "${env:CLAUDE_PROJECT_DIR}"]
      }
    }
  }
}