{"version":3,"mappings":"itCAEIA,GAAIC,GAENC,GAAA,WAAqBF,GAAE,WACvBE,GAAA,YAAsBF,GAAE,YC2InB,MAAMG,GAAwC,CAAC,CAEpD,OAAAC,EACA,MAAAC,EACA,MAAAC,EACA,UAAAC,EACA,YAAaC,EAGb,gBAAAC,EAAkB,GAClB,MAAAC,EAAQ,sBACR,MAAAC,EAAQ,cACR,uBAAAC,EAAyB,GACzB,YAAAC,EAAc,EAChB,IAAM,CAEJ,KAAM,CAACC,EAAgBC,CAAiB,EAAIC,WAAwC,IAAI,EAClF,CAACC,EAAcC,CAAe,EAAIF,WAA2B,IAAI,EACjE,CAACG,EAAkBC,CAAmB,EAAIJ,WAAsD,cAAc,EAC9G,CAACK,EAAgBC,CAAiB,EAAIN,WAAiB,CAAC,EACxD,CAACO,EAAiBC,CAAkB,EAAIR,WAAiB,CAAC,EAG1DS,EAAmBC,cAAY,IAAM,CACzC,GAAKjB,EAEL,GAAI,CACFW,EAAoB,YAAY,EAChC,MAAMO,EAAK,IAAI,UAAUjB,CAAK,EAE9BiB,EAAG,OAAS,IAAM,CAChB,QAAQ,IAAI,4CAA4C,EACxDP,EAAoB,WAAW,EAC/BF,EAAgBS,CAAE,EAGlBA,EAAG,KAAK,KAAK,UAAU,CAAE,KAAM,iBAAkB,CAAC,CACpD,EAEAA,EAAG,UAAaC,GAAU,CACxB,GAAI,CACF,MAAMC,EAAU,KAAK,MAAMD,EAAM,IAAI,EAErC,GAAIC,EAAQ,OAAS,qBAAuBA,EAAQ,OAAS,qBAAsB,CACjF,MAAMC,EAAOD,EAAQ,KACrBd,EAAkBe,CAAI,EACtBR,EAAkB,KAAK,KAAK,EAGxBQ,EAAK,aAAeP,EAAkB,IACxCO,EAAK,YAAY,WAAa,KAAK,MAAQP,EAE/C,CACF,OAASQ,EAAO,CACd,QAAQ,MAAM,oCAAqCA,CAAK,CAC1D,CACF,EAEAJ,EAAG,QAAU,IAAM,CACjB,QAAQ,IAAI,+CAA+C,EAC3DP,EAAoB,cAAc,EAClCF,EAAgB,IAAI,EAGpB,WAAWO,EAAkB,GAAI,CACnC,EAEAE,EAAG,QAAWI,GAAU,CACtB,QAAQ,MAAM,0CAA2CA,CAAK,EAC9DX,EAAoB,cAAc,CACpC,CAEF,OAASW,EAAO,CACd,QAAQ,MAAM,yCAA0CA,CAAK,EAC7DX,EAAoB,cAAc,CACpC,CACF,EAAG,CAACX,EAAiBC,CAAK,CAAC,EAG3BsB,YAAU,KACRP,EAAA,EAEO,IAAM,CACPR,GACFA,EAAa,OAEjB,GACC,CAACQ,CAAgB,CAAC,EAGrBO,YAAU,IAAM,CACdR,EAAmB,KAAK,KAAK,CAC/B,CAAC,EAGD,MAAMS,EAAcd,IAAqB,YACnCe,EAAgBpB,GAAkBqB,EAAA,EAGxC,SAASA,GAA6C,CACpD,MAAO,CACL,UAAW,CACT,UAAW,2BACX,IAAK,CACH,OAAQ,OACR,MAAO,GACP,MAAO,EACP,OAAQ,EACR,MAAO,GAET,MAAO,CACL,GAAI,oBACJ,YAAa,oBACb,SAAU,aAEZ,KAAM,CACJ,QAAS/B,EAAS,KAAO,EACzB,MAAOA,EAAS,KAAO,EACvB,OAAQ,GACR,UAAW,MACX,WAAY,OAEd,QAAS,CACP,OAAQ,KACR,UAAW,IACX,WAAY,MAEd,YAAa,CACX,aAAc,EACd,WAAY,EACZ,gBAAiB,EACnB,EAEF,SAAU,CACR,OAAQ,CACN,QAAQA,GAAA,YAAAA,EAAQ,SAAU,EAC1B,OAAOA,GAAA,YAAAA,EAAQ,QAAS,GACxB,QAASA,GAAA,YAAAA,EAAQ,SAAkB,OACnC,OAAQ,GACR,YAAa,CACX,gBAAiB,EACjB,YAAa,IACb,WAAY,EACd,EAEF,MAAO,CACL,QAAQC,GAAA,YAAAA,EAAO,SAAU,EACzB,WAAWA,GAAA,YAAAA,EAAO,YAAa,EAC/B,OAAOA,GAAA,YAAAA,EAAO,QAAS,EACvB,OAAQ,EACR,OAAQ,EACR,QAASA,GAAA,YAAAA,EAAO,SAAkB,OAClC,YAAa,CACX,iBAAkB,EAClB,WAAY,EACZ,WAAY,EACd,EAEF,MAAO,CACL,WAAWC,GAAA,YAAAA,EAAO,YAAa,EAC/B,OAAOA,GAAA,YAAAA,EAAO,QAAS,GACvB,QAAQA,GAAA,YAAAA,EAAO,SAAU,EACzB,OAAQ,EACR,QAASA,GAAA,YAAAA,EAAO,SAAkB,QAClC,YAAa,CACX,WAAY,EACZ,YAAa,IACb,gBAAiB,EACnB,EAEF,MAAO,CACL,QAASC,IAAc,OACvB,OAAQ,GACR,UAAWA,GAAa,OACxB,OAAQ,SACR,MAAO,EACP,YAAa,CACX,QAAS,EACT,aAAc,EACd,UAAW,EACb,EAEF,OAAQ,CACN,IAAK,EACL,OAAQ,EACR,KAAM,EACN,QAAS,CACP,QAAS,EACT,SAAU,EACV,QAAS,EACX,CACF,EAEF,YAAa,CACX,cAAe,EACf,mBAAoB,EACpB,WAAY,EACZ,UAAW,EACX,YAAa,EACb,SAAU,GAEZ,UAAW,KAAK,MAChB,SAAU,WAEd,CAUA,MAAM6B,EAAe,CAACC,EAAcC,IAAkB,CACpD,MAAMC,EAAcF,EAAOC,EAAS,IACpC,OAAIC,GAAc,GAAW,eACzBA,GAAc,GAAW,kBACtB,gBACT,EAEMC,EAAkBC,GAAmB,CACzC,OAAQA,EAAA,CACN,IAAK,UACL,IAAK,UACL,IAAK,OACH,MAAO,iBACT,IAAK,QACH,MAAO,eACT,IAAK,UACH,MAAO,gBACT,IAAK,OACL,IAAK,QACL,IAAK,SACL,IAAK,OACL,QACE,MAAO,gBAEb,EAEMC,EAAiBD,GAAmB,CACxC,OAAQA,EAAA,CACN,IAAK,UACL,IAAK,UACL,IAAK,OACH,MAAO,IACT,IAAK,QACH,MAAO,IACT,IAAK,UACH,MAAO,IACT,IAAK,OACL,IAAK,QACL,IAAK,SACL,IAAK,OACL,QACE,MAAO,IAEb,EAEME,EAAeC,GAAkB,CACrC,GAAIA,IAAU,EAAG,MAAO,MACxB,MAAMC,EAAI,KACJC,EAAQ,CAAC,IAAK,KAAM,KAAM,IAAI,EAC9BC,EAAI,KAAK,MAAM,KAAK,IAAIH,CAAK,EAAI,KAAK,IAAIC,CAAC,CAAC,EAClD,OAAO,YAAYD,EAAQ,KAAK,IAAIC,EAAGE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAI,IAAMD,EAAMC,CAAC,CACxE,EAEA,OACEC,OAAC,OAAI,UAAW,+BAA+BrC,CAAK,IAAIE,EAAc,UAAY,EAAE,GAElF,UAAAmC,OAAC,OAAI,UAAU,2BACb,UAAAA,OAAC,OAAI,UAAU,oBACb,UAAAC,MAAC,QAAK,UAAU,OAAO,cAAE,QACxB,QAAK,UAAU,QAAS,SAAAf,EAAc,UAAU,UAAU,GAC7D,EAEAc,OAAC,OAAI,UAAU,cACb,UAAAC,MAACC,GAAA,CAAU,KAAM,GAAI,QACpB,QAAK,UAAU,QAAS,SAAAhB,EAAc,UAAU,IAAI,OAAO,EAC3DA,EAAc,UAAU,IAAI,aAAU,QAAK,UAAU,mCAAmC,aAAC,GACxFA,EAAc,UAAU,IAAI,MAAQ,GAAKA,EAAc,UAAU,IAAI,OAAS,IAC9Ec,OAAC,QAAK,UAAU,iCACb,UAAAd,EAAc,UAAU,IAAI,MAAQ,GAAK,IAAIA,EAAc,UAAU,IAAI,KAAK,GAC9EA,EAAc,UAAU,IAAI,OAAS,GAAK,IAAIA,EAAc,UAAU,IAAI,MAAM,IACnF,EAEDA,EAAc,UAAU,IAAI,MAAQ,GACnCc,OAAC,QAAK,UAAU,mCAAmC,cAAEd,EAAc,UAAU,IAAI,OAAM,GAE3F,EAEAc,OAAC,OAAI,UAAU,gBACb,UAAAC,MAACE,GAAA,CAAI,KAAM,GAAI,QACd,QAAK,UAAU,QAAS,SAAAjB,EAAc,UAAU,MAAM,YAAY,EAClEA,EAAc,UAAU,MAAM,UAC7Bc,OAAC,QAAK,UAAU,iCAAiC,cAAEd,EAAc,UAAU,MAAM,SAAS,KAAC,GAE/F,EAEAc,OAAC,OAAI,UAAW,gBAAgBZ,EAAaF,EAAc,UAAU,KAAK,QAASA,EAAc,UAAU,KAAK,OAAS,EAAG,CAAC,GAC3H,UAAAe,MAACG,GAAA,CAAW,KAAM,GAAI,EACtBJ,OAAC,QAAK,UAAU,QAAQ,uBAAWd,EAAc,UAAU,KAAK,QAAQ,QAAQ,CAAC,GAAE,GACrF,EAEAc,OAAC,OAAI,UAAW,gBAAgBZ,EAAaF,EAAc,UAAU,KAAK,MAAOA,EAAc,UAAU,KAAK,MAAM,CAAC,GACnH,UAAAe,MAACG,GAAA,CAAW,KAAM,GAAI,EACtBJ,OAAC,QAAK,UAAU,QAAQ,qBAASd,EAAc,UAAU,KAAK,MAAM,QAAQ,CAAC,EAAE,KAAGA,EAAc,UAAU,KAAK,QAAO,EACtHe,MAAC,OAAI,UAAU,oBACb,SAAAA,MAAC,OACC,UAAU,gBACV,MAAO,CAAE,MAAO,GAAGf,EAAc,UAAU,KAAK,UAAU,IAAI,EAC/D,CACH,GACF,EAEAc,OAAC,OAAI,UAAU,kBACb,UAAAC,MAACI,EAAA,CAAS,KAAM,GAAI,EACpBL,OAAC,QAAK,UAAU,QAAU,WAAAd,EAAc,UAAU,QAAQ,OAAS,KAAM,QAAQ,CAAC,EAAE,YAAQ,EAC5Fe,MAAC,OAAI,UAAU,oBACb,SAAAA,MAAC,OACC,UAAU,gBACV,MAAO,CAAE,MAAO,GAAGf,EAAc,UAAU,QAAQ,UAAU,IAAI,EAClE,CACH,GACF,GACF,EAGAc,OAAC,OAAI,UAAU,0BACb,UAAAA,OAAC,OAAI,UAAU,iBACb,UAAAC,MAAC,QAAK,UAAU,OAAO,cAAE,EACzBD,OAAC,QAAK,UAAW,SAASR,EAAeN,EAAc,SAAS,OAAO,MAAM,CAAC,GAC3E,UAAAA,EAAc,SAAS,OAAO,OAAO,IAAEA,EAAc,SAAS,OAAO,OACxE,QACC,QAAK,UAAW,oBAAoBM,EAAeN,EAAc,SAAS,OAAO,MAAM,CAAC,GACtF,SAAAQ,EAAcR,EAAc,SAAS,OAAO,MAAM,EACrD,EACCA,EAAc,SAAS,OAAO,YAAY,WAAa,GACtDc,OAAC,QAAK,UAAU,2BAA2B,cAAEd,EAAc,SAAS,OAAO,YAAY,YAAW,GAEtG,EAEAc,OAAC,OAAI,UAAU,gBACb,UAAAC,MAACK,GAAA,CAAI,KAAM,GAAI,EACfN,OAAC,QAAK,UAAW,SAASR,EAAeN,EAAc,SAAS,MAAM,MAAM,CAAC,GAC1E,UAAAA,EAAc,SAAS,MAAM,OAAO,IAAEA,EAAc,SAAS,MAAM,MAAM,IACxEA,EAAc,SAAS,MAAM,UAAU,UAC3C,EACCA,EAAc,SAAS,MAAM,OAAS,GACrCc,OAAC,QAAK,UAAU,kCAAkC,eAAGd,EAAc,SAAS,MAAM,QAAO,QAE1F,QAAK,UAAW,oBAAoBM,EAAeN,EAAc,SAAS,MAAM,MAAM,CAAC,GACrF,SAAAQ,EAAcR,EAAc,SAAS,MAAM,MAAM,EACpD,GACF,EAEAc,OAAC,OAAI,UAAU,gBACb,UAAAC,MAACM,GAAA,CAAS,KAAM,GAAI,EACpBP,OAAC,QAAK,UAAW,SAASR,EAAeN,EAAc,SAAS,MAAM,MAAM,CAAC,GAC1E,UAAAA,EAAc,SAAS,MAAM,UAAU,IAAEA,EAAc,SAAS,MAAM,OACzE,EACCA,EAAc,SAAS,MAAM,OAAS,GACrCc,OAAC,QAAK,UAAU,gCACd,UAAAC,MAACO,GAAA,CAAc,KAAM,GAAI,EACxBtB,EAAc,SAAS,MAAM,QAChC,QAED,QAAK,UAAW,oBAAoBM,EAAeN,EAAc,SAAS,MAAM,MAAM,CAAC,GACrF,SAAAQ,EAAcR,EAAc,SAAS,MAAM,MAAM,EACpD,GACF,EAEAc,OAAC,OAAI,UAAU,gBACb,UAAAC,MAACQ,GAAA,CAAQ,KAAM,GAAI,EACnBT,OAAC,QAAK,UAAW,SAASR,EAAeN,EAAc,SAAS,MAAM,MAAM,CAAC,GAC1E,UAAAA,EAAc,SAAS,MAAM,QAAU,GAAG,KAAK,MAAMA,EAAc,SAAS,MAAM,OAAS,GAAG,CAAC,IAAM,MACrGA,EAAc,SAAS,MAAM,MAAQ,GAAK,OAAOA,EAAc,SAAS,MAAM,KAAK,KACtF,QACC,QAAK,UAAW,oBAAoBM,EAAeN,EAAc,SAAS,MAAM,MAAM,CAAC,GACrF,SAAAA,EAAc,SAAS,MAAM,QAAU,KAAO,KACjD,QACC,QAAK,UAAU,mCAAoC,SAAAA,EAAc,SAAS,MAAM,UAAU,GAC7F,EAEAc,OAAC,OAAI,UAAU,iBACb,UAAAC,MAACS,EAAA,CAAO,KAAM,GAAI,EAClBV,OAAC,QAAK,UAAU,sBAAsB,iBAC/Bd,EAAc,SAAS,OAAO,IAAI,QAAQ,CAAC,EAAE,SAC7CA,EAAc,SAAS,OAAO,OAAO,QAAQ,CAAC,EAAE,KACvD,GACF,EAEAe,MAAC,OAAI,UAAU,qBACZ,WACCD,OAAAW,WAAA,CACE,UAAAV,MAACW,GAAA,CAAK,KAAM,GAAI,UAAU,iBAAiB,EAC3CZ,OAAC,QAAK,UAAU,uBAAwB,UAAAd,EAAc,YAAY,cAAc,MAAE,GACpF,EAEAc,OAAAW,WAAA,CACE,UAAAV,MAACY,GAAA,CAAQ,KAAM,GAAI,UAAU,eAAe,EAC5CZ,MAAC,QAAK,UAAU,qBAAsB,SAAA9B,CAAA,CAAiB,GACzD,EAEJ,EAEA6B,OAAC,OAAI,UAAU,oBACb,UAAAC,MAACa,GAAA,CAAM,KAAM,GAAI,EACjBb,MAAC,QAAK,UAAU,sBACb,aAAI,KAAKf,EAAc,SAAS,EAAE,oBAAmB,CACxD,GACF,GACF,EAGCtB,GACCoC,OAAC,OAAI,UAAU,6BACb,UAAAA,OAAC,OAAI,UAAU,sBACb,UAAAC,MAACI,EAAA,CAAS,KAAM,GAAI,EACpBJ,MAAC,QAAK,UAAU,QAAQ,mBAAO,EAC/BD,OAAC,QAAK,UAAU,QAAS,UAAAd,EAAc,YAAY,cAAc,MAAE,GACrE,EAEAc,OAAC,OAAI,UAAU,oBACb,UAAAC,MAAC,QAAK,UAAU,QAAQ,iBAAK,EAC7BD,OAAC,QAAK,UAAU,QAAS,UAAAd,EAAc,YAAY,mBAAmB,MAAE,GAC1E,EAEAc,OAAC,OAAI,UAAU,sBACb,UAAAC,MAAC,QAAK,UAAU,QAAQ,mBAAO,EAC/BD,OAAC,QAAK,UAAU,QAAS,UAAAd,EAAc,YAAY,WAAW,MAAE,GAClE,EAEAc,OAAC,OAAI,UAAU,sBACb,UAAAC,MAAC,QAAK,UAAU,QAAQ,mBAAO,EAC/BA,MAAC,QAAK,UAAU,QAAS,SAAAN,EAAYT,EAAc,YAAY,YAAc,KAAO,IAAI,EAAE,GAC5F,EAEAc,OAAC,OAAI,UAAU,oBACb,UAAAC,MAAC,QAAK,UAAU,QAAQ,eAAG,EAC3BA,MAAC,QAAK,UAAU,0BAA2B,WAAc,SAAS,MAAM,EAAE,EAAE,GAC9E,EAEAA,MAAC,OAAI,UAAU,sBACb,eAAC,QAAK,UAAU,8BAA8B,8DAE9C,EACF,GACF,GAEJ,CAEJ,EChlBac,GAAuB,IAAM,CACxC,MAAMC,EAAWC,GAAA,EAEXC,EAAW,CACf,CAAE,KAAM,IAAK,MAAO,YAAa,KAAMC,EAAA,EACvC,CAAE,KAAM,SAAU,MAAO,QAAS,KAAMC,EAAA,EACxC,CAAE,KAAM,SAAU,MAAO,QAAS,KAAMX,EAAA,EACxC,CAAE,KAAM,OAAQ,MAAO,MAAO,KAAMC,CAAA,EACpC,CAAE,KAAM,WAAY,MAAO,UAAW,KAAMW,EAAA,EAC5C,CAAE,KAAM,iBAAkB,MAAO,UAAW,KAAMC,EAAA,CAAK,EAGzD,aACG,OAAI,UAAU,aACb,SAAArB,MAAC,OAAI,UAAU,gBACZ,SAAAiB,EAAS,IAAI,CAAC,CAAE,KAAAK,EAAM,MAAAC,EAAO,KAAMC,KAClCzB,OAAC0B,GAAA,CAEC,GAAIH,EACJ,UAAW,YAAYP,EAAS,WAAaO,EAAO,SAAW,EAAE,GAEjE,UAAAtB,MAACwB,EAAA,CAAK,KAAM,GAAI,EAChBxB,MAAC,QAAM,SAAAuB,CAAA,CAAM,IALRD,CAAA,CAOR,EACH,EACF,CAEJ,ECzBaI,GAAgD,CAAC,CAAE,OAAAvE,KAAa,CAE3E,MAAMwE,EAAY,CAChB,CACE,GAAI,sBACJ,KAAM,4BACN,OAAQ,SACR,YAAa,+CACb,eAAgB,GAChB,OAAQ,SACR,YAAa,IAEf,CACE,GAAI,2BACJ,KAAM,2BACN,OAAQ,SACR,YAAa,0CACb,eAAgB,EAChB,OAAQ,SACR,YAAa,IAEf,CACE,GAAI,qBACJ,KAAM,qBACN,OAAQ,OACR,YAAa,uCACb,eAAgB,EAChB,OAAQ,MACR,YAAa,IAEf,CACE,GAAI,2BACJ,KAAM,2BACN,OAAQ,SACR,YAAa,wCACb,eAAgB,GAChB,OAAQ,SACR,YAAa,IAEf,CACE,GAAI,4BACJ,KAAM,4BACN,OAAQ,QACR,YAAa,mCACb,eAAgB,EAChB,OAAQ,MACR,YAAa,IAEf,CACE,GAAI,2BACJ,KAAM,2BACN,OAAQ,SACR,YAAa,2CACb,eAAgB,EAChB,OAAQ,SACR,YAAa,GACf,EAGIlC,EAAiBD,GAAmB,CACxC,OAAQA,EAAA,CACN,IAAK,SACH,OAAOQ,MAAC4B,EAAA,CAAY,KAAM,GAAI,UAAU,iBAAiB,EAC3D,IAAK,OACH,OAAO5B,MAACa,GAAA,CAAM,KAAM,GAAI,UAAU,kBAAkB,EACtD,IAAK,QACH,OAAOb,MAAC6B,GAAA,CAAY,KAAM,GAAI,UAAU,eAAe,EACzD,QACE,OAAO7B,MAACI,EAAA,CAAS,KAAM,GAAI,UAAU,gBAAgB,EAE3D,EAEM0B,EAAuBC,GACvBA,GAAe,GAAW,iBAC1BA,GAAe,GAAW,kBACvB,eAGT,OACEhC,OAAC,OAAI,UAAU,kBAEb,UAAAA,OAAC,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,UAAAA,OAAC,OAAI,UAAU,cACb,UAAAA,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACgC,GAAA,CAAI,KAAM,GAAI,EAAE,mBAEnB,EACAjC,OAAC,OAAI,UAAU,kCACb,UAAAA,OAAC,QAAK,UAAU,eAAe,qBACpB5C,EAAO,QAClB,EACA4C,OAAC,QAAK,UAAU,aAAa,oBACnB5C,EAAO,OACjB,GACF,GACF,QACC,OAAI,UAAU,eACb,SAAA6C,MAAC,KAAE,oEAAwD,EAC7D,GACF,EAGC2B,EAAU,IAAKM,GACdlC,OAAC,OAAmB,UAAU,aAC5B,UAAAA,OAAC,OAAI,UAAU,eACZ,UAAAN,EAAcwC,EAAM,MAAM,EAC3BjC,MAAC,QAAK,UAAU,cAAe,WAAM,KAAK,GAC5C,EAEAA,MAAC,KAAE,UAAU,8BACV,WAAM,YACT,EAEAD,OAAC,OAAI,UAAU,gBACb,UAAAA,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,eAAgB,SAAAiC,EAAM,eAAe,EACpDjC,MAAC,OAAI,UAAU,eAAe,iBAAK,GACrC,EACAD,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,eAAgB,SAAAiC,EAAM,OAAO,EAC5CjC,MAAC,OAAI,UAAU,eAAe,kBAAM,GACtC,EACAD,OAAC,OAAI,UAAU,SAAS,MAAO,CAAE,WAAY,UAC3C,UAAAA,OAAC,OAAI,UAAW,gBAAgB+B,EAAoBG,EAAM,WAAW,CAAC,GACnE,UAAAA,EAAM,YAAY,KACrB,EACAjC,MAAC,OAAI,UAAU,eAAe,uBAAW,GAC3C,GACF,QAGC,OAAI,UAAU,OACb,SAAAA,MAAC,OAAI,UAAU,gBACb,SAAAA,MAAC,OACC,UAAU,oBACV,MAAO,CAAE,MAAO,GAAGiC,EAAM,WAAW,IAAI,GAE5C,EACF,IAnCQA,EAAM,EAoChB,CACD,EAGDlC,OAAC,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAD,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACI,EAAA,CAAS,KAAM,GAAI,EAAE,mBAExB,EACF,QACC,OAAI,UAAU,eACb,SAAAL,OAAC,OAAI,UAAU,yBACb,UAAAA,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,8BACZ,SAAA2B,EAAU,UAAYO,EAAE,SAAW,QAAQ,EAAE,OAChD,EACAlC,MAAC,OAAI,UAAU,eAAe,yBAAa,GAC7C,EACAD,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,+BACZ,SAAA2B,EAAU,UAAYO,EAAE,SAAW,MAAM,EAAE,OAC9C,EACAlC,MAAC,OAAI,UAAU,eAAe,uBAAW,GAC3C,EACAD,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,4BACZ,SAAA2B,EAAU,UAAYO,EAAE,SAAW,OAAO,EAAE,OAC/C,EACAlC,MAAC,OAAI,UAAU,eAAe,wBAAY,GAC5C,EACAD,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,6BACZ,SAAA2B,EAAU,OAAO,CAACQ,EAAKF,IAAUE,EAAMF,EAAM,eAAgB,CAAC,EACjE,EACAjC,MAAC,OAAI,UAAU,eAAe,uBAAW,GAC3C,GACF,EACF,GACF,GACF,CAEJ,EC1KaoC,GAA0C,CAAC,CAAE,MAAAhF,KAAY,CACpE,KAAM,CAACiF,EAAQC,CAAS,EAAIvE,WAAiB,KAAK,EAG5CwE,EAAmB,CACvB,CACE,GAAI,SACJ,KAAM,yBACN,YAAa,oDACb,OAAQ,YACR,SAAU,IACV,UAAW,cACX,kBAAmB,aACnB,MAAO,uBAET,CACE,GAAI,SACJ,KAAM,0BACN,YAAa,0DACb,OAAQ,UACR,SAAU,GACV,UAAW,iBACX,kBAAmB,aACnB,MAAO,uBAET,CACE,GAAI,SACJ,KAAM,sBACN,YAAa,oDACb,OAAQ,UACR,SAAU,GACV,UAAW,iBACX,kBAAmB,SACnB,MAAO,4BAET,CACE,GAAI,SACJ,KAAM,uBACN,YAAa,mDACb,OAAQ,UACR,SAAU,EACV,UAAW,cACX,kBAAmB,YACnB,MAAO,sBAET,CACE,GAAI,SACJ,KAAM,kBACN,YAAa,4CACb,OAAQ,QACR,SAAU,GACV,UAAW,aACX,kBAAmB,aACnB,MAAO,6BAET,CACE,GAAI,SACJ,KAAM,uBACN,YAAa,2CACb,OAAQ,UACR,SAAU,EACV,UAAW,cACX,kBAAmB,aACnB,MAAO,2BACT,EAGI9C,EAAiBD,GAAmB,CACxC,OAAQA,EAAA,CACN,IAAK,YACH,OAAOQ,MAAC4B,EAAA,CAAY,KAAM,GAAI,UAAU,iBAAiB,EAC3D,IAAK,UACH,OAAO5B,MAACwC,GAAA,CAAK,KAAM,GAAI,UAAU,gBAAgB,EACnD,IAAK,UACH,OAAOxC,MAACa,GAAA,CAAM,KAAM,GAAI,UAAU,kBAAkB,EACtD,IAAK,QACH,OAAOb,MAACyC,EAAA,CAAQ,KAAM,GAAI,UAAU,eAAe,EACrD,QACE,OAAOzC,MAAC0C,GAAA,CAAM,KAAM,GAAI,UAAU,gBAAgB,EAExD,EAEMC,EAAkBnD,GAAmB,CACzC,OAAQA,EAAA,CACN,IAAK,YACH,MAAO,YACT,IAAK,QACH,MAAO,QACT,QACE,MAAO,GAEb,EAEMoD,EAAgBP,IAAW,MAC7BE,EACAA,EAAS,OAAOM,GAAQA,EAAK,SAAWR,CAAM,EAE5CS,EAAa,CACjB,IAAKP,EAAS,OACd,QAASA,EAAS,UAAYQ,EAAE,SAAW,SAAS,EAAE,OACtD,UAAWR,EAAS,UAAYQ,EAAE,SAAW,WAAW,EAAE,OAC1D,QAASR,EAAS,UAAYQ,EAAE,SAAW,SAAS,EAAE,OACtD,MAAOR,EAAS,UAAYQ,EAAE,SAAW,OAAO,EAAE,QAGpD,OACEhD,OAAC,OAAI,UAAU,eAEb,UAAAA,OAAC,OAAI,UAAU,cACb,UAAAA,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACK,GAAA,CAAI,KAAM,GAAI,EAAE,gBAEnB,EACAN,OAAC,OAAI,UAAU,0BACb,UAAAA,OAAC,QAAK,UAAU,qBACb,UAAA3C,EAAM,UAAU,IAAEA,EAAM,MAAM,cACjC,EACA4C,MAAC,UAAO,UAAU,oBAAoB,QAAS,IAAM,OAAO,SAAS,SACnE,SAAAA,MAACgD,GAAA,CAAU,KAAM,GAAI,EACvB,GACF,GACF,QAGC,OAAI,UAAU,OACb,SAAAhD,MAAC,OAAI,UAAU,uBACZ,gBAAO,QAAQ8C,CAAU,EAAE,IAAI,CAAC,CAACtD,EAAQyD,CAAK,IAC7ClD,OAAC,UAEC,QAAS,IAAMuC,EAAU9C,CAAM,EAC/B,UAAW,OAAO6C,IAAW7C,EAAS,cAAgB,eAAe,WAEpE,UAAAA,EAAO,OAAO,CAAC,EAAE,cAAgBA,EAAO,MAAM,CAAC,EAAE,KAAGyD,EAAM,MAJtDzD,CAAA,CAMR,EACH,EACF,EAGAO,OAAC,OAAI,UAAU,YACZ,UAAA6C,EAAc,IAAKC,GAClB9C,OAAC,OAAkB,UAAW,aAAa4C,EAAeE,EAAK,MAAM,CAAC,GACpE,UAAA9C,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,+BACZ,UAAAN,EAAcoD,EAAK,MAAM,EAC1B7C,MAAC,QAAK,UAAU,YAAa,WAAK,KAAK,EACvCA,MAAC,QAAK,UAAU,mDACb,WAAK,MAAM,QAAQ,SAAU,EAAE,EAClC,GACF,EACAA,MAAC,KAAE,UAAU,mBAAoB,WAAK,YAAY,EAClDD,OAAC,OAAI,UAAU,kDACb,UAAAA,OAAC,QAAK,sBAAU8C,EAAK,WAAU,SAC9B,QAAK,uBAAWA,EAAK,mBAAkB,GAC1C,GACF,EAEA9C,OAAC,OAAI,UAAU,gCACb,UAAAA,OAAC,QAAK,UAAU,sBAAuB,UAAA8C,EAAK,SAAS,KAAC,EACtD7C,MAAC,OAAI,UAAU,gBACb,SAAAA,MAAC,OACC,UAAU,oBACV,MAAO,CAAE,MAAO,GAAG6C,EAAK,QAAQ,IAAI,EACtC,CACF,GACF,IAxBQA,EAAK,EAyBf,CACD,EAEAD,EAAc,SAAW,GACxB7C,OAAC,OAAI,UAAU,8BACb,UAAAC,MAACK,GAAA,CAAI,KAAM,GAAI,UAAU,0BAA0B,EACnDL,MAAC,KAAE,mDAAuC,GAC5C,GAEJ,EAGAD,OAAC,OAAI,UAAU,mCACb,UAAAC,MAAC,MAAG,UAAU,mBAAmB,2BAAe,EAChDD,OAAC,OAAI,UAAU,wCACb,UAAAA,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,6BAA8B,SAAA8C,EAAW,QAAQ,EAChE9C,MAAC,OAAI,UAAU,eAAe,mBAAO,GACvC,EACAD,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,8BAA+B,SAAA8C,EAAW,UAAU,EACnE9C,MAAC,OAAI,UAAU,eAAe,qBAAS,GACzC,EACAD,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,+BAAgC,SAAA8C,EAAW,QAAQ,EAClE9C,MAAC,OAAI,UAAU,eAAe,mBAAO,GACvC,EACAD,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,4BAA6B,SAAA8C,EAAW,MAAM,EAC7D9C,MAAC,OAAI,UAAU,eAAe,kBAAM,GACtC,GACF,GACF,GACF,CAEJ,ECpMakD,GAAkD,CAAC,CAAE,UAAA5F,KAAgB,CAChF,KAAM,CAAC6F,EAAWC,CAAY,EAAIrF,WAAS,EAAK,EAC1C,CAACsF,EAASC,CAAU,EAAIvF,WAAS,EAAK,EACtC,CAACwF,EAAaC,CAAc,EAAIzF,WAAS,EAAK,EAC9C,CAAC0F,EAAQC,CAAS,EAAI3F,WAAS,EAAG,EAClC,CAAC4F,EAAaC,CAAc,EAAI7F,WAAS,CAAC,EAC1C,CAAC8F,EAAUC,CAAW,EAAI/F,WAAS,CAAC,EACpCgG,EAAWC,SAAyB,IAAI,EACxCC,EAAmBD,SAA6B,IAAI,EAGpD,CAACE,EAAcC,CAAe,EAAIpG,WAAS,gBAAgB,EAC3D,CAACqG,EAAcC,CAAe,EAAItG,WAAmB,EAAE,EACvD,CAACuG,EAAaC,CAAc,EAAIxG,WAAuB,EAAE,EACzD,CAACyG,EAAeC,CAAgB,EAAI1G,WAA6C,CACrF,eAAgB,CAAE,QAAS,GAAM,OAAQ,GAAK,UAAW,QACzD,SAAU,CAAE,QAAS,GAAM,OAAQ,GAAK,UAAW,UACnD,eAAgB,CAAE,QAAS,GAAM,OAAQ,GAAK,UAAW,UACzD,QAAS,CAAE,QAAS,GAAM,OAAQ,GAAK,UAAW,QAClD,WAAY,CAAE,QAAS,GAAM,OAAQ,GAAK,UAAW,OAAO,CAC7D,EACK,CAAC2G,EAAcC,CAAe,EAAI5G,WAAS,EAAK,EAGhD,CAAC6G,EAAYC,CAAa,EAAI9G,WAAmB,CACrD,cACA,sBACA,sBACA,wBACA,yBACA,uBACA,8BACA,yBACA,qBACA,yBACA,uBACA,mBACA,iBACA,qBACA,oBACA,qBACA,0BACA,2BACD,EAGK,CAAC+G,EAAWC,CAAY,EAAIhH,WAChC,MAAM,KAAK,CAAE,OAAQ,IAAM,IAAM,KAAK,SAAW,GAAG,GAItDgB,YAAU,IAAM,CAEd,GAAIoE,GAAaI,EAAa,CAC5B,MAAMyB,EAAW,YAAY,IAAM,CACjCD,EAAaE,GAAQA,EAAK,IAAI,IAAM,KAAK,SAAW,GAAG,CAAC,CAC1D,EAAG,GAAG,EACN,MAAO,IAAM,cAAcD,CAAQ,CACrC,CACF,EAAG,CAAC7B,EAAWI,CAAW,CAAC,EAG3BxE,YAAU,IAAM,CAEd,MAAMiG,EAAW,YAAY,IAAM,OAEjC,GAAI,KAAK,SAAW,GAAK,CACvB,MAAME,EAAwB,CAC5B,GAAI,SAAS,KAAK,KAAK,GACvB,KAAM,CAAC,SAAU,QAAS,QAAS,UAAW,OAAO,EAAE,KAAK,MAAM,KAAK,SAAW,CAAC,CAAC,EACpF,MAAOhB,EACP,MAAOE,EAAa,KAAK,MAAM,KAAK,SAAWA,EAAa,MAAM,CAAC,EACnE,UAAW,CAAC,YAAa,aAAc,WAAY,OAAO,EAAE,KAAK,MAAM,KAAK,SAAW,CAAC,CAAC,EACzF,UAAW,KAAK,MAChB,UAAWQ,EAAW,KAAK,MAAM,KAAK,SAAWA,EAAW,MAAM,CAAC,GAGrEL,EAAeU,GAAQ,CAACC,EAAW,GAAGD,EAAK,MAAM,EAAG,EAAE,CAAC,CAAC,GAGpDE,EAAAX,EAAcN,CAAY,IAA1B,MAAAiB,EAA6B,SAC/BC,EAAeF,CAAS,CAE5B,CACF,EAAG,GAAI,EAEP,MAAO,IAAM,cAAcF,CAAQ,CACrC,EAAG,CAACd,EAAcE,EAAcQ,EAAYJ,CAAa,CAAC,EAE1DzF,YAAU,IAAM,CACd,MAAMsG,EAAQtB,EAAS,QACvB,GAAI,CAACsB,EAAO,OAEZ,MAAMC,EAAa,IAAM1B,EAAeyB,EAAM,WAAW,EACnDE,EAAiB,IAAMzB,EAAYuB,EAAM,UAAY,CAAC,EACtDG,EAAc,IAAMpC,EAAa,EAAK,EAE5C,OAAAiC,EAAM,iBAAiB,aAAcC,CAAU,EAC/CD,EAAM,iBAAiB,iBAAkBE,CAAc,EACvDF,EAAM,iBAAiB,QAASG,CAAW,EAEpC,IAAM,CACXH,EAAM,oBAAoB,aAAcC,CAAU,EAClDD,EAAM,oBAAoB,iBAAkBE,CAAc,EAC1DF,EAAM,oBAAoB,QAASG,CAAW,CAChD,CACF,EAAG,EAAE,EAEL,MAAMC,EAAa,IAAM,CACvB,MAAMJ,EAAQtB,EAAS,QAClBsB,IAEDlC,EACFkC,EAAM,QAENA,EAAM,OAAO,MAAM,QAAQ,KAAK,EAElCjC,EAAa,CAACD,CAAS,EACzB,EAEMuC,EAAa,IAAM,CACvB,MAAML,EAAQtB,EAAS,QAClBsB,IAELA,EAAM,MAAQ,CAAChC,EACfC,EAAW,CAACD,CAAO,EACrB,EAEMsC,EAAsBC,GAA2C,CACrE,MAAMC,EAAY,WAAWD,EAAE,OAAO,KAAK,EAC3ClC,EAAUmC,CAAS,EAEnB,MAAMR,EAAQtB,EAAS,QACnBsB,IACFA,EAAM,OAASQ,EAEnB,EAEMC,EAAcF,GAA2C,CAC7D,MAAMG,EAAU,WAAWH,EAAE,OAAO,KAAK,EACzChC,EAAemC,CAAO,EAEtB,MAAMV,EAAQtB,EAAS,QACnBsB,IACFA,EAAM,YAAcU,EAExB,EAEMC,EAAiB,SAAY,CACjC,GAAI,CACF,MAAMC,EAAS,MAAM,UAAU,aAAa,aAAa,CAAE,MAAO,GAAM,EAClEC,EAAgB,IAAI,cAAcD,CAAM,EAC9ChC,EAAiB,QAAUiC,EAE3B,MAAMC,EAAqB,GAE3BD,EAAc,gBAAmBvH,GAAU,CACzCwH,EAAO,KAAKxH,EAAM,IAAI,CACxB,EAEAuH,EAAc,OAAS,IAAM,CAC3B,MAAME,EAAO,IAAI,KAAKD,EAAQ,CAAE,KAAM,YAAa,EAC7CE,GAAW,IAAI,gBAAgBD,CAAI,EACnCE,GAAW,aAAa,KAAK,KAAK,OACxCzB,EAAcI,IAAQ,CAAC,GAAGA,GAAMqB,EAAQ,CAAC,EACzC,QAAQ,IAAI,mBAAoBA,EAAQ,CAC1C,EAEAJ,EAAc,QACd1C,EAAe,EAAI,CACrB,OAAS1E,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,CAClD,CACF,EAEMyH,EAAgB,IAAM,CACtBtC,EAAiB,SAAWV,IAC9BU,EAAiB,QAAQ,OACzBA,EAAiB,QAAQ,OAAO,YAAY,QAAQuC,GAASA,EAAM,MAAM,EACzEhD,EAAe,EAAK,EAExB,EAEMiD,EAAcC,GAAiB,CACnC,MAAMC,EAAU,KAAK,MAAMD,EAAO,EAAE,EAC9BE,EAAU,KAAK,MAAMF,EAAO,EAAE,EACpC,MAAO,GAAGC,CAAO,IAAIC,EAAQ,WAAW,SAAS,EAAG,GAAG,CAAC,EAC1D,EAEMxB,EAAkBzG,GAAsB,OAC5C,GAAIA,EAAM,WAAa,CAAC0E,EAAS,CAC/B,MAAMgC,EAAQ,IAAI,MAAM,UAAU1G,EAAM,SAAS,EAAE,EAC7CkI,IAAW1B,EAAAX,EAAc7F,EAAM,KAAK,IAAzB,YAAAwG,EAA4B,SAAU1B,EACvD4B,EAAM,OAASwB,EACfxB,EAAM,OAAO,MAAM,QAAQ,KAAK,CAClC,CACF,EAEMyB,EAAqBC,GAAqB,CAC9C5C,EAAgB4C,CAAQ,EAExB,MAAMC,EAAyB,CAC7B,GAAI,SAAS,KAAK,KAAK,GACvB,KAAM,QACN,MAAOD,EACP,UAAW,mBACX,UAAW,KAAK,MAChB,UAAW,sBAEbxC,EAAeU,GAAQ,CAAC+B,EAAY,GAAG/B,EAAK,MAAM,EAAG,EAAE,CAAC,CAAC,EACzDG,EAAe4B,CAAU,CAC3B,EAEMC,EAAYC,GAAsB,CACtC,GAAI,CAAC9C,EAAa,SAAS8C,CAAS,EAAG,CACrC7C,EAAgBY,GAAQ,CAAC,GAAGA,EAAMiC,CAAS,CAAC,EAC5C,MAAMC,EAAyB,CAC7B,GAAI,SAAS,KAAK,KAAK,GACvB,KAAM,QACN,MAAOjD,EACP,MAAOgD,EACP,UAAW,iBACX,UAAW,KAAK,MAChB,UAAW,uBAEb3C,EAAeU,GAAQ,CAACkC,EAAY,GAAGlC,EAAK,MAAM,EAAG,EAAE,CAAC,CAAC,EACzDG,EAAe+B,CAAU,CAC3B,CACF,EAEMC,EAAeF,GAAsB,CACzC7C,KAAwBY,EAAK,OAAOhD,GAASA,IAAUiF,CAAS,CAAC,CACnE,EAEMG,EAAiBC,GAAqB,CAC1C,MAAMjC,EAAQ,IAAI,MAAM,UAAUiC,CAAQ,EAAE,EAC5CjC,EAAM,OAAS5B,EACf4B,EAAM,OAAO,MAAM,QAAQ,KAAK,CAClC,EAEMkC,EAAqBC,IACV,CACb,OAAQ,cACR,MAAO,eACP,MAAO,gBACP,QAAS,eACT,MAAO,eAEKA,CAA2B,GAAK,cAGhD,OACEzH,OAAC,OAAI,UAAU,mBACb,UAAAA,OAAC,OAAI,UAAU,cACb,UAAAA,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACQ,GAAA,CAAQ,KAAM,GAAI,EAAE,gCAEvB,EACAT,OAAC,OAAI,UAAU,6CACb,UAAAA,OAAC,QAAK,oBAAOC,MAAC,UAAO,UAAU,sBAAuB,SAAAkE,CAAA,CAAa,GAAS,SAC3E,QAAK,qBAAQlE,MAAC,UAAO,UAAU,sBAAuB,WAAa,OAAO,GAAS,SACnF,QAAK,qBAAQA,MAAC,UAAO,UAAU,sBAAuB,WAAY,OAAO,GAAS,GACrF,GACF,EAGAD,OAAC,OAAI,UAAU,mCACb,UAAAA,OAAC,OAAI,UAAU,yCACb,UAAAC,MAAC,MAAG,UAAU,cAAc,6BAAiB,EAC7CA,MAAC,UACC,QAAS,IAAM2E,EAAgB,CAACD,CAAY,EAC5C,UAAU,4BAEV,SAAA1E,MAACM,GAAA,CAAS,KAAM,GAAI,GACtB,EACF,EAEAN,MAAC,OAAI,UAAU,yBACZ,gBAAO,KAAKwE,CAAa,EAAE,IAAIiD,GAC9BzH,MAAC,UAEC,QAAS,IAAM8G,EAAkBW,CAAK,EACtC,UAAW,oBACTvD,IAAiBuD,EACb,cACA,eACN,GAEC,SAAAA,EAAM,OAAO,CAAC,EAAE,cAAgBA,EAAM,MAAM,CAAC,GARzCA,CAAA,CAUR,EACH,GACF,EAGA1H,OAAC,OAAI,UAAU,mCACb,UAAAC,MAAC,MAAG,UAAU,mBAAmB,yBAAa,QAC7C,OAAI,UAAU,4BACZ,SAAAoE,EAAa,IAAInC,GAChBlC,OAAC,QAEC,UAAU,iFAEV,UAAAC,MAACI,EAAA,CAAS,KAAM,GAAI,EACnB6B,EACDjC,MAAC,UACC,QAAS,IAAMoH,EAAYnF,CAAK,EAChC,UAAU,kDACX,cAED,GAVKA,CAAA,CAYR,EACH,EAEAjC,MAAC,OAAI,UAAU,yBACZ,UAAC,WAAY,UAAW,WAAY,SAAU,UAAW,cAAc,EAAE,IAAIiC,GAC5ElC,OAAC,UAEC,QAAS,IAAMkH,EAAShF,CAAK,EAC7B,SAAUmC,EAAa,SAASnC,CAAK,EACrC,UAAU,mDACX,iBACMA,CAAA,GALAA,CAAA,CAOR,EACH,GACF,EAGAlC,OAAC,OAAI,UAAU,iBACb,UAAAC,MAAC,UAAO,UAAU,eAAe,QAAS,IAAM,QAAQ,IAAI,gBAAgB,EAC1E,SAAAA,MAAC0H,GAAA,CAAS,KAAM,GAAI,EACtB,QAEC,UAAO,UAAU,eAAe,QAASjC,EACvC,SAAAtC,EAAYnD,MAAC0C,GAAA,CAAM,KAAM,GAAI,EAAK1C,MAACwC,GAAA,CAAK,KAAM,GAAI,EACrD,EAEAxC,MAAC,UAAO,UAAU,eAAe,QAAS,IAAM,QAAQ,IAAI,YAAY,EACtE,SAAAA,MAAC2H,GAAA,CAAY,KAAM,GAAI,EACzB,QAEC,UAAO,UAAU,eAAe,QAASjC,EACvC,SAAArC,EAAUrD,MAAC4H,GAAA,CAAQ,KAAM,GAAI,EAAK5H,MAACQ,GAAA,CAAQ,KAAM,GAAI,EACxD,EAEAR,MAAC,SACC,KAAK,QACL,IAAI,IACJ,IAAI,IACJ,KAAK,MACL,MAAOyD,EACP,SAAUkC,EACV,UAAU,SAGZ3F,MAAC,UACC,UAAW,gBAAgBuD,EAAc,aAAe,EAAE,GAC1D,QAASA,EAAcgD,EAAgBP,EAEtC,SAAAzC,QAAesE,GAAA,CAAO,KAAM,GAAI,EAAK7H,MAAC8H,GAAA,CAAI,KAAM,GAAI,GACvD,EACF,EAGA/H,OAAC,OAAI,UAAU,iBACb,UAAAC,MAAC,OAAI,UAAU,kDACZ,WAAU,IAAI,CAAC+H,EAAOC,IACrBhI,MAAC,OAEC,UAAU,+DACV,MAAO,CACL,OAAQ,GAAG,KAAK,IAAI,EAAG+H,CAAK,CAAC,IAC7B,MAAO,MACT,EALKC,CAAA,CAOR,EACH,GACE7E,GAAaI,IAAgBvD,MAAC,OAAI,UAAU,qBAAqB,GACrE,QAGC,OAAI,UAAU,OACb,SAAAD,OAAC,OAAI,UAAU,kCACb,UAAAC,MAAC,QAAK,UAAU,YAAa,SAAAyG,EAAW9C,CAAW,EAAE,EACrD3D,MAAC,SACC,KAAK,QACL,IAAI,IACJ,IAAK6D,GAAY,EACjB,MAAOF,EACP,SAAUmC,EACV,UAAU,SACV,SAAU,CAACjC,CAAA,SAEZ,QAAK,UAAU,YAAa,SAAA4C,EAAW5C,CAAQ,EAAE,GACpD,EACF,EAGA9D,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,MAAG,UAAU,mBAAmB,+BAAmB,EACpDD,OAAC,OAAI,UAAU,qCACZ,UAAAuE,EAAY,MAAM,EAAG,EAAE,EAAE,IAAK3F,GAC7BoB,OAAC,OAEC,UAAU,iGAEV,UAAAA,OAAC,OAAI,UAAU,0BACb,UAAAC,MAAC,OAAI,UAAW,wBAAwBuH,EAAkB5I,EAAM,IAAI,CAAC,GAAI,EACzEoB,OAAC,OAAI,UAAU,UACb,UAAAC,MAAC,OAAI,UAAU,cAAe,SAAArB,EAAM,UAAU,EAC9CoB,OAAC,OAAI,UAAU,qBACZ,UAAApB,EAAM,OAAS,GAAGA,EAAM,KAAK,MAC7B,IAAI,KAAKA,EAAM,SAAS,EAAE,oBAAmB,EAChD,GACF,GACF,EACAqB,MAAC,UACC,QAAS,IAAMrB,EAAM,WAAa0I,EAAc1I,EAAM,SAAS,EAC/D,UAAU,4BACV,SAAU,CAACA,EAAM,UAClB,iBAED,GAnBKA,EAAM,GAqBd,EACA2F,EAAY,SAAW,SACrB,OAAI,UAAU,sCAAsC,+BAErD,GAEJ,GACF,EAGAvE,OAAC,OAAI,UAAU,OACb,UAAAA,OAAC,MAAG,UAAU,mBAAmB,4BAAgB6E,EAAW,OAAO,WAAO,EAC1E5E,MAAC,OAAI,UAAU,qCACZ,WAAW,IAAI,CAACiI,EAAMD,IACrBjI,OAAC,OAEC,UAAW,kGACTkI,IAAS3K,EAAY,mCAAqC,EAC5D,GAEA,UAAA0C,MAAC,QAAK,UAAU,oBAAqB,SAAAiI,EAAK,EAC1CjI,MAAC,UACC,UAAU,4BACV,QAAS,IAAMqH,EAAcY,CAAI,EAClC,iBAED,GAXKD,CAAA,CAaR,EACH,GACF,EAGAjI,OAAC,SACC,IAAKgE,EACL,OAAQ,IAAMX,EAAa,EAAI,EAC/B,QAAS,IAAMA,EAAa,EAAK,EACjC,QAAQ,WAER,UAAApD,MAAC,UAAO,IAAI,oBAAoB,KAAK,aAAa,EAAE,sDAKrD0E,GACC3E,OAAC,OAAI,UAAU,mCACb,UAAAC,MAAC,MAAG,UAAU,mBAAmB,sCAA0B,EAG3DD,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,MAAG,UAAU,2BAA2B,2BAAe,EACxDD,OAAC,OAAI,UAAU,yBACb,UAAAA,OAAC,OACC,UAAAC,MAAC,SAAM,UAAU,qBAAqB,yBAAa,EACnDD,OAAC,UAAO,UAAU,iBAChB,UAAAC,MAAC,UAAO,yBAAa,EACrBA,MAAC,UAAO,oBAAQ,EAChBA,MAAC,UAAO,sBAAU,GACpB,GACF,SACC,OACC,UAAAA,MAAC,SAAM,UAAU,qBAAqB,yBAAa,EACnDD,OAAC,UAAO,UAAU,iBAChB,UAAAC,MAAC,UAAO,wBAAY,EACpBA,MAAC,UAAO,oBAAQ,EAChBA,MAAC,UAAO,yBAAa,GACvB,GACF,GACF,GACF,EAGAD,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,MAAG,UAAU,2BAA2B,mCAAuB,QAC/D,OAAI,UAAU,YACZ,gBAAO,QAAQwE,CAAa,EAAE,IAAI,CAAC,CAACiD,EAAOS,CAAQ,IAClDnI,OAAC,OAAgB,UAAU,0BACzB,UAAAA,OAAC,OAAI,UAAU,yCACb,UAAAC,MAAC,QAAK,UAAU,iCAAkC,SAAAyH,EAAM,EACxD1H,OAAC,SAAM,UAAU,kCACf,UAAAC,MAAC,SACC,KAAK,WACL,QAASkI,EAAS,QAClB,SAAWtC,GAAMnB,EAAiBQ,IAAS,CACzC,GAAGA,EACH,CAACwC,CAAK,EAAG,CAAE,GAAGxC,EAAKwC,CAAK,EAAG,QAAS7B,EAAE,OAAO,QAAQ,EACrD,IACF,WAEJ,GACF,EAEA7F,OAAC,OAAI,UAAU,yBACb,UAAAA,OAAC,OACC,UAAAC,MAAC,SAAM,UAAU,qBAAqB,kBAAM,EAC5CA,MAAC,SACC,KAAK,QACL,IAAI,IACJ,IAAI,IACJ,KAAK,MACL,MAAOkI,EAAS,OAChB,SAAWtC,GAAMnB,EAAiBQ,IAAS,CACzC,GAAGA,EACH,CAACwC,CAAK,EAAG,CAAE,GAAGxC,EAAKwC,CAAK,EAAG,OAAQ,WAAW7B,EAAE,OAAO,KAAK,EAAE,EAC9D,EACF,UAAU,WAEZ7F,OAAC,QAAK,UAAU,qBAAsB,eAAK,MAAMmI,EAAS,OAAS,GAAG,EAAE,KAAC,GAC3E,SAEC,OACC,UAAAlI,MAAC,SAAM,UAAU,qBAAqB,qBAAS,EAC/CD,OAAC,UACC,MAAOmI,EAAS,UAChB,SAAWtC,GAAMnB,EAAiBQ,IAAS,CACzC,GAAGA,EACH,CAACwC,CAAK,EAAG,CAAE,GAAGxC,EAAKwC,CAAK,EAAG,UAAW7B,EAAE,OAAO,MAAa,EAC5D,EACF,UAAU,iBAEV,UAAA5F,MAAC,UAAO,MAAM,MAAM,eAAG,EACvBA,MAAC,UAAO,MAAM,SAAS,kBAAM,EAC7BA,MAAC,UAAO,MAAM,OAAO,gBAAI,IAC3B,EACF,GACF,IAjDQyH,CAkDV,CACD,EACH,GACF,EAGA1H,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,oCACb,UAAAC,MAAC,QAAK,UAAU,UAAU,mCAAuB,EACjDA,MAAC,SAAM,KAAK,WAAW,eAAc,GAAC,GACxC,EAEAD,OAAC,OAAI,UAAU,oCACb,UAAAC,MAAC,QAAK,UAAU,UAAU,mCAAuB,EACjDA,MAAC,SAAM,KAAK,WAAW,eAAc,GAAC,GACxC,EAEAD,OAAC,OAAI,UAAU,oCACb,UAAAC,MAAC,QAAK,UAAU,UAAU,0BAAc,EACxCA,MAAC,SAAM,KAAK,WAAW,eAAc,GAAC,GACxC,EAEAD,OAAC,OAAI,UAAU,oCACb,UAAAC,MAAC,QAAK,UAAU,UAAU,gCAAoB,EAC9CA,MAAC,SAAM,KAAK,WAAW,eAAc,GAAC,GACxC,EAEAD,OAAC,OAAI,UAAU,oCACb,UAAAC,MAAC,QAAK,UAAU,UAAU,wCAA4B,EACtDA,MAAC,SAAM,KAAK,WAAW,eAAc,GAAC,GACxC,GACF,EAGAD,OAAC,OAAI,UAAU,+BACb,UAAAC,MAAC,MAAG,UAAU,2BAA2B,8BAAkB,EAC3DD,OAAC,OAAI,UAAU,+BACb,UAAAA,OAAC,OAAI,uBAAW,UAAU,UAAS,SAClC,OAAI,4BAAgB,OAAO,aAAiB,IAAc,YAAc,iBAAgB,SACxF,OAAI,4BAAgB,OAAO,OAAO,aAAiB,IAAc,YAAc,eAAc,SAC7F,OAAI,4BAAgB,UAAU,aAAe,YAAc,iBAAgB,GAC9E,GACF,GACF,GAEJ,CAEJ,YChkBA,MAAMoI,EAAeC,GAAY,yBAA2B,wBAE/CC,GAAuB,IAAM,CACxC,KAAM,CAACC,EAAUC,CAAW,EAAIxK,WAAuB,EAAE,EACnD,CAACyB,EAAQgJ,CAAS,EAAIzK,WAAkC,IAAI,EAC5D,CAAC0K,EAAQC,CAAS,EAAI3K,WAAkC,IAAI,EAC5D,CAAC4K,EAASC,CAAU,EAAI7K,WAAS,EAAI,EACrC,CAACe,EAAO+J,CAAQ,EAAI9K,WAAwB,IAAI,EAChD,CAACiB,EAAa8J,CAAc,EAAI/K,WAAS,EAAK,EAC9C,CAACgL,EAAaC,CAAc,EAAIjL,WAAsB,IAAI,EAC1D,CAACC,EAAcC,CAAe,EAAIF,WAA2B,IAAI,EAGjEkL,EAAgBxK,cAAY,SAAY,CAC5C,GAAI,CACF,MAAMyK,EAAW,MAAM,MAAM,GAAGf,CAAY,eAAe,EAC3D,GAAI,CAACe,EAAS,GAAI,MAAM,IAAI,MAAM,0BAA0B,EAC5D,MAAMrK,EAAO,MAAMqK,EAAS,OAC5BX,EAAY1J,EAAK,UAAY,EAAE,EAC/BiK,EAAe,EAAI,EACnBD,EAAS,IAAI,EACbG,EAAe,IAAI,IAAM,CAC3B,OAASG,EAAK,CACZN,EAASM,aAAe,MAAQA,EAAI,QAAU,0BAA0B,EACxEL,EAAe,EAAK,CACtB,CACF,EAAG,EAAE,EAECM,EAAc3K,cAAY,SAAY,CAC1C,GAAI,CACF,MAAMyK,EAAW,MAAM,MAAM,GAAGf,CAAY,aAAa,EACzD,GAAI,CAACe,EAAS,GAAI,MAAM,IAAI,MAAM,wBAAwB,EAC1D,MAAMrK,EAAO,MAAMqK,EAAS,OAC5BV,EAAU3J,CAAI,CAChB,OAASsK,EAAK,CACZ,QAAQ,MAAM,0BAA2BA,CAAG,CAC9C,CACF,EAAG,EAAE,EAECE,EAAc5K,cAAY,SAAY,CAC1C,GAAI,CACF,MAAMyK,EAAW,MAAM,MAAM,GAAGf,CAAY,aAAa,EACzD,GAAI,CAACe,EAAS,GAAI,MAAM,IAAI,MAAM,wBAAwB,EAC1D,MAAMrK,EAAO,MAAMqK,EAAS,OAC5BR,EAAU7J,CAAI,CAChB,OAASsK,EAAK,CACZ,QAAQ,MAAM,0BAA2BA,CAAG,CAC9C,CACF,EAAG,EAAE,EAECG,EAAuB,MAAOC,EAAmBC,IAAyC,CAC9F,GAAI,CAaF,GAZAjB,KAAoBtD,EAAK,IAAIwE,GAC3BA,EAAQ,KAAOF,EACX,CAAE,GAAGE,EAAS,OAAQD,IAAW,OAAS,UAAY,YACtDC,CAAA,CACL,EAQG,EANa,MAAM,MAAM,GAAGtB,CAAY,iBAAiBoB,CAAS,WAAY,CAChF,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,KAAK,UAAU,CAAE,OAAAC,EAAQ,EAChC,GAEa,GAAI,MAAM,IAAI,MAAM,aAAaA,CAAM,UAAU,EAG/D,WAAWP,EAAe,GAAI,CAChC,OAASE,EAAK,CACZN,EAASM,aAAe,MAAQA,EAAI,QAAU,aAAaK,CAAM,UAAU,EAC3EP,EAAA,CACF,CACF,EAEMS,EAAmB,SAAY,CACnC,GAAI,CAKF,GAJAd,EAAW,EAAI,EAIX,EAHa,MAAM,MAAM,GAAGT,CAAY,gBAAiB,CAC3D,OAAQ,OACT,GACa,GAAI,MAAM,IAAI,MAAM,6BAA6B,EAC/D,WAAW,IAAM,CACfc,EAAA,EACAG,EAAA,CACF,EAAG,GAAI,CACT,OAASD,EAAK,CACZN,EAASM,aAAe,MAAQA,EAAI,QAAU,6BAA6B,CAC7E,SACEP,EAAW,EAAK,CAClB,CACF,EAGMpK,EAAmBC,cAAY,IAAM,CACzC,GAAI,CAAAT,EAEJ,GAAI,CACF,MAAMU,EAAK,IAAI,UAAU,GAAGyJ,EAAa,QAAQ,OAAQ,IAAI,CAAC,SAAS,EAEvEzJ,EAAG,OAAS,IAAM,CAChB,QAAQ,IAAI,yBAAyB,EACrCoK,EAAe,EAAI,CACrB,EAEApK,EAAG,UAAaC,GAAU,CACxB,GAAI,CACF,MAAME,EAAO,KAAK,MAAMF,EAAM,IAAI,EAElC,OAAQE,EAAK,MACX,IAAK,iBACH2J,EAAU3J,EAAK,MAAM,EACrB,MACF,IAAK,qBACL,IAAK,uBACL,IAAK,iBACHoK,EAAA,EACAG,EAAA,EACA,MACF,IAAK,iBACHV,EAAU7J,EAAK,MAAM,EACrB,MACF,IAAK,sBACHoK,EAAA,EACAG,EAAA,EACA,MAGJJ,EAAe,IAAI,IAAM,CAC3B,OAASG,EAAK,CACZ,QAAQ,MAAM,qCAAsCA,CAAG,CACzD,CACF,EAEAzK,EAAG,QAAU,IAAM,CACjB,QAAQ,IAAI,4BAA4B,EACxCoK,EAAe,EAAK,EACpB7K,EAAgB,IAAI,EAEpB,WAAWO,EAAkB,GAAI,CACnC,EAEAE,EAAG,QAAWI,GAAU,CACtB,QAAQ,MAAM,uBAAwBA,CAAK,EAC3CgK,EAAe,EAAK,CACtB,EAEA7K,EAAgBS,CAAE,CACpB,OAASyK,EAAK,CACZ,QAAQ,MAAM,+BAAgCA,CAAG,EACjDL,EAAe,EAAK,CACtB,CACF,EAAG,CAAC9K,EAAciL,EAAeG,CAAW,CAAC,EAG7CrK,YAAU,MACS,SAAY,CAC3B6J,EAAW,EAAI,EACf,MAAM,QAAQ,IAAI,CAChBK,EAAA,EACAG,EAAA,EACAC,EAAA,CAAY,CACb,EACDT,EAAW,EAAK,CAClB,GAEA,EACApK,EAAA,EAGO,IAAM,CACPR,GACFA,EAAa,OAEjB,GACC,CAACiL,EAAeG,EAAaC,EAAa7K,CAAgB,CAAC,EAG9DO,YAAU,IAAM,CACd,MAAMiG,EAAW,YAAY,IAAM,CAC5BhG,IACHiK,EAAA,EACAG,EAAA,EAEJ,EAAG,GAAK,EAER,MAAO,IAAM,cAAcpE,CAAQ,CACrC,EAAG,CAAChG,EAAaiK,EAAeG,CAAW,CAAC,EAE5C,MAAMO,EAAgB/C,GAChBA,EAAU,GAAW,GAAG,KAAK,MAAMA,CAAO,CAAC,IAC3CA,EAAU,KAAa,GAAG,KAAK,MAAMA,EAAU,EAAE,CAAC,IAClDA,EAAU,MAAc,GAAG,KAAK,MAAMA,EAAU,IAAI,CAAC,KAAK,KAAK,MAAOA,EAAU,KAAQ,EAAE,CAAC,IACxF,GAAG,KAAK,MAAMA,EAAU,KAAK,CAAC,KAAK,KAAK,MAAOA,EAAU,MAAS,IAAI,CAAC,IAG1EgD,EAAuBpC,GAAyB,CACpD,OAAQA,EAAA,CACN,IAAK,aAAc,MAAO,gCAC1B,IAAK,SAAU,MAAO,4BACtB,IAAK,YAAa,MAAO,8BACzB,IAAK,QAAS,MAAO,gCACrB,IAAK,UAAW,MAAO,0BACvB,QAAS,MAAO,4BAEpB,EAEM/H,EAAiBD,GAAmB,CACxC,OAAQA,GACN,IAAK,UACH,aAAQoC,EAAA,CAAY,KAAM,GAAI,UAAU,iBAAiB,EAC3D,IAAK,UACH,aAAQiI,GAAA,CAAO,KAAM,GAAI,UAAU,gBAAgB,EACrD,IAAK,QACH,aAAQpH,EAAA,CAAQ,KAAM,GAAI,UAAU,eAAe,EACrD,IAAK,WACH,aAAQlC,GAAA,CAAc,KAAM,GAAI,UAAU,kBAAkB,EAC9D,IAAK,UACH,aAAQA,GAAA,CAAc,KAAM,GAAI,UAAU,gBAAgB,EAC5D,QACE,aAAQsJ,GAAA,CAAO,KAAM,GAAI,UAAU,gBAAgB,EAEzD,EAEMtK,EAAkBC,GAAmB,CACzC,OAAQA,GACN,IAAK,UACH,MAAO,iBACT,IAAK,UACH,MAAO,gBACT,IAAK,QACH,MAAO,eACT,IAAK,WACH,MAAO,kBACT,IAAK,UACH,MAAO,gBACT,QACE,MAAO,gBAEb,EAGMsK,EAAkBxB,EAAS,UAAY,EAAE,SAAW,SAAS,EAAE,OAC/DyB,EAAgBzB,EAAS,UAAY,EAAE,SAAW,OAAO,EAAE,OAC3D0B,EAAgB1B,EAAS,OAAO,CAACnG,EAAK8H,IAAM9H,EAAM8H,EAAE,QAAQ,eAAgB,CAAC,EAC7EC,EAAc5B,EAAS,OAAO,CAACnG,EAAK8H,IAAM9H,EAAM8H,EAAE,QAAQ,YAAa,CAAC,EACxEE,EAAkB7B,EAAS,OAAO,GAAK,EAAE,UAAU,EAAE,OAE3D,OAAIK,GAAWL,EAAS,SAAW,EAE/BtI,MAAC,OAAI,UAAU,cACb,eAAC,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,eAAC,OAAI,UAAU,eACb,SAAAD,OAAC,OAAI,UAAU,wCACb,gBAACqK,GAAA,CAAU,KAAM,GAAI,UAAU,kCAAkC,EACjEpK,MAAC,QAAK,kCAAsB,GAC9B,EACF,EACF,EACF,EAKFD,OAAC,OAAI,UAAU,cAEb,UAAAA,OAAC,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,UAAAA,OAAC,OAAI,UAAU,cACb,UAAAA,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACS,EAAA,CAAO,KAAM,GAAI,EAAE,qBAEnB,QAAK,UAAW,kCAAkCzB,EAAc,8BAAgC,yBAAyB,GACvH,UAAAA,EAAcgB,MAACW,GAAA,CAAK,KAAM,GAAI,UAAU,cAAc,QAAMC,GAAA,CAAQ,KAAM,GAAI,UAAU,cAAc,EACtG5B,EAAc,YAAc,gBAC/B,GACF,EACAe,OAAC,OAAI,UAAU,kCACb,UAAAA,OAAC,QAAK,UAAU,eAAe,sBAAU+J,CAAA,EAAgB,EACzD/J,OAAC,QAAK,UAAU,aAAa,qBAASgK,CAAA,EAAc,EACpDhK,OAAC,QAAK,UAAU,gBAAgB,sBAAUoK,CAAA,EAAgB,EACzDpB,GACChJ,OAAC,QAAK,UAAU,gBAAgB,sBACpBgJ,EAAY,oBAAmB,EAC3C,GAEJ,GACF,EACAhJ,OAAC,OAAI,UAAU,eACb,UAAAA,OAAC,OAAI,UAAU,oCACb,UAAAC,MAAC,KAAE,oEAAwD,EAC3DD,OAAC,OAAI,UAAU,aACb,UAAAA,OAAC,UACC,UAAU,4BACV,QAAS2J,EACT,SAAUf,EAEV,UAAA3I,MAACoK,IAAU,KAAM,GAAI,UAAWzB,EAAU,eAAiB,GAAI,EAAE,uBAGnE5I,OAAC,UACC,UAAU,4BACV,QAASkJ,EAET,UAAAjJ,MAACoK,GAAA,CAAU,KAAM,GAAI,EAAE,YAEzB,EACF,GACF,EACCtL,SACE,OAAI,UAAU,wEACb,SAAAiB,OAAC,OAAI,UAAU,oBACb,gBAAC0C,EAAA,CAAQ,KAAM,GAAI,UAAU,OAAO,EACnC3D,CAAA,EACH,EACF,GAEJ,GACF,EAGCwJ,EAAS,SAAW,QAClB,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,eAAC,OAAI,UAAU,eACb,SAAAvI,OAAC,OAAI,UAAU,iCACb,gBAACU,EAAA,CAAO,KAAM,GAAI,UAAU,0BAA0B,QACrD,KAAE,UAAU,2BAA2B,iCAAqB,QAC5D,KAAE,UAAU,eACV,SAAAzB,EACG,+DACA,uCAEN,EACCA,GACCe,OAAC,UACC,UAAU,kBACV,QAAS2J,EACT,SAAUf,EAEV,UAAA3I,MAACoK,IAAU,KAAM,GAAI,UAAWzB,EAAU,eAAiB,GAAI,EAAE,sBAEnE,EAEJ,EACF,EACF,EAEAL,EAAS,IAAKmB,GACZ1J,OAAC,OAAqB,UAAW,eAAe0J,EAAQ,WAAa,SAAW,EAAE,GAChF,UAAA1J,OAAC,OAAI,UAAU,aACb,UAAAA,OAAC,OACC,UAAAA,OAAC,OAAI,UAAU,+BACZ,UAAAN,EAAcgK,EAAQ,MAAM,EAC7BzJ,MAAC,MAAG,UAAU,cAAe,WAAQ,KAAK,EAC1CD,OAAC,QAAK,UAAU,wCAAwC,cACpD0J,EAAQ,SACZ,EACAzJ,MAAC,QAAK,UAAW,6BAA6B4J,EAAoBH,EAAQ,IAAI,CAAC,GAC5E,SAAAA,EAAQ,KACX,GACF,EACAzJ,MAAC,KAAE,UAAU,yBAA0B,WAAQ,YAAY,EAC3DD,OAAC,OAAI,UAAU,+BACb,UAAAC,MAAC,QAAK,UAAU,wBAAyB,SAAAyJ,EAAQ,IAAI,EACpDA,EAAQ,KAAK,OAAS,SACpB,OAAI,UAAU,aACZ,SAAAA,EAAQ,KAAK,MAAM,EAAG,CAAC,EAAE,IAAIY,GAC5BrK,MAAC,QAAe,UAAU,wDACvB,SAAAqK,GADQA,CAEX,CACD,EACH,GAEJ,GACF,QAEC,OAAI,UAAU,cACZ,SAAAZ,EAAQ,SAAW,UAClB1J,OAAAW,WAAA,CACE,UAAAV,MAAC,UACC,UAAU,4BACV,QAAS,IAAMsJ,EAAqBG,EAAQ,GAAI,SAAS,EACzD,MAAM,kBAEN,SAAAzJ,MAACgD,GAAA,CAAU,KAAM,GAAI,IAEvBhD,MAAC,UACC,UAAU,4BACV,QAAS,IAAMsJ,EAAqBG,EAAQ,GAAI,MAAM,EACtD,MAAM,eAEN,SAAAzJ,MAAC6J,GAAA,CAAO,KAAM,GAAI,GACpB,EACF,EAEA9J,OAAC,UACC,UAAU,0BACV,QAAS,IAAMuJ,EAAqBG,EAAQ,GAAI,OAAO,EACvD,SAAUA,EAAQ,SAAW,WAC7B,MAAM,gBAEN,UAAAzJ,MAACwC,GAAA,CAAK,KAAM,GAAI,EACfiH,EAAQ,SAAW,WAAa,cAAgB,WAGvD,GACF,EAEA1J,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,eAAgB,SAAAyJ,EAAQ,KAAK,QAC3C,OAAI,UAAU,eAAe,gBAAI,GACpC,EACA1J,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,eAAgB,WAAayJ,EAAQ,QAAQ,MAAM,EAAE,QACnE,OAAI,UAAU,eAAe,kBAAM,GACtC,EACA1J,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,6BAA8B,WAAQ,QAAQ,eAAe,iBAAiB,QAC5F,OAAI,UAAU,eAAe,oBAAQ,GACxC,EACAD,OAAC,OAAI,UAAU,SACb,gBAAC,OAAI,UAAW,gBAAgB0J,EAAQ,QAAQ,YAAc,EAAI,eAAiB,gBAAgB,GAChG,SAAAA,EAAQ,QAAQ,YACnB,QACC,OAAI,UAAU,eAAe,kBAAM,GACtC,GACF,EAGA1J,OAAC,OAAI,UAAU,+BACb,UAAAA,OAAC,OAAI,UAAU,SACb,UAAAA,OAAC,OAAI,UAAU,+BAAgC,UAAA0J,EAAQ,QAAQ,kBAAkB,QAAQ,CAAC,EAAE,MAAE,QAC7F,OAAI,UAAU,eAAe,wBAAY,GAC5C,EACA1J,OAAC,OAAI,UAAU,SACb,UAAAA,OAAC,OAAI,UAAU,+BAAgC,UAAA0J,EAAQ,QAAQ,UAAU,QAAQ,CAAC,EAAE,KAAC,QACpF,OAAI,UAAU,eAAe,qBAAS,GACzC,EACA1J,OAAC,OAAI,UAAU,SACb,UAAAA,OAAC,OAAI,UAAU,6BAA8B,UAAA0J,EAAQ,QAAQ,aAAa,QAAQ,CAAC,EAAE,KAAC,QACrF,OAAI,UAAU,eAAe,kBAAM,GACtC,EACA1J,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAW,gBAAgByJ,EAAQ,WAAa,iBAAmB,cAAc,GACnF,SAAAA,EAAQ,WAAa,MAAQ,KAChC,QACC,OAAI,UAAU,eAAe,mBAAO,GACvC,GACF,EAGA1J,OAAC,OAAI,UAAU,yCACb,UAAAC,MAAC,QAAK,UAAW,uBAAuBT,EAAekK,EAAQ,MAAM,CAAC,GACnE,SAAAA,EAAQ,OAAO,OAAO,CAAC,EAAE,cAAgBA,EAAQ,OAAO,MAAM,CAAC,EAClE,EACCA,EAAQ,SAAW,WAAaA,EAAQ,mBACtC,OAAI,UAAU,6CACb,UAAAzJ,MAAC,OAAI,UAAU,kDAAkD,EAAE,QAErE,EAEDyJ,EAAQ,WACP1J,OAAC,QAAK,UAAU,wBAAwB,wBAC1B,IAAI,KAAK0J,EAAQ,SAAS,EAAE,oBAAmB,EAC7D,GAEJ,IAvHQA,EAAQ,EAwHlB,CACD,EAIH1J,OAAC,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAD,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACM,GAAA,CAAS,KAAM,GAAI,EAAE,mBAExB,EACF,EACAP,OAAC,OAAI,UAAU,eACb,UAAAA,OAAC,OAAI,UAAU,wCACb,UAAAA,OAAC,OAAI,UAAU,SACb,gBAAC,OAAI,UAAU,8BAA+B,SAAA+J,EAAgB,QAC7D,OAAI,UAAU,eAAe,4BAAgB,GAChD,EACA/J,OAAC,OAAI,UAAU,SACb,gBAAC,OAAI,UAAU,4BAA6B,SAAAgK,EAAc,QACzD,OAAI,UAAU,eAAe,2BAAe,GAC/C,EACAhK,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,6BAA8B,SAAAgK,EAAc,iBAAiB,QAC3E,OAAI,UAAU,eAAe,0BAAc,GAC9C,EACAjK,OAAC,OAAI,UAAU,SACb,gBAAC,OAAI,UAAU,+BAAgC,SAAAmK,EAAY,QAC1D,OAAI,UAAU,eAAe,wBAAY,GAC5C,GACF,EAGAnK,OAAC,OAAI,UAAU,4BACb,gBAAC,UAAO,UAAU,kBAAkB,8BAEpC,QACC,UAAO,UAAU,oBAAoB,uBAEtC,QACC,UAAO,UAAU,oBAAoB,qBAEtC,QACC,UAAO,UAAU,oBAAoB,yBAEtC,GACF,GACF,GACF,EAGAA,OAAC,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAA,MAAC,MAAG,UAAU,aAAa,yBAAa,EAC1C,QACC,OAAI,UAAU,eACb,SAAAD,OAAC,OAAI,UAAU,wCACb,UAAAA,OAAC,OACC,gBAAC,SAAM,UAAU,iCAAiC,8BAAkB,EACpEC,MAAC,SACC,KAAK,OACL,aAAa,YACb,UAAU,SACV,YAAY,aACd,EACF,SACC,OACC,gBAAC,SAAM,UAAU,iCAAiC,iCAAqB,EACvED,OAAC,UAAO,UAAU,SAChB,gBAAC,UAAO,MAAM,KAAK,sBAAU,QAC5B,UAAO,MAAM,KAAK,SAAQ,GAAC,oBAAQ,QACnC,UAAO,MAAM,MAAM,qBAAS,GAC/B,GACF,SACC,OACC,gBAAC,SAAM,UAAU,iCAAiC,mCAAuB,QACxE,SAAM,KAAK,WAAW,eAAc,GAAC,UAAU,OAAO,GACzD,SACC,OACC,gBAAC,SAAM,UAAU,iCAAiC,qBAAS,EAC3DA,OAAC,UAAO,UAAU,SAChB,gBAAC,UAAO,MAAM,QAAQ,iBAAK,QAC1B,UAAO,MAAM,OAAO,mBAAO,QAC3B,UAAO,MAAM,OAAO,SAAQ,GAAC,gBAAI,QACjC,UAAO,MAAM,QAAQ,iBAAK,GAC7B,GACF,GACF,EACF,GACF,GACF,CAEJ,EC9jBauK,GAAe,CAC1BC,EACAC,EAA4B,KACL,CACvB,KAAM,CACJ,kBAAAC,EAAoB,IACpB,kBAAAC,EAAoB,IACpB,qBAAAC,EAAuB,IACrBH,EAEE,CAAC3L,EAAM+L,CAAO,EAAI7M,WAA+B,IAAI,EACrD,CAACiB,EAAa8J,CAAc,EAAI/K,WAAS,EAAK,EAC9C,CAAC8M,EAAiBC,CAAkB,EAAI/M,WAAgE,cAAc,EAEtHgN,EAAe/G,SAAyB,IAAI,EAC5CgH,EAAsBhH,SAA8B,IAAI,EACxDiH,EAAsBjH,SAA8B,IAAI,EACxDkH,EAAuBlH,SAAO,CAAC,EAC/BmH,EAAanH,SAAO,EAAI,EAExBoH,EAAgB3M,cAAY,IAAM,CAClCuM,EAAoB,UACtB,aAAaA,EAAoB,OAAO,EACxCA,EAAoB,QAAU,MAE5BC,EAAoB,UACtB,aAAaA,EAAoB,OAAO,EACxCA,EAAoB,QAAU,KAElC,EAAG,EAAE,EAECI,EAAiB5M,cAAY,IAAM,CACnCiM,EAAoB,IACtBO,EAAoB,QAAU,WAAW,IAAM,SACzC9F,EAAA4F,EAAa,UAAb,YAAA5F,EAAsB,cAAe,UAAU,OACjD4F,EAAa,QAAQ,KAAK,KAAK,UAAU,CAAE,KAAM,OAAQ,CAAC,EAC1DM,EAAA,EAEJ,EAAGX,CAAiB,EAExB,EAAG,CAACA,CAAiB,CAAC,EAEhBY,EAAU7M,cAAY,IAAM,CAChC,GAAK0M,EAAW,QAEhB,GAAI,CACFL,EAAmB,YAAY,EAC/BC,EAAa,QAAU,IAAI,UAAUR,CAAG,EAExCQ,EAAa,QAAQ,OAAS,IAAM,CAC7BI,EAAW,UAEhB,QAAQ,IAAI,4BAA6BZ,CAAG,EAC5CzB,EAAe,EAAI,EACnBgC,EAAmB,WAAW,EAC9BI,EAAqB,QAAU,EAC/BG,EAAA,EACF,EAEAN,EAAa,QAAQ,UAAapM,GAAU,CAC1C,GAAKwM,EAAW,QAEhB,GAAI,CACF,MAAMI,EAAa,KAAK,MAAM5M,EAAM,IAAI,EAGxC,GAAI4M,EAAW,OAAS,OACtB,OAGFX,EAAQW,CAAU,CACpB,MAAgB,CACd,QAAQ,KAAK,qCAAsC5M,EAAM,IAAI,CAC/D,CACF,EAEAoM,EAAa,QAAQ,QAAWpM,GAAU,CACxC,GAAKwM,EAAW,UAEhB,QAAQ,IAAI,iCAAkCZ,EAAK5L,EAAM,KAAMA,EAAM,MAAM,EAC3EmK,EAAe,EAAK,EACpBgC,EAAmB,cAAc,EACjCM,EAAA,EAGIzM,EAAM,OAAS,KAAQuM,EAAqB,QAAUP,GAAsB,CAC9EO,EAAqB,UACrB,MAAMM,EAAQ,KAAK,IAAIf,EAAoB,KAAK,IAAI,EAAGS,EAAqB,QAAU,CAAC,EAAG,GAAK,EAE/F,QAAQ,IAAI,iCAAiCM,CAAK,eAAeN,EAAqB,OAAO,IAAIP,CAAoB,GAAG,EAExHK,EAAoB,QAAU,WAAW,IAAM,CACzCG,EAAW,SACbG,EAAA,CAEJ,EAAGE,CAAK,CACV,CACF,EAEAT,EAAa,QAAQ,QAAWjM,GAAU,CACnCqM,EAAW,UAEhB,QAAQ,MAAM,sBAAuBrM,CAAK,EAC1CgM,EAAmB,OAAO,EAC5B,CAEF,OAAShM,EAAO,CACd,QAAQ,MAAM,yCAA0CA,CAAK,EAC7DgM,EAAmB,OAAO,CAC5B,CACF,EAAG,CAACP,EAAKE,EAAmBE,EAAsBU,EAAgBD,CAAa,CAAC,EAE1EK,EAAahN,cAAY,IAAM,CACnC2M,EAAA,EAEIL,EAAa,UACfA,EAAa,QAAQ,MAAM,IAAM,mBAAmB,EACpDA,EAAa,QAAU,MAGzBjC,EAAe,EAAK,EACpBgC,EAAmB,cAAc,CACnC,EAAG,CAACM,CAAa,CAAC,EAEZM,EAAOjN,cAAaI,GAAc,OACtC,KAAIsG,EAAA4F,EAAa,UAAb,YAAA5F,EAAsB,cAAe,UAAU,KACjD,GAAI,CACF,MAAMvG,EAAU,OAAOC,GAAS,SAAWA,EAAO,KAAK,UAAUA,CAAI,EACrEkM,EAAa,QAAQ,KAAKnM,CAAO,CACnC,OAASE,EAAO,CACd,QAAQ,MAAM,oCAAqCA,CAAK,CAC1D,MAEA,QAAQ,KAAK,8CAA8C,CAE/D,EAAG,EAAE,EAEC6M,EAAYlN,cAAY,IAAM,CAClCgN,EAAA,EACAP,EAAqB,QAAU,EAC/B,WAAWI,EAAS,GAAG,CACzB,EAAG,CAACG,EAAYH,CAAO,CAAC,EAGxBvM,mBAAU,KACRuM,EAAA,EAEO,IAAM,CACXH,EAAW,QAAU,GACrBM,EAAA,CACF,GACC,CAACH,EAASG,CAAU,CAAC,EAGxB1M,YAAU,IACD,IAAM,CACXoM,EAAW,QAAU,EACvB,EACC,EAAE,EAEE,CACL,KAAAtM,EACA,YAAAG,EACA,gBAAA6L,EACA,KAAAa,EACA,UAAAC,CAAA,CAEJ,ECjKaC,GAAgD,CAAC,CAC5D,OAAAC,EAAS,uBACX,IAAM,CACJ,KAAM,CAACC,EAAUC,CAAW,EAAIhO,WAA2B,EAAE,EACvD,CAACiO,EAAiBC,CAAkB,EAAIlO,WAAwB,IAAI,EACpE,CAACmO,EAAUC,CAAW,EAAIpO,WAA2B,EAAE,EACvD,CAACqO,EAAWC,CAAY,EAAItO,WAAS,EAAK,EAC1C,CAACe,EAAO+J,CAAQ,EAAI9K,WAAwB,IAAI,EAChD,CAACiB,EAAa8J,CAAc,EAAI/K,WAAS,EAAK,EAC9C,CAACuO,EAAaC,CAAc,EAAIxO,WAAc,IAAI,EAClD,CAACyO,EAAkBC,CAAmB,EAAI1O,WAAgB,EAAE,EAC5D,CAAC2O,EAAcC,CAAe,EAAI5O,WAAc,IAAI,EACpD,CAAC6O,EAAcC,CAAe,EAAI9O,WAAS,EAAE,EAC7C,CAAC+O,EAAgBC,CAAiB,EAAIhP,WAAgB,EAAE,EAGxD,CAAE,KAAMiP,EAAQ,YAAaC,EAAa,KAAMC,GAAW5C,GAC/D,yBACA,CACE,kBAAmB,IACnB,kBAAmB,IACnB,qBAAsB,EACxB,EAGFvL,YAAU,IAAM,CACdoO,EAAA,EACAC,EAAA,CACF,EAAG,EAAE,EAGLrO,YAAU,IAAM,CACd,GAAIiO,EAGF,OAFA,QAAQ,IAAI,8BAA+BA,CAAM,EAEzCA,EAAO,MACb,IAAK,kBACHjB,EAAYiB,EAAO,UAAY,EAAE,EACjCL,EAAgBK,CAAM,EACtB,MAEF,IAAK,mBACHb,EAAYa,EAAO,UAAY,EAAE,EACjC,MAEF,IAAK,kBACCA,EAAO,oBACTP,EAAoBO,EAAO,kBAAkB,EAE/C,MAEF,IAAK,mBACHD,EAAkB9H,GAAQ,CAAC+H,EAAQ,GAAG/H,EAAK,MAAM,EAAG,EAAE,CAAC,CAAC,EACxD,MAEF,IAAK,cACH8G,EAAYiB,EAAO,UAAY,EAAE,EACjCL,EAAgBK,CAAM,EACtB,MAEF,IAAK,gBACHL,EAAgBK,CAAM,EACtB,MAGR,EAAG,CAACA,CAAM,CAAC,EAGXjO,YAAU,IAAM,CACd+J,EAAemE,CAAW,CAC5B,EAAG,CAACA,CAAW,CAAC,EAEhB,MAAME,EAAe,SAAY,CAC/Bd,EAAa,EAAI,EACjBxD,EAAS,IAAI,EAEb,GAAI,CAEF,MAAMK,EAAW,MAAM,MAAM,GAAG2C,CAAM,uBAAuB,EAE7D,GAAI,CAAC3C,EAAS,GACZ,MAAM,IAAI,MAAM,QAAQA,EAAS,MAAM,KAAKA,EAAS,UAAU,EAAE,EAGnE,MAAMrK,EAAO,MAAMqK,EAAS,OAC5B6C,EAAYlN,EAAK,UAAY,EAAE,EAC/BiK,EAAe,EAAI,CAErB,OAASK,EAAK,CACZN,EAASM,aAAe,MAAQA,EAAI,QAAU,yBAAyB,EACvEL,EAAe,EAAK,CACtB,SACEuD,EAAa,EAAK,CACpB,CACF,EAEMe,EAAkB,SAAY,CAClC,GAAI,CACF,MAAMlE,EAAW,MAAM,MAAM,GAAG2C,CAAM,kBAAkB,EACxD,GAAI3C,EAAS,GAAI,CACf,MAAMrK,EAAO,MAAMqK,EAAS,OAC5BqD,EAAe1N,CAAI,CACrB,CACF,OAASsK,EAAK,CACZ,QAAQ,KAAK,mCAAoCA,CAAG,CACtD,CACF,EAEMkE,EAAsB,MAAOC,GAAwB,CACzDjB,EAAa,EAAI,EACjBxD,EAAS,IAAI,EAEb,GAAI,CAEEqE,GACFA,EAAO,CACL,KAAM,uBACN,aAAcI,CAAA,CACf,EAIH,MAAMpE,EAAW,MAAM,MAAM,GAAG2C,CAAM,wBAAwByB,CAAW,EAAE,EAE3E,GAAI,CAACpE,EAAS,GACZ,MAAM,IAAI,MAAM,QAAQA,EAAS,MAAM,KAAKA,EAAS,UAAU,EAAE,EAGnE,MAAMrK,EAAO,MAAMqK,EAAS,OAC5BiD,EAAYtN,EAAK,UAAY,EAAE,EAC/BoN,EAAmBqB,CAAW,CAEhC,OAASnE,EAAK,CACZN,EAASM,aAAe,MAAQA,EAAI,QAAU,yBAAyB,CACzE,SACEkD,EAAa,EAAK,CACpB,CACF,EAEMkB,EAAyB,MAAOC,EAAiBC,IAAyB,CAC9E,GAAKD,EAAQ,OAEb,GAAI,CAEEN,GACFA,EAAO,CACL,KAAM,4BACN,QAAS,CACP,QAAAM,EACA,aAAcE,EAAmBF,CAAO,EACxC,WAAYG,EAAuBH,CAAO,EAC1C,kBAAmB,CACjB,aAAcC,EACd,OAAQ,qBACV,EAEF,aAAcA,CAAA,CACf,EAIH,MAAMvE,EAAW,MAAM,MAAM,GAAG2C,CAAM,wBAAyB,CAC7D,OAAQ,OACR,QAAS,CACP,eAAgB,oBAElB,KAAM,KAAK,UAAU,CACnB,QAAA2B,EACA,aAAcE,EAAmBF,CAAO,EACxC,WAAYG,EAAuBH,CAAO,EAC1C,aAAcC,EACd,kBAAmB,CACjB,OAAQ,qBACR,UAAW,IAAI,OAAO,aAAY,CACpC,CACD,EACF,EAED,GAAIvE,EAAS,GAAI,CACf,MAAM0E,EAAS,MAAM1E,EAAS,OAC9B6D,EAAkB9H,GAAQ,CAAC2I,EAAQ,GAAG3I,EAAK,MAAM,EAAG,EAAE,CAAC,CAAC,CAC1D,CAEF,OAASkE,EAAK,CACZ,QAAQ,MAAM,6BAA8BA,CAAG,EAC/CN,EAAS,6BAA6BM,aAAe,MAAQA,EAAI,QAAU,eAAe,EAAE,CAC9F,CACF,EAEMuE,EAAsBF,GAAmC,CAC7D,MAAMK,EAAaL,EAAQ,MAAM,mBAAmB,EACpD,OAAOK,EAAaA,EAAW,CAAC,EAAI,IACtC,EAEMF,EAA0BH,GAAyC,CACvE,MAAMM,EAA8B,CAAE,YAAaN,CAAA,EAG7CO,EAAmBP,EAAQ,MAAM,sBAAsB,EACzDO,IACFD,EAAO,sBAAwBC,EAAiB,CAAC,GAGnD,MAAMC,EAAcR,EAAQ,MAAM,kBAAkB,EAChDQ,IACFF,EAAO,aAAeE,EAAY,CAAC,GAGrC,MAAMC,EAAeT,EAAQ,MAAM,2BAA2B,EAC9D,OAAIS,IACFH,EAAO,kBAAoBG,EAAa,CAAC,EACzCH,EAAO,mBAAqBG,EAAa,CAAC,GAAK,IAG1CH,CACT,EAEMI,EAAkBvO,GAA0B,CAChD,MAAMwO,EAAQ,CAAC,IAAK,KAAM,KAAM,IAAI,EACpC,IAAIC,EAAOzO,EACP0O,EAAY,EAEhB,KAAOD,GAAQ,MAAQC,EAAYF,EAAM,OAAS,GAChDC,GAAQ,KACRC,IAGF,MAAO,GAAGD,EAAK,QAAQ,CAAC,CAAC,IAAID,EAAME,CAAS,CAAC,EAC/C,EAEMC,EAAiBC,GAA+B,CACpD,MAAMC,EAAO,IAAI,KAAKD,CAAU,EAE1BE,MADU,OACG,UAAYD,EAAK,UAC9BE,EAAW,KAAK,MAAMD,EAAS,GAAK,EACpCE,EAAY,KAAK,MAAMD,EAAW,EAAE,EACpCE,EAAW,KAAK,MAAMD,EAAY,EAAE,EAE1C,OAAID,EAAW,GAAW,GAAGA,CAAQ,QACjCC,EAAY,GAAW,GAAGA,CAAS,QAChC,GAAGC,CAAQ,OACpB,EAEMC,EAAsB,IAAM,CAChC,OAAO,KAAK,wBAAyB,QAAQ,CAC/C,EAEMC,EAAc,CAACxB,EAAqBG,IAAwB,CAChE,OAAO,KAAK,iCAAiCH,CAAW,IAAIG,CAAW,GAAI,QAAQ,CACrF,EAEA,OACE1N,OAAC,OAAI,UAAU,oDAEb,UAAAA,OAAC,OAAI,UAAU,yCACb,UAAAA,OAAC,OAAI,UAAU,8BACb,UAAAC,MAACoB,GAAA,CAAQ,UAAU,wBAAwB,EAC3CpB,MAAC,MAAG,UAAU,mCAAmC,uCAEjD,QACC,OAAI,UAAW,wBAAwBhB,EAAc,eAAiB,YAAY,GAAI,EACtFiO,GACClN,OAAC,OAAI,UAAU,iEACb,UAAAC,MAACK,GAAA,CAAI,UAAU,yBAAyB,EACxCL,MAAC,QAAK,UAAU,yBAAyB,gBAAI,GAC/C,EAED0M,GACC3M,OAAC,OAAI,UAAU,wBAAwB,0BACvB,IAAI,KAAK2M,EAAa,SAAS,EAAE,oBAAmB,EACpE,GAEJ,EAEA3M,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,UACC,QAAS,IAAMwN,EAAuB,gBAAgB,EACtD,UAAU,8GAEV,UAAAvN,MAAC+O,GAAA,CAAS,UAAU,UAAU,EAC9B/O,MAAC,QAAK,yBAAa,KAErBD,OAAC,UACC,QAAS8O,EACT,UAAU,8GAEV,UAAA7O,MAACgP,GAAA,CAAa,UAAU,UAAU,EAClChP,MAAC,QAAK,6BAAiB,IACzB,EACF,GACF,EAGCsM,SACE,OAAI,UAAU,8DACb,SAAAvM,OAAC,OAAI,UAAU,6BACb,UAAAC,MAACiP,GAAA,CAAI,UAAU,+BAA+B,SAC7C,OACC,UAAAlP,OAAC,KAAE,UAAU,wBACX,UAAAC,MAAC,UAAO,+BAAmB,EAAS,MAAI,IACxCA,MAAC,KACC,KAAK,8BACL,OAAO,SACP,IAAI,sBACJ,UAAU,gCACX,sBAED,EACF,EACAA,MAAC,KAAE,UAAU,6BAA6B,oEAE1C,GACF,GACF,EACF,EAIDlB,GACCiB,OAAC,OAAI,UAAU,4DACb,UAAAA,OAAC,KAAE,UAAU,eACX,UAAAC,MAAC,UAAO,6BAAiB,EAAS,IAAElB,CAAA,EACtC,EACAkB,MAAC,UACC,QAASmN,EACT,UAAU,yDACX,6BAED,EACF,EAIDf,GACCrM,OAAC,OAAI,UAAU,wCACb,UAAAC,MAAC,OAAI,UAAU,+DAA+D,EAC9EA,MAAC,QAAK,UAAU,qBAAqB,sBAAU,GACjD,EAID,CAACoM,GAAa,CAACJ,GACdjM,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,MAAG,UAAU,kEACZ,UAAAC,MAACkP,GAAA,CAAS,UAAU,UAAU,SAC7B,QAAK,mCAAuBpD,EAAS,OAAO,KAAC,GAChD,EAECA,EAAS,SAAW,EACnB/L,OAAC,OAAI,UAAU,iCACb,UAAAC,MAACkP,GAAA,CAAS,UAAU,uCAAuC,EAC3DlP,MAAC,KAAE,yCAA6B,EAChCA,MAAC,KAAE,UAAU,UAAU,sDAA0C,GACnE,QAEC,OAAI,UAAU,aACZ,SAAA8L,EAAS,IAAKqD,GAAA,OACbnP,aAAC,OAEC,QAAS,IAAMqN,EAAoB8B,EAAQ,IAAI,EAC/C,UAAU,gHAEV,SAAApP,OAAC,OAAI,UAAU,oCACb,UAAAA,OAAC,OAAI,UAAU,8BACb,UAAAC,MAACoP,GAAA,CAAM,UAAU,wBAAwB,SACxC,OACC,UAAApP,MAAC,MAAG,UAAU,4BAA6B,SAAAmP,EAAQ,KAAK,EACxDpP,OAAC,KAAE,UAAU,wBACV,YAAAoF,EAAAgK,EAAQ,WAAR,YAAAhK,EAAkB,SAAU,EAAE,aACjC,GACF,GACF,QAEC,OAAI,UAAU,aACb,SAAApF,OAAC,OAAI,UAAU,oDACb,UAAAC,MAACa,GAAA,CAAM,UAAU,UAAU,EAC3Bb,MAAC,QAAM,SAAAsO,EAAca,EAAQ,OAAO,EAAE,GACxC,EACF,GACF,GArBKA,EAAQ,MAuBhB,EACH,GAEJ,EAIFpP,OAAC,OAAI,UAAU,wDACb,UAAAA,OAAC,OAAI,UAAU,mCACb,UAAAC,MAACqP,GAAA,CAAQ,UAAU,wBAAwB,EAC3CrP,MAAC,MAAG,UAAU,8BAA8B,uCAA2B,GACzE,EAEAD,OAAC,OAAI,UAAU,iBACb,UAAAC,MAAC,SACC,KAAK,OACL,MAAO4M,EACP,SAAWhH,GAAMiH,EAAgBjH,EAAE,OAAO,KAAK,EAC/C,WAAaA,GAAM,CACbA,EAAE,MAAQ,UACZ2H,EAAuBX,CAAY,EACnCC,EAAgB,EAAE,EAEtB,EACA,YAAY,gFACZ,UAAU,2GAEZ7M,MAAC,UACC,QAAS,IAAM,CACbuN,EAAuBX,CAAY,EACnCC,EAAgB,EAAE,CACpB,EACA,UAAU,kFACX,oBAED,EACF,EAGA7M,MAAC,OAAI,UAAU,4BACZ,UACC,CAAE,MAAO,kBAAmB,IAAK,kDACjC,CAAE,MAAO,gBAAiB,IAAK,eAC/B,CAAE,MAAO,cAAe,IAAK,4CAC7B,CAAE,MAAO,mBAAoB,IAAK,4BAA4B,EAC9D,IAAKsP,GACLtP,MAAC,UAEC,QAAS,IAAMuN,EAAuB+B,EAAS,GAAG,EAClD,UAAU,kGAET,SAAAA,EAAS,OAJLA,EAAS,MAMjB,EACH,GACF,EAGC9C,EAAiB,OAAS,GACzBzM,OAAC,OAAI,UAAU,4DACb,UAAAA,OAAC,OAAI,UAAU,mCACb,UAAAC,MAACqB,GAAA,CAAK,UAAU,0BAA0B,EAC1CrB,MAAC,MAAG,UAAU,gCAAgC,oCAAwB,GACxE,QAEC,OAAI,UAAU,YACZ,SAAAwM,EAAiB,MAAM,EAAG,CAAC,EAAE,IAAI,CAAC+C,EAAKvH,IACtCjI,OAAC,OAAgB,UAAU,gEACzB,UAAAC,MAAC,QAAK,UAAU,kCAAmC,SAAAuP,EAAI,QAAQ,EAC/DvP,MAAC,UACC,QAAS,IAAMuN,EAAuBgC,EAAI,QAASA,EAAI,YAAY,EACnE,UAAU,yEACX,oBAED,GAPQvH,CAQV,CACD,EACH,GACF,EAID8E,EAAe,OAAS,GACvB/M,OAAC,OAAI,UAAU,0DACb,UAAAA,OAAC,OAAI,UAAU,mCACb,UAAAC,MAACI,EAAA,CAAS,UAAU,yBAAyB,EAC7CJ,MAAC,MAAG,UAAU,+BAA+B,qCAAyB,GACxE,QAEC,OAAI,UAAU,qCACZ,SAAA8M,EAAe,MAAM,EAAG,EAAE,EAAE,IAAI,CAAC0C,EAAWxH,IAAA,aAC3CjI,cAAC,OAAgB,UAAU,8BACzB,UAAAA,OAAC,OAAI,UAAU,yCACb,UAAAC,MAAC,QAAK,UAAU,kCACb,WAAAmF,EAAAqK,EAAU,UAAV,YAAArK,EAAmB,YAAWsK,EAAAD,EAAU,SAAV,YAAAC,EAAkB,UAAW,kBAC9D,QACC,QAAK,UAAW,8BACfC,EAAAF,EAAU,SAAV,MAAAE,EAAkB,SAAWF,EAAU,QACnC,8BACA,yBACN,GACG,UAAAG,EAAAH,EAAU,SAAV,MAAAG,EAAkB,SAAWH,EAAU,QAAU,UAAY,SAChE,GACF,EACCA,EAAU,WACTxP,MAAC,OAAI,UAAU,wBACZ,aAAI,KAAKwP,EAAU,SAAS,EAAE,oBAAmB,CACpD,IAhBMxH,CAkBV,EACD,EACH,GACF,EAID,CAACoE,GAAaJ,GACbjM,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,oCACb,UAAAA,OAAC,MAAG,UAAU,kEACZ,UAAAC,MAACI,EAAA,CAAS,UAAU,UAAU,SAC7B,QAAK,yBAAa4L,CAAA,EAAgB,GACrC,EAEAhM,MAAC,UACC,QAAS,IAAM,CACbiM,EAAmB,IAAI,EACvBE,EAAY,EAAE,CAChB,EACA,UAAU,4CACX,+BAED,EACF,EAECD,EAAS,SAAW,EACnBnM,OAAC,OAAI,UAAU,iCACb,UAAAC,MAACI,EAAA,CAAS,UAAU,uCAAuC,EAC3DJ,MAAC,KAAE,6CAAiC,GACtC,QAEC,OAAI,UAAU,YACZ,SAAAkM,EAAS,IAAK0D,GAAA,eACb7P,cAAC,OAEC,QAAS,IAAM+O,EAAY9C,EAAiB4D,EAAQ,IAAI,EACxD,UAAU,gHAEV,UAAA7P,OAAC,OAAI,UAAU,oCACb,UAAAA,OAAC,OAAI,UAAU,8BACb,UAAAC,MAAC,OAAI,UAAW,yBACdmF,EAAAyK,EAAQ,OAAR,MAAAzK,EAAc,SAAS,sBAAwB,gBAAkB,cACnE,GAAI,SACH,OACC,UAAApF,OAAC,OAAI,UAAU,8BACb,UAAAA,OAAC,MAAG,UAAU,kCACX,UAAA6P,EAAQ,KAAK,UAAU,EAAG,CAAC,EAAE,OAChC,IACCH,EAAAG,EAAQ,OAAR,YAAAH,EAAc,SAAS,wBACtBzP,MAAC,QAAK,UAAU,+DAA+D,qBAE/E,IAED0P,EAAAE,EAAQ,OAAR,YAAAF,EAAc,SAAS,2BACtB1P,MAAC,QAAK,UAAU,2DAA2D,yBAE3E,GAEJ,QACC,KAAE,UAAU,wBACV,SAAAkO,EAAe0B,EAAQ,IAAI,EAC9B,EACCA,EAAQ,iBACP7P,OAAC,KAAE,UAAU,+CACV,UAAA6P,EAAQ,gBAAgB,UAAU,EAAG,GAAG,EAAE,OAC7C,GAEJ,GACF,EAEA7P,OAAC,OAAI,UAAU,aACb,UAAAA,OAAC,OAAI,UAAU,oDACb,UAAAC,MAACa,GAAA,CAAM,UAAU,UAAU,EAC3Bb,MAAC,QAAM,SAAAsO,EAAcsB,EAAQ,OAAO,EAAE,GACxC,EACA7P,OAAC,OAAI,UAAU,mCACb,UAAAC,MAACgP,GAAA,CAAa,UAAU,wBAAwB,IAC/CW,EAAAC,EAAQ,OAAR,YAAAD,EAAc,SAAS,wBACtB3P,MAAC,UACC,QAAU4F,GAAM,CACdA,EAAE,kBAEEsH,GACFA,EAAO,CACL,KAAM,sBACN,aAAc0C,EAAQ,KACvB,CAEL,EACA,UAAU,8EAEV,SAAA5P,MAACqP,GAAA,CAAQ,UAAU,UAAU,GAC/B,EAEJ,GACF,GACF,EAECO,EAAQ,aACP7P,OAAC,OAAI,UAAU,6BAA6B,6BAC3B8P,EAAAD,EAAQ,YAAY,QAApB,YAAAC,EAA2B,SAAU,EAAE,UACxD,IAnEGD,EAAQ,MAsEhB,EACH,GAEJ,GAEJ,CAEJ,YCvlBA,MAAME,GAAqB1H,GAAY,+BAAiC,wBAE3D2H,GAAyB,IAAM,CAC1C,KAAM,CAACC,EAAWC,CAAY,EAAIlS,WAA2C,QAAQ,EAC/E,CAACmS,EAAaC,CAAc,EAAIpS,WAA6B,IAAI,EACjE,CAACqS,EAAkBC,CAAmB,EAAItS,WAAkC,IAAI,EAChF,CAACuS,EAAmBC,CAAoB,EAAIxS,WAAuC,MAAM,EACzF,CAACyS,EAAmBC,CAAoB,EAAI1S,WAA6B,EAAE,EAC3E,CAAC2S,EAAcC,CAAe,EAAI5S,WAAS,EAAK,EAChD,CAAC6S,EAAcC,CAAe,EAAI9S,WAAS,EAAK,EAChD,CAAC+S,EAAaC,CAAc,EAAIhT,WAAS,EAAK,EAC9C,CAACiT,EAAkBC,CAAmB,EAAIlT,WAAiB,EAAE,EAG7DmT,EAAmBzS,cAAY,MAAOE,GAA+C,OACzF,MAAMsJ,GAAO9C,EAAAxG,EAAM,OAAO,QAAb,YAAAwG,EAAqB,GAClC,GAAK8C,EAEL,GAAI,CACF,MAAMkJ,EAAU,MAAMlJ,EAAK,OACrBmJ,EAAO,KAAK,MAAMD,CAAO,EAEzBjB,EAA2B,CAC/B,KAAMjI,EAAK,KAAK,QAAQ,QAAS,EAAE,EACnC,QAAAkJ,EACA,QAASC,EAAK,SAAWA,EAAK,SAAW,QACzC,QAASA,EAAK,SAAW,GACzB,KAAMA,EAAK,MAAQ,CAAE,MAAO,MAAO,QAAS,QAAQ,EAGtDjB,EAAeD,CAAW,EAC1BmB,EAAoBnB,CAAW,CACjC,OAASpR,EAAO,CACd,QAAQ,MAAM,gCAAiCA,CAAK,EACpD,MAAM,oCAAoC,CAC5C,CACF,EAAG,EAAE,EAGCwS,EAAkB7S,cAAa0S,GAAoB,OACvD,GAAI,CACF,MAAMC,EAAO,KAAK,MAAMD,CAAO,EAEzBjB,EAA2B,CAC/B,OAAM/K,EAAAiM,EAAK,OAAL,YAAAjM,EAAW,QAAS,MAC1B,QAAAgM,EACA,QAASC,EAAK,SAAWA,EAAK,SAAW,QACzC,QAASA,EAAK,SAAW,GACzB,KAAMA,EAAK,MAAQ,CAAE,MAAO,MAAO,QAAS,QAAQ,EAGtDjB,EAAeD,CAAW,EAC1BmB,EAAoBnB,CAAW,CACjC,OAASpR,EAAO,CACd,QAAQ,MAAM,gCAAiCA,CAAK,CACtD,CACF,EAAG,EAAE,EAGCuS,EAAsB,MAAOD,GAAsB,CACvDT,EAAgB,EAAI,EACpB,GAAI,CACF,MAAMzH,EAAW,MAAM,MAAM,GAAG4G,EAAkB,YAAa,CAC7D,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,KAAK,UAAU,CAAE,KAAM,KAAK,MAAMsB,EAAK,OAAO,EAAG,EACxD,EAED,GAAI,CAAClI,EAAS,GAAI,MAAM,IAAI,MAAM,mBAAmB,EAErD,MAAM0E,EAAS,MAAM1E,EAAS,OAC9BmH,EAAoBzC,CAAM,CAC5B,OAAS9O,EAAO,CACduR,EAAoB,CAClB,MAAO,GACP,OAAQ,CAACvR,aAAiB,MAAQA,EAAM,QAAU,mBAAmB,EACrE,SAAU,GACV,KAAM,CAAE,MAAO,EAAG,WAAY,EAAG,QAAS,EAAE,CAC7C,CACH,SACE6R,EAAgB,EAAK,CACvB,CACF,EAGMY,EAAqB,SAAY,CACrC,GAAI,CAACrB,GAAe,EAACE,GAAA,MAAAA,EAAkB,OAAO,OAE9CS,EAAgB,EAAI,EACpBJ,EAAqB,EAAE,EAEvB,MAAMe,EAAalB,IAAsB,OAAS,CAAC,SAAU,QAAQ,EAAI,CAACA,CAAiB,EAE3F,GAAI,CA6BF,MAAMmB,GA5BU,MAAM,QAAQ,WAC5BD,EAAW,IAAI,MAAOE,GAAc,CAClC,MAAMxI,EAAW,MAAM,MAAM,GAAG4G,EAAkB,aAAa4B,CAAS,GAAI,CAC1E,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,KAAK,UAAU,CACnB,KAAM,KAAK,MAAMxB,EAAY,OAAO,EACpC,QAAS,CACP,WAAYA,EAAY,KACxB,cAAe,GACf,qBAAsB,GACxB,CACD,EACF,EAED,GAAI,CAAChH,EAAS,GAAI,MAAM,IAAI,MAAM,GAAGwI,CAAS,oBAAoB,EAElE,MAAM9D,EAAS,MAAM1E,EAAS,OAC9B,MAAO,CACL,UAAAwI,EACA,QAAS,GACT,OAAQ9D,EAAO,OACf,cAAe,KACf,UAAWA,EAAO,UAEtB,CAAC,IAG8B,IAAI,CAACA,EAAQ5F,IACxC4F,EAAO,SAAW,YACbA,EAAO,MAEP,CACL,UAAW4D,EAAWxJ,CAAK,EAC3B,QAAS,GACT,MAAO4F,EAAO,OAAO,QACrB,cAAe,IAAK,CAGzB,EAED6C,EAAqBgB,CAAgB,CACvC,OAAS3S,EAAO,CACd,QAAQ,MAAM,qBAAsBA,CAAK,CAC3C,SACE+R,EAAgB,EAAK,CACvB,CACF,EAGMc,EAAmB,SAAY,CACnC,MAAMC,EAAoBpB,EAAkB,UAAYqB,EAAE,SAAWA,EAAE,SAAS,EAChF,GAAID,EAAkB,SAAW,EAEjC,CAAAb,EAAe,EAAI,EACnBE,EAAoB,yBAAyB,EAE7C,GAAI,CACF,UAAWrD,KAAUgE,EAanB,GAZAX,EAAoB,aAAarD,EAAO,SAAS,gBAAgB,EAY7D,EAVa,MAAM,MAAM,GAAGkC,EAAkB,UAAW,CAC3D,OAAQ,OACR,QAAS,CAAE,eAAgB,oBAC3B,KAAM,KAAK,UAAU,CACnB,UAAWlC,EAAO,UAClB,UAAWA,EAAO,UAClB,UAAW,GACZ,EACF,GAEa,GAAI,MAAM,IAAI,MAAM,oBAAoBA,EAAO,SAAS,SAAS,EAGjFqD,EAAoB,wCAAwC,EAC5D,WAAW,IAAMA,EAAoB,EAAE,EAAG,GAAI,CAChD,OAASnS,EAAO,CACdmS,EAAoB,sBAAsBnS,aAAiB,MAAQA,EAAM,QAAU,eAAe,EAAE,EACpG,WAAW,IAAMmS,EAAoB,EAAE,EAAG,GAAI,CAChD,SACEF,EAAe,EAAK,CACtB,EACF,EAGMe,EAAyBlE,GAA6B,CAC1D,GAAI,CAACA,EAAO,OAAQ,OAEpB,MAAMxH,EAAO,IAAI,KAAK,CAACwH,EAAO,MAAM,EAAG,CAAE,KAAM,kBAAmB,EAC5DrD,EAAM,IAAI,gBAAgBnE,CAAI,EAC9BlE,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOqI,EACTrI,EAAE,SAAW,GAAGgO,GAAA,YAAAA,EAAa,IAAI,IAAItC,EAAO,SAAS,kBACrD,SAAS,KAAK,YAAY1L,CAAC,EAC3BA,EAAE,QACF,SAAS,KAAK,YAAYA,CAAC,EAC3B,IAAI,gBAAgBqI,CAAG,CACzB,EAEA,OACExK,OAAC,OAAI,UAAU,gBAEb,UAAAA,OAAC,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,UAAAA,OAAC,OAAI,UAAU,cACb,UAAAA,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACqB,GAAA,CAAK,KAAM,GAAI,EAAE,kCAEpB,EACAtB,OAAC,OAAI,UAAU,0BACb,gBAAC,QAAK,UAAU,sDAAsD,wCAEtE,QACC,QAAK,UAAU,wDAAwD,8CAExE,GACF,GACF,EACAA,OAAC,OAAI,UAAU,eACb,UAAAC,MAAC,KAAE,qHAAyG,QAG3G,OAAI,UAAU,gBACb,SAAAA,MAAC,OAAI,UAAU,iBACZ,UACC,CAAE,GAAI,SAAmB,MAAO,oBAAqB,KAAM+R,EAAA,EAC3D,CAAE,GAAI,WAAqB,MAAO,eAAgB,KAAM1R,EAAA,EACxD,CAAE,GAAI,SAAmB,MAAO,iBAAkB,KAAMI,CAAA,CAAO,EAC/D,IAAI,CAAC,CAAE,GAAAuR,EAAI,MAAAzQ,EAAO,KAAMC,KACxBzB,OAAC,UAEC,QAAS,IAAMkQ,EAAa+B,CAAE,EAC9B,UAAW,oEACThC,IAAcgC,EACV,gCACA,sDACN,GAEA,UAAAhS,MAACwB,EAAA,CAAK,KAAM,GAAI,EACfD,CAAA,GATIyQ,CAAA,CAWR,EACH,EACF,GACF,GACF,EAGChC,IAAc,UACbjQ,OAAAW,WAAA,CACE,UAAAX,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAD,OAAC,MAAG,UAAU,aACZ,UAAAC,MAAC+R,GAAA,CAAO,KAAM,GAAI,EAAE,gCAEtB,EACF,QACC,OAAI,UAAU,eACb,SAAAhS,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OACC,gBAAC,SAAM,UAAU,iCAAiC,4BAAgB,EAClEC,MAAC,SACC,KAAK,OACL,OAAO,mBACP,SAAUkR,EACV,UAAU,UACZ,EACF,QAEC,OAAI,UAAU,4BAA4B,kBAAM,SAEhD,OACC,gBAAC,SAAM,UAAU,iCAAiC,8BAAkB,EACpElR,MAAC,YACC,KAAM,GACN,UAAU,2BACV,YAAY,oDACZ,SAAW4F,GAAM0L,EAAgB1L,EAAE,OAAO,KAAK,GACjD,EACF,GACF,EACF,GACF,EAGCsK,GACCnQ,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAD,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACiS,GAAA,CAAS,KAAM,GAAI,EAAE,yBAExB,EACF,QACC,OAAI,UAAU,eACb,SAAAlS,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OAAI,UAAU,yBACb,UAAAA,OAAC,OACC,gBAAC,SAAM,UAAU,sBAAsB,gBAAI,EAC3CC,MAAC,KAAE,UAAU,wBAAyB,WAAY,KAAK,GACzD,SACC,OACC,gBAAC,SAAM,UAAU,sBAAsB,mBAAO,QAC7C,KAAE,UAAU,wBAAyB,SAAAkQ,EAAY,KAAK,QAAQ,GACjE,SACC,OACC,gBAAC,SAAM,UAAU,sBAAsB,2BAAe,EACtDlQ,MAAC,KAAE,UAAU,wBAAyB,WAAY,QAAQ,GAC5D,SACC,OACC,gBAAC,SAAM,UAAU,sBAAsB,mBAAO,EAC9CD,OAAC,KAAE,UAAU,wBAAyB,UAAAmQ,EAAY,QAAQ,OAAO,YAAQ,GAC3E,GACF,EAECA,EAAY,KAAK,aAChBnQ,OAAC,OACC,gBAAC,SAAM,UAAU,sBAAsB,uBAAW,QACjD,KAAE,UAAU,wBAAyB,SAAAmQ,EAAY,KAAK,YAAY,GACrE,GAEJ,EACF,GACF,EAIDQ,GACC1Q,MAAC,OAAI,UAAU,OACb,SAAAA,MAAC,OAAI,UAAU,eACb,SAAAD,OAAC,OAAI,UAAU,wCACb,gBAACmS,GAAA,CAAQ,KAAM,GAAI,UAAU,kCAAkC,EAC/DlS,MAAC,QAAK,+CAAmC,GAC3C,EACF,EACF,EAGDoQ,GACCrQ,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAD,OAAC,MAAG,UAAU,aACX,UAAAqQ,EAAiB,MAChBpQ,MAAC4B,EAAA,CAAY,KAAM,GAAI,UAAU,iBAAiB,QAEjDa,EAAA,CAAQ,KAAM,GAAI,UAAU,eAAe,EAC5C,sBAEJ,EACF,QACC,OAAI,UAAU,eACb,SAAA1C,OAAC,OAAI,UAAU,YAEb,gBAAC,OAAI,UAAW,eACdqQ,EAAiB,MACb,qDACA,8CACN,GACE,SAAArQ,OAAC,OAAI,UAAU,oBACZ,UAAAqQ,EAAiB,MAChBpQ,MAAC4B,EAAA,CAAY,KAAM,GAAI,UAAU,OAAO,QAEvCa,EAAA,CAAQ,KAAM,GAAI,UAAU,OAAO,QAErC,QAAK,UAAU,cACb,SAAA2N,EAAiB,MAAQ,8BAAgC,gCAC5D,GACF,EACF,EAGArQ,OAAC,OAAI,UAAU,yBACb,UAAAA,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,6BAA8B,SAAAoQ,EAAiB,KAAK,MAAM,QACxE,OAAI,UAAU,eAAe,iBAAK,GACrC,EACArQ,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,8BAA+B,SAAAoQ,EAAiB,KAAK,WAAW,QAC9E,OAAI,UAAU,eAAe,sBAAU,GAC1C,EACArQ,OAAC,OAAI,UAAU,SACb,UAAAC,MAAC,OAAI,UAAU,+BAAgC,SAAAoQ,EAAiB,KAAK,QAAQ,QAC5E,OAAI,UAAU,eAAe,mBAAO,GACvC,GACF,EAGCA,EAAiB,OAAO,OAAS,UAC/B,OACC,gBAAC,MAAG,UAAU,gCAAgC,mBAAO,QACpD,MAAG,UAAU,YACX,SAAAA,EAAiB,OAAO,IAAI,CAACtR,EAAOkJ,IACnCjI,OAAC,MAAe,UAAU,wCACxB,gBAAC0C,EAAA,CAAQ,KAAM,GAAI,UAAU,4BAA4B,EACxD3D,CAAA,GAFMkJ,CAGT,CACD,EACH,GACF,EAIDoI,EAAiB,SAAS,OAAS,UACjC,OACC,gBAAC,MAAG,UAAU,mCAAmC,qBAAS,QACzD,MAAG,UAAU,YACX,SAAAA,EAAiB,SAAS,IAAI,CAAC+B,EAASnK,IACvCjI,OAAC,MAAe,UAAU,2CACxB,gBAACQ,GAAA,CAAc,KAAM,GAAI,UAAU,4BAA4B,EAC9D4R,CAAA,GAFMnK,CAGT,CACD,EACH,GACF,GAEJ,EACF,GACF,GAEJ,EAIDgI,IAAc,YACbjQ,OAAAW,WAAA,CACE,UAAAX,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAD,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACM,GAAA,CAAS,KAAM,GAAI,EAAE,2BAExB,EACF,QACC,OAAI,UAAU,eACb,SAAAP,OAAC,OAAI,UAAU,YACb,UAAAA,OAAC,OACC,gBAAC,SAAM,UAAU,iCAAiC,4BAAgB,EAClEC,MAAC,OAAI,UAAU,YACZ,UACC,CAAE,MAAO,SAAU,MAAO,wCAAyC,YAAa,wCAChF,CAAE,MAAO,SAAU,MAAO,+CAAgD,YAAa,4CACvF,CAAE,MAAO,OAAQ,MAAO,kBAAmB,YAAa,mDAAmD,EAC3G,IAAKoS,UACJ,SAAyB,UAAU,4CAClC,UAAApS,MAAC,SACC,KAAK,QACL,KAAK,YACL,MAAOoS,EAAO,MACd,QAAS9B,IAAsB8B,EAAO,MACtC,SAAWxM,GAAM2K,EAAqB3K,EAAE,OAAO,KAAqC,EACpF,UAAU,gBAEX,OACC,UAAA5F,MAAC,OAAI,UAAU,cAAe,SAAAoS,EAAO,MAAM,EAC3CpS,MAAC,OAAI,UAAU,wBAAyB,WAAO,YAAY,GAC7D,IAZUoS,EAAO,KAanB,CACD,EACH,GACF,EAEArS,OAAC,OAAI,UAAU,kDACb,UAAAA,OAAC,OACC,UAAAC,MAAC,KAAE,UAAU,wBACV,SAAAkQ,EAAc,qCAAqCA,EAAY,IAAI,IAAM,kCAC5E,EACCE,GAAoB,CAACA,EAAiB,aACpC,KAAE,UAAU,4BAA4B,0DAEzC,GAEJ,EACApQ,MAAC,UACC,QAASuR,EACT,SAAU,CAACrB,GAAe,EAACE,GAAA,MAAAA,EAAkB,QAASQ,EACtD,UAAU,kBAET,WACC7Q,OAAAW,WAAA,CACE,gBAACwR,GAAA,CAAQ,KAAM,GAAI,UAAU,oBAAoB,EAAE,iBAErD,EAEAnS,OAAAW,WAAA,CACE,gBAAC8B,GAAA,CAAK,KAAM,GAAI,UAAU,OAAO,EAAE,wBAErC,GAEJ,EACF,GACF,EACF,GACF,EAGCgO,EAAkB,OAAS,GAC1BzQ,OAAC,OAAI,UAAU,OAAO,MAAO,CAAE,WAAY,UACzC,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAD,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACqB,GAAA,CAAK,KAAM,GAAI,EAAE,sBAEpB,EACF,EACArB,MAAC,OAAI,UAAU,eACb,eAAC,OAAI,UAAU,YACZ,SAAAwQ,EAAkB,IAAI,CAAC5C,EAAQ5F,WAC7B,OAAgB,UAAW,sBAC1B4F,EAAO,QAAU,+BAAiC,0BACpD,GACE,UAAA7N,OAAC,OAAI,UAAU,yCACb,UAAAA,OAAC,OAAI,UAAU,oBACZ,UAAA6N,EAAO,QACN5N,MAAC4B,EAAA,CAAY,KAAM,GAAI,UAAU,sBAAsB,QAEtDa,EAAA,CAAQ,KAAM,GAAI,UAAU,oBAAoB,SAElD,OACC,UAAA1C,OAAC,MAAG,UAAU,yBAA0B,UAAA6N,EAAO,UAAU,cAAU,QAClE,KAAE,UAAU,wBACV,SAAAA,EAAO,UAAU,gBAAe,CACnC,GACF,GACF,EACCA,EAAO,SAAWA,EAAO,QACxB7N,OAAC,UACC,QAAS,IAAM+R,EAAsBlE,CAAM,EAC3C,UAAU,4BAEV,gBAACyE,GAAA,CAAS,KAAM,GAAI,UAAU,OAAO,EAAE,aAEzC,EAEJ,EAECzE,EAAO,SAAWA,EAAO,kBACvB,OAAI,UAAU,8BACb,UAAA7N,OAAC,OACC,gBAAC,SAAM,UAAU,sBAAsB,uBAAW,QACjD,KAAE,UAAU,wBAAyB,SAAA6N,EAAO,UAAU,KAAK,GAC9D,SACC,OACC,gBAAC,SAAM,UAAU,sBAAsB,gBAAI,QAC1C,KAAE,UAAU,wBAAyB,SAAAA,EAAO,UAAU,KAAK,GAC9D,SACC,OACC,gBAAC,SAAM,UAAU,sBAAsB,qBAAS,EAChD7N,OAAC,KAAE,UAAU,wBAAyB,UAAA6N,EAAO,UAAU,UAAU,OAAO,cAAU,GACpF,GACF,EAGDA,EAAO,OACN5N,MAAC,OAAI,UAAU,wDACZ,WAAO,MACV,IAhDMgI,CAkDV,CACD,EACH,EACF,GACF,GAEJ,EAIDgI,IAAc,UACbjQ,OAAC,OAAI,UAAU,OACb,UAAAC,MAAC,OAAI,UAAU,cACb,SAAAD,OAAC,MAAG,UAAU,aACZ,UAAAC,MAACS,EAAA,CAAO,KAAM,GAAI,EAAE,sBAEtB,EACF,QACC,OAAI,UAAU,eACb,SAAAT,MAAC,OAAI,UAAU,YACZ,SAAAwQ,EAAkB,UAAYqB,EAAE,OAAO,EAAE,OAAS,EACjD9R,OAAAW,WAAA,CACE,UAAAX,OAAC,OACC,gBAAC,KAAE,UAAU,6BAA6B,wFAE1C,QAEC,OAAI,UAAU,YACZ,SAAAyQ,EAAkB,OAAOqB,GAAKA,EAAE,OAAO,EAAE,IAAI,CAACjE,EAAQ5F,IAAA,uBACpD,OAAgB,UAAU,uDACzB,UAAAjI,OAAC,OACC,UAAAA,OAAC,MAAG,UAAU,yBAA0B,UAAA6N,EAAO,UAAU,eAAW,EACpE7N,OAAC,KAAE,UAAU,wBACV,WAAAoF,EAAAyI,EAAO,YAAP,YAAAzI,EAAkB,KAAK,aAAUsK,EAAA7B,EAAO,YAAP,YAAA6B,EAAkB,MACtD,GACF,EACAzP,MAAC,OAAI,UAAU,0BACb,eAAC,QAAK,UAAU,sDAAsD,iBAEtE,EACF,IAXQgI,CAYV,EACD,EACH,GACF,EAEAjI,OAAC,OAAI,UAAU,kDACb,UAAAC,MAAC,OACE,SAAAgR,GACChR,MAAC,KAAE,UAAU,wBAAyB,WAAiB,EAE3D,EACAA,MAAC,UACC,QAAS2R,EACT,SAAUb,EACV,UAAU,kBAET,WACC/Q,OAAAW,WAAA,CACE,gBAACwR,GAAA,CAAQ,KAAM,GAAI,UAAU,oBAAoB,EAAE,gBAErD,EAEAnS,OAAAW,WAAA,CACE,gBAACD,EAAA,CAAO,KAAM,GAAI,UAAU,OAAO,EAAE,sBAEvC,GAEJ,EACF,GACF,EAEAV,OAAC,OAAI,UAAU,iCACb,gBAACU,EAAA,CAAO,KAAM,GAAI,UAAU,0BAA0B,QACrD,KAAE,UAAU,2BAA2B,2CAA+B,QACtE,KAAE,UAAU,eAAe,6DAE5B,EACAT,MAAC,UACC,QAAS,IAAMiQ,EAAa,UAAU,EACtC,UAAU,kBACX,4BAED,EACF,EAEJ,EACF,GACF,GAEJ,CAEJ,EChpBMqC,GAAc,IAAIC,GAExB,SAASC,IAAM,CACb,KAAM,CAACrV,EAAQsV,CAAS,EAAI1U,WAAS,CAAE,OAAQ,EAAG,MAAO,GAAI,EACvD,CAACX,EAAOsV,CAAQ,EAAI3U,WAAS,CAAE,UAAW,EAAG,MAAO,EAAG,EACvD,CAACV,EAAOsV,CAAQ,EAAI5U,WAAS,CAAE,UAAW,EAAG,MAAO,GAAI,EACxD,CAACT,EAAWsV,CAAY,EAAI7U,WAAiB,EAAE,EAI/C,CAAE,KAAAc,EAAM,YAAAG,GAAgBsL,GAAa,yBAA0B,CACnE,kBAAmB,IACnB,kBAAmB,IACpB,EAEDvL,mBAAU,IAAM,CACVF,IAEEA,EAAK,OAAS,eAChB4T,EAAU5T,EAAK,OAAO,EACbA,EAAK,OAAS,cACvB6T,EAAS7T,EAAK,OAAO,EACZA,EAAK,OAAS,cACvB8T,EAAS9T,EAAK,OAAO,EACZA,EAAK,OAAS,eACvB+T,EAAa/T,EAAK,QAAQ,IAAI,EAGpC,EAAG,CAACA,CAAI,CAAC,EAGPmB,MAAC6S,IAAoB,OAAQP,GAC3B,eAACQ,GAAA,CACC,SAAA/S,OAAC,OAAI,UAAU,MAEb,UAAAC,MAAC9C,GAAA,CACC,OAAAC,EACA,MAAAC,EACA,MAAAC,EACA,UAAAC,EACA,YAAA0B,CAAA,SAGD8B,GAAA,EAAW,EAEZd,MAAC,QAAK,UAAU,eACd,gBAAC+S,GAAA,CACC,UAAA/S,MAACgT,GAAM,KAAK,IAAI,QAAShT,MAAC0B,GAAA,CAAe,OAAAvE,EAAgB,EAAI,EAC7D6C,MAACgT,GAAM,KAAK,SAAS,QAAShT,MAACoC,GAAA,CAAY,MAAAhF,EAAc,EAAI,EAC7D4C,MAACgT,GAAM,KAAK,SAAS,QAAShT,MAACkD,GAAA,CAAgB,UAAA5F,EAAsB,EAAI,QACxE0V,EAAA,CAAM,KAAK,OAAO,QAAShT,MAACqI,KAAW,EAAI,QAC3C2K,EAAA,CAAM,KAAK,WAAW,QAAShT,MAAC4L,KAAe,EAAI,QACnDoH,EAAA,CAAM,KAAK,iBAAiB,QAAShT,MAAC+P,KAAa,EAAI,GAC1D,EACF,GACF,EACF,EACF,CAEJ,k/BC5EA,SAASkD,GAAWzI,EAAU,GAAI,CAChC,KAAM,CACJ,UAAA0I,EAAY,GACZ,cAAAC,EACA,eAAAC,EACA,aAAAC,EACA,eAAAC,EACA,gBAAAC,CACJ,EAAM/I,EACJ,IAAIgJ,EACAC,EAEJ,MAAMC,EAAsB,MAAOC,EAAc,KAAS,CACxD,MAAMF,CAIR,EACA,eAAeG,GAAW,CACxB,GAAI,kBAAmB,UAAW,CAOhC,GANAJ,EAAK,MAAKK,GAAA,wBAAAC,CAAA,OAAC,QAAO,uCAAgB,iBAAAA,EAAA,MAAE,KAAK,CAAC,CAAE,QAAAA,KACnC,IAAIA,EAAQ,SAAU,CAAE,MAAO,IAAK,KAAM,UAAW,CAC7D,EAAE,MAAOlO,GAAM,CACd2N,GAAA,MAAAA,EAAkB3N,EAEpB,CAAC,EACG,CAAC4N,EACH,OAMEA,EAAG,iBAAiB,YAAc7U,GAAU,EACtCA,EAAM,UAAYA,EAAM,aAC1B,OAAO,SAAS,OAAM,CAC1B,CAAC,EACD6U,EAAG,iBAAiB,YAAc7U,GAAU,CACrCA,EAAM,UACTyU,GAAA,MAAAA,GAEJ,CAAC,EAgCLI,EAAG,SAAS,CAAE,UAAAN,CAAS,CAAE,EAAE,KAAMrB,GAAM,CACjCyB,EACFA,EAAe,SAAUzB,CAAC,EAE1BwB,GAAA,MAAAA,EAAexB,EACnB,CAAC,EAAE,MAAOjM,GAAM,CACd2N,GAAA,MAAAA,EAAkB3N,EACpB,CAAC,CACH,CACF,CACA,OAAA6N,EAAkBG,EAAQ,EACnBF,CACT,CChFA,MAAMK,GAAWd,GAAW,CAC1B,eAAgB,CACd,QAAQ,IAAI,yCAAyC,EAErDc,GAAS,EAAI,CACf,EACA,gBAAiB,CACf,QAAQ,IAAI,6BAA6B,EAEzCC,GAAA,CACF,EACA,aAAanC,EAAG,CACd,QAAQ,IAAI,+BAAgCA,CAAC,CAC/C,EACA,gBAAgB/S,EAAO,CACrB,QAAQ,MAAM,uCAAwCA,CAAK,CAC7D,CACF,CAAC,EAGD,SAASkV,IAA0B,CACjC,MAAMC,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAY;AAAA;AAAA;AAAA;AAAA,IAKzB,SAAS,KAAK,YAAYA,CAAY,EAGtC,WAAW,IAAM,CACfA,EAAa,QACf,EAAG,GAAI,CACT,CAGA,OAAO,iBAAiB,SAAU,IAAM,CACtC,QAAQ,IAAI,gBAAgB,EAC5BC,GAAkB,QAAQ,CAC5B,CAAC,EAED,OAAO,iBAAiB,UAAW,IAAM,CACvC,QAAQ,IAAI,iBAAiB,EAC7BA,GAAkB,SAAS,CAC7B,CAAC,EAED,SAASA,GAAkB1U,EAA8B,CACvD,MAAMyU,EAAe,SAAS,cAAc,KAAK,EAC3CE,EAAW3U,IAAW,SAE5ByU,EAAa,UAAY;AAAA,sEAC2CE,EAAW,UAAY,SAAS;AAAA,QAC9FA,EAAW,iBAAmB,oBAAoB;AAAA;AAAA,IAGxD,SAAS,KAAK,YAAYF,CAAY,EAGtC,WAAW,IAAM,CACfA,EAAa,QACf,EAAG,GAAI,CACT,CAGI,gBAAiB,QACnB,OAAO,iBAAiB,OAAQ,IAAM,SACpC,MAAMG,EAAa,YAAY,iBAAiB,YAAY,EAAE,CAAC,EAC/D,QAAQ,IAAI,4BAA6B,CACvC,iBAAkBA,EAAW,yBAA2BA,EAAW,2BACnE,aAAcA,EAAW,aAAeA,EAAW,eACnD,YAAYjP,EAAA,YAAY,iBAAiB,aAAa,EAAE,CAAC,IAA7C,YAAAA,EAAgD,UAC5D,sBAAsBsK,EAAA,YAAY,iBAAiB,wBAAwB,EAAE,CAAC,IAAxD,YAAAA,EAA2D,UAClF,CACH,CAAC,EAIH,MAAM4E,WAAyBC,GAAM,SAGnC,CACA,YAAYC,EAAsC,CAChD,MAAMA,CAAK,EACX,KAAK,MAAQ,CAAE,SAAU,GAC3B,CAEA,OAAO,yBAAyBzV,EAAc,CAC5C,MAAO,CAAE,SAAU,GAAM,MAAAA,CAAA,CAC3B,CAEA,kBAAkBA,EAAc0V,EAA4B,CAC1D,QAAQ,MAAM,sCAAuC1V,EAAO0V,CAAS,CACvE,CAEA,QAAS,CACP,OAAI,KAAK,MAAM,SAEXzU,OAAC,OAAI,MAAO,CACV,QAAS,OACT,cAAe,SACf,WAAY,SACZ,eAAgB,SAChB,OAAQ,QACR,QAAS,OACT,UAAW,SACX,gBAAiB,UACjB,MAAO,SAEP,UAAAC,MAAC,MAAG,MAAO,CAAE,aAAc,QAAU,gCAAoB,EACzDA,MAAC,KAAE,MAAO,CAAE,aAAc,OAAQ,QAAS,IAAO,iFAElD,EACAA,MAAC,UACC,QAAS,IAAM,OAAO,SAAS,SAC/B,MAAO,CACL,WAAY,UACZ,MAAO,QACP,OAAQ,OACR,QAAS,YACT,aAAc,MACd,OAAQ,UACR,SAAU,QAEb,wBAED,EACF,EAIG,KAAK,MAAM,QACpB,CACF,CAGAyU,GAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,OACpDzU,MAACsU,GAAM,WAAN,CACC,eAACD,GAAA,CACC,SAAArU,MAACwS,GAAA,EAAI,EACP,EACF,CACF","names":["m","require$$0","client","Statusline","agents","tasks","hooks","lastAudio","legacyIsConnected","enableWebSocket","wsUrl","theme","showPerformanceMetrics","compactMode","statuslineData","setStatuslineData","useState","wsConnection","setWsConnection","connectionStatus","setConnectionStatus","lastUpdateTime","setLastUpdateTime","renderStartTime","setRenderStartTime","connectWebSocket","useCallback","ws","event","message","data","error","useEffect","isConnected","effectiveData","createFallbackData","getCostColor","cost","limit","percentage","getStatusColor","status","getStatusIcon","formatBytes","bytes","k","sizes","i","jsxs","jsx","GitBranch","Cpu","DollarSign","Activity","Zap","Settings","AlertTriangle","Volume2","Server","Fragment","Wifi","WifiOff","Clock","Navigation","location","useLocation","navItems","Home","CheckSquare","Monitor","Code","path","label","Icon","Link","AgentDashboard","agentList","CheckCircle","AlertCircle","getPerformanceColor","performance","Bot","agent","a","sum","TaskMonitor","filter","setFilter","taskList","Play","XCircle","Pause","getStatusClass","filteredTasks","task","taskCounts","t","RotateCcw","count","AudioController","isPlaying","setIsPlaying","isMuted","setIsMuted","isRecording","setIsRecording","volume","setVolume","currentTime","setCurrentTime","duration","setDuration","audioRef","useRef","mediaRecorderRef","currentPhase","setCurrentPhase","activeAgents","setActiveAgents","audioEvents","setAudioEvents","phaseSettings","setPhaseSettings","showSettings","setShowSettings","audioFiles","setAudioFiles","audioData","setAudioData","interval","prev","mockEvent","_a","playAudioEvent","audio","updateTime","updateDuration","handleEnded","togglePlay","toggleMute","handleVolumeChange","e","newVolume","handleSeek","newTime","startRecording","stream","mediaRecorder","chunks","blob","audioUrl","fileName","stopRecording","track","formatTime","time","minutes","seconds","phaseVol","handlePhaseChange","newPhase","phaseEvent","addAgent","agentName","agentEvent","removeAgent","testAudioFile","filename","getEventTypeColor","type","phase","SkipBack","SkipForward","VolumeX","MicOff","Mic","value","index","file","settings","MCP_API_BASE","define_process_env_default","MCPManager","services","setServices","setStatus","config","setConfig","loading","setLoading","setError","setIsConnected","lastUpdated","setLastUpdated","fetchServices","response","err","fetchStatus","fetchConfig","performServiceAction","serviceId","action","service","discoverServices","formatUptime","getServiceTypeColor","Square","runningServices","errorServices","totalRequests","s","totalErrors","healthyServices","RefreshCw","tag","useWebSocket","url","options","reconnectInterval","heartbeatInterval","maxReconnectAttempts","setData","connectionState","setConnectionState","websocketRef","reconnectTimeoutRef","heartbeatTimeoutRef","reconnectAttemptsRef","mountedRef","clearTimeouts","startHeartbeat","connect","parsedData","delay","disconnect","send","reconnect","BrowserMonitor","apiUrl","projects","setProjects","selectedProject","setSelectedProject","sessions","setSessions","isLoading","setIsLoading","attribution","setAttribution","devStackCommands","setDevStackCommands","realTimeData","setRealTimeData","commandInput","setCommandInput","commandHistory","setCommandHistory","wsData","wsConnected","wsSend","loadProjects","loadAttribution","loadProjectSessions","projectName","executeDevStackCommand","command","sessionUuid","extractAgentTarget","parseCommandParameters","result","agentMatch","params","orchestrateMatch","statusMatch","contextMatch","formatFileSize","units","size","unitIndex","formatTimeAgo","dateString","date","diffMs","diffMins","diffHours","diffDays","openOriginalBrowser","openSession","Terminal","ExternalLink","Eye","Database","project","Users","Command","quickCmd","cmd","execution","_b","_c","_d","session","_e","API_GENERATOR_BASE","APIGenerator","activeTab","setActiveTab","openApiSpec","setOpenApiSpec","validationResult","setValidationResult","selectedGenerator","setSelectedGenerator","generationResults","setGenerationResults","isValidating","setIsValidating","isGenerating","setIsGenerating","isDeploying","setIsDeploying","deploymentStatus","setDeploymentStatus","handleFileUpload","content","spec","validateOpenApiSpec","handleSpecInput","generateMCPServers","generators","processedResults","generator","deployMCPServers","successfulResults","r","downloadGeneratedCode","Upload","id","FileText","Loader2","warning","option","Download","queryClient","QueryClient","App","setAgents","setTasks","setHooks","setLastAudio","QueryClientProvider","Router","Routes","Route","registerSW","immediate","onNeedRefresh","onOfflineReady","onRegistered","onRegisteredSW","onRegisterError","wb","registerPromise","updateServiceWorker","_reloadPage","register","__vitePreload","Workbox","updateSW","showOfflineNotification","notification","showNetworkStatus","isOnline","navigation","PWAErrorBoundary","React","props","errorInfo","ReactDOM"],"ignoreList":[0],"sources":["../../node_modules/react-dom/client.js","../../src/components/Statusline.tsx","../../src/components/Navigation.tsx","../../src/components/AgentDashboard.tsx","../../src/components/TaskMonitor.tsx","../../src/components/AudioController.tsx","../../src/components/MCPManager.tsx","../../src/hooks/useWebSocket.ts","../../src/components/BrowserMonitor.tsx","../../src/components/APIGenerator.tsx","../../src/App.tsx","../../../../../../../../../../../@vite-plugin-pwa/virtual:pwa-register","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useEffect, useState, useCallback } from 'react'\r\nimport { GitBranch, DollarSign, Cpu, Volume2, Zap, Settings, WifiOff, Wifi, AlertTriangle, Activity, Clock, Server } from 'lucide-react'\r\nimport './Statusline.css'\r\n\r\n// Ultimate Statusline Component v3.0 - PERFORMANCE OPTIMIZED\r\n// \r\n// Integrates with Ultimate Statusline Manager for real-time updates\r\n// Combines:\r\n// - Claude Powerline (@Owloops) metrics: Cost/Git/Model tracking\r\n// - Dev Stack monitoring (Zach): Agent/Task/Hook orchestration\r\n// - Performance monitoring: 100ms real-time updates\r\n// - WebSocket integration for instant updates\r\n// \r\n// Attribution:\r\n// - Powerline by @Owloops: https://github.com/owloops/claude-powerline\r\n// - Dev Stack orchestration by Zach\r\n// - Ultimate integration for Claude Code v3.0\r\n\r\n// Interface matching Ultimate Statusline Manager output\r\ninterface UltimateStatuslineData {\r\n  powerline: {\r\n    directory: string;\r\n    git: {\r\n      branch: string;\r\n      dirty: boolean;\r\n      ahead: number;\r\n      behind: number;\r\n      stash: number;\r\n      operation?: string;\r\n      upstreamBranch?: string;\r\n    };\r\n    model: {\r\n      id: string;\r\n      displayName: string;\r\n      provider?: string;\r\n      version?: string;\r\n    };\r\n    cost: {\r\n      session: number;\r\n      today: number;\r\n      budget: number;\r\n      remaining: number;\r\n      percentage: number;\r\n    };\r\n    context: {\r\n      tokens: number;\r\n      maxTokens: number;\r\n      percentage: number;\r\n    };\r\n    performance: {\r\n      responseTime: number;\r\n      throughput: number;\r\n      avgResponseTime: number;\r\n    };\r\n  };\r\n  devStack: {\r\n    agents: {\r\n      active: number;\r\n      total: number;\r\n      status: 'idle' | 'working' | 'error';\r\n      byType: { [key: string]: number };\r\n      performance: {\r\n        avgResponseTime: number;\r\n        successRate: number;\r\n        errorCount: number;\r\n      };\r\n    };\r\n    tasks: {\r\n      active: number;\r\n      completed: number;\r\n      total: number;\r\n      queued: number;\r\n      failed: number;\r\n      status: 'none' | 'running' | 'complete' | 'error';\r\n      performance: {\r\n        avgExecutionTime: number;\r\n        throughput: number;\r\n        queueDepth: number;\r\n      };\r\n    };\r\n    hooks: {\r\n      triggered: number;\r\n      total: number;\r\n      errors: number;\r\n      active: number;\r\n      status: 'ready' | 'busy' | 'error';\r\n      performance: {\r\n        avgLatency: number;\r\n        successRate: number;\r\n        concurrentHooks: number;\r\n      };\r\n    };\r\n    audio: {\r\n      enabled: boolean;\r\n      volume: number;\r\n      lastEvent: string;\r\n      status: 'silent' | 'playing' | 'error';\r\n      queue: number;\r\n      performance: {\r\n        latency: number;\r\n        queuedEvents: number;\r\n        eventRate: number;\r\n      };\r\n    };\r\n    system: {\r\n      cpu: number;\r\n      memory: number;\r\n      disk: number;\r\n      network: {\r\n        bytesIn: number;\r\n        bytesOut: number;\r\n        latency: number;\r\n      };\r\n    };\r\n  };\r\n  performance: {\r\n    updateLatency: number;\r\n    dataCollectionTime: number;\r\n    renderTime: number;\r\n    wsLatency: number;\r\n    memoryUsage: number;\r\n    cpuUsage: number;\r\n  };\r\n  timestamp: number;\r\n  updateId: string;\r\n  connectionId?: string;\r\n}\r\n\r\ninterface StatuslineProps {\r\n  // Legacy props for backward compatibility\r\n  agents?: { active: number; total: number; status?: string }\r\n  tasks?: { completed: number; total: number; active?: number; status?: string }\r\n  hooks?: { triggered: number; total: number; errors?: number; status?: string }\r\n  lastAudio?: string\r\n  isConnected?: boolean\r\n  \r\n  // Enhanced Ultimate Statusline integration\r\n  enableWebSocket?: boolean\r\n  wsUrl?: string\r\n  theme?: 'light' | 'dark' | 'tokyo-night' | 'nord'\r\n  showPerformanceMetrics?: boolean\r\n  compactMode?: boolean\r\n}\r\n\r\nexport const Statusline: React.FC<StatuslineProps> = ({\r\n  // Legacy props (backward compatibility)\r\n  agents,\r\n  tasks,\r\n  hooks,\r\n  lastAudio,\r\n  isConnected: legacyIsConnected,\r\n  \r\n  // Enhanced props\r\n  enableWebSocket = true,\r\n  wsUrl = 'ws://localhost:8087',\r\n  theme = 'tokyo-night',\r\n  showPerformanceMetrics = true,\r\n  compactMode = false\r\n}) => {\r\n  // Ultimate Statusline state\r\n  const [statuslineData, setStatuslineData] = useState<UltimateStatuslineData | null>(null)\r\n  const [wsConnection, setWsConnection] = useState<WebSocket | null>(null)\r\n  const [connectionStatus, setConnectionStatus] = useState<'connecting' | 'connected' | 'disconnected'>('disconnected')\r\n  const [lastUpdateTime, setLastUpdateTime] = useState<number>(0)\r\n  const [renderStartTime, setRenderStartTime] = useState<number>(0)\r\n\r\n  // Connection management\r\n  const connectWebSocket = useCallback(() => {\r\n    if (!enableWebSocket) return\r\n\r\n    try {\r\n      setConnectionStatus('connecting')\r\n      const ws = new WebSocket(wsUrl)\r\n\r\n      ws.onopen = () => {\r\n        console.log('🔗 Ultimate Statusline WebSocket connected')\r\n        setConnectionStatus('connected')\r\n        setWsConnection(ws)\r\n        \r\n        // Request initial data\r\n        ws.send(JSON.stringify({ type: 'request_update' }))\r\n      }\r\n\r\n      ws.onmessage = (event) => {\r\n        try {\r\n          const message = JSON.parse(event.data)\r\n          \r\n          if (message.type === 'statusline_update' || message.type === 'statusline_initial') {\r\n            const data = message.data as UltimateStatuslineData\r\n            setStatuslineData(data)\r\n            setLastUpdateTime(Date.now())\r\n            \r\n            // Update render performance metric\r\n            if (data.performance && renderStartTime > 0) {\r\n              data.performance.renderTime = Date.now() - renderStartTime\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing statusline message:', error)\r\n        }\r\n      }\r\n\r\n      ws.onclose = () => {\r\n        console.log('🔌 Ultimate Statusline WebSocket disconnected')\r\n        setConnectionStatus('disconnected')\r\n        setWsConnection(null)\r\n        \r\n        // Reconnect after 3 seconds\r\n        setTimeout(connectWebSocket, 3000)\r\n      }\r\n\r\n      ws.onerror = (error) => {\r\n        console.error('🚨 Ultimate Statusline WebSocket error:', error)\r\n        setConnectionStatus('disconnected')\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to create WebSocket connection:', error)\r\n      setConnectionStatus('disconnected')\r\n    }\r\n  }, [enableWebSocket, wsUrl])\r\n\r\n  // Connect WebSocket on mount\r\n  useEffect(() => {\r\n    connectWebSocket()\r\n    \r\n    return () => {\r\n      if (wsConnection) {\r\n        wsConnection.close()\r\n      }\r\n    }\r\n  }, [connectWebSocket])\r\n\r\n  // Track render performance\r\n  useEffect(() => {\r\n    setRenderStartTime(Date.now())\r\n  })\r\n\r\n  // Fallback to legacy props if no WebSocket data\r\n  const isConnected = connectionStatus === 'connected'\r\n  const effectiveData = statuslineData || createFallbackData()\r\n\r\n  // Helper function to create fallback data when WebSocket is not available\r\n  function createFallbackData(): UltimateStatuslineData {\r\n    return {\r\n      powerline: {\r\n        directory: 'Claude_Code_Dev_Stack_v3',\r\n        git: {\r\n          branch: 'main',\r\n          dirty: false,\r\n          ahead: 0,\r\n          behind: 0,\r\n          stash: 0,\r\n        },\r\n        model: {\r\n          id: 'claude-3-5-sonnet',\r\n          displayName: 'Claude 3.5 Sonnet',\r\n          provider: 'Anthropic',\r\n        },\r\n        cost: {\r\n          session: agents ? 2.45 : 0,\r\n          today: agents ? 8.32 : 0,\r\n          budget: 25.00,\r\n          remaining: 16.68,\r\n          percentage: 33.28,\r\n        },\r\n        context: {\r\n          tokens: 45000,\r\n          maxTokens: 200000,\r\n          percentage: 22.5,\r\n        },\r\n        performance: {\r\n          responseTime: 0,\r\n          throughput: 0,\r\n          avgResponseTime: 0,\r\n        },\r\n      },\r\n      devStack: {\r\n        agents: {\r\n          active: agents?.active || 0,\r\n          total: agents?.total || 28,\r\n          status: (agents?.status as any) || 'idle',\r\n          byType: {},\r\n          performance: {\r\n            avgResponseTime: 0,\r\n            successRate: 100,\r\n            errorCount: 0,\r\n          },\r\n        },\r\n        tasks: {\r\n          active: tasks?.active || 0,\r\n          completed: tasks?.completed || 0,\r\n          total: tasks?.total || 0,\r\n          queued: 0,\r\n          failed: 0,\r\n          status: (tasks?.status as any) || 'none',\r\n          performance: {\r\n            avgExecutionTime: 0,\r\n            throughput: 0,\r\n            queueDepth: 0,\r\n          },\r\n        },\r\n        hooks: {\r\n          triggered: hooks?.triggered || 0,\r\n          total: hooks?.total || 28,\r\n          errors: hooks?.errors || 0,\r\n          active: 0,\r\n          status: (hooks?.status as any) || 'ready',\r\n          performance: {\r\n            avgLatency: 0,\r\n            successRate: 100,\r\n            concurrentHooks: 0,\r\n          },\r\n        },\r\n        audio: {\r\n          enabled: lastAudio !== 'none',\r\n          volume: 0.5,\r\n          lastEvent: lastAudio || 'none',\r\n          status: 'silent',\r\n          queue: 0,\r\n          performance: {\r\n            latency: 0,\r\n            queuedEvents: 0,\r\n            eventRate: 0,\r\n          },\r\n        },\r\n        system: {\r\n          cpu: 0,\r\n          memory: 0,\r\n          disk: 0,\r\n          network: {\r\n            bytesIn: 0,\r\n            bytesOut: 0,\r\n            latency: 0,\r\n          },\r\n        },\r\n      },\r\n      performance: {\r\n        updateLatency: 0,\r\n        dataCollectionTime: 0,\r\n        renderTime: 0,\r\n        wsLatency: 0,\r\n        memoryUsage: 0,\r\n        cpuUsage: 0,\r\n      },\r\n      timestamp: Date.now(),\r\n      updateId: 'fallback',\r\n    }\r\n  }\r\n\r\n  const getProgressColor = (completed: number, total: number) => {\r\n    if (total === 0) return 'text-gray-500'\r\n    const percentage = (completed / total) * 100\r\n    if (percentage >= 80) return 'text-green-500'\r\n    if (percentage >= 50) return 'text-yellow-500'\r\n    return 'text-red-500'\r\n  }\r\n\r\n  const getCostColor = (cost: number, limit: number) => {\r\n    const percentage = (cost / limit) * 100\r\n    if (percentage >= 80) return 'text-red-500'\r\n    if (percentage >= 60) return 'text-yellow-500'\r\n    return 'text-green-500'\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'working':\r\n      case 'running':\r\n      case 'busy':\r\n        return 'text-green-500'\r\n      case 'error':\r\n        return 'text-red-500'\r\n      case 'playing':\r\n        return 'text-blue-500'\r\n      case 'idle':\r\n      case 'ready':\r\n      case 'silent':\r\n      case 'none':\r\n      default:\r\n        return 'text-gray-500'\r\n    }\r\n  }\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'working':\r\n      case 'running':\r\n      case 'busy':\r\n        return '●'\r\n      case 'error':\r\n        return '⚠'\r\n      case 'playing':\r\n        return '▶'\r\n      case 'idle':\r\n      case 'ready':\r\n      case 'silent':\r\n      case 'none':\r\n      default:\r\n        return '○'\r\n    }\r\n  }\r\n\r\n  const formatBytes = (bytes: number) => {\r\n    if (bytes === 0) return '0 B'\r\n    const k = 1024\r\n    const sizes = ['B', 'KB', 'MB', 'GB']\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i]\r\n  }\r\n\r\n  return (\r\n    <div className={`statusline statusline-theme-${theme} ${compactMode ? 'compact' : ''}`}>\r\n      {/* Line 1: Powerline-style (@Owloops) - Directory, Git, Model, Costs */}\r\n      <div className=\"statusline-row powerline\">\r\n        <div className=\"segment directory\">\r\n          <span className=\"icon\">📁</span>\r\n          <span className=\"value\">{effectiveData.powerline.directory}</span>\r\n        </div>\r\n        \r\n        <div className=\"segment git\">\r\n          <GitBranch size={14} />\r\n          <span className=\"value\">{effectiveData.powerline.git.branch}</span>\r\n          {effectiveData.powerline.git.dirty && <span className=\"status-indicator text-yellow-500\">●</span>}\r\n          {(effectiveData.powerline.git.ahead > 0 || effectiveData.powerline.git.behind > 0) && (\r\n            <span className=\"status-indicator text-blue-500\">\r\n              {effectiveData.powerline.git.ahead > 0 && `↑${effectiveData.powerline.git.ahead}`}\r\n              {effectiveData.powerline.git.behind > 0 && `↓${effectiveData.powerline.git.behind}`}\r\n            </span>\r\n          )}\r\n          {effectiveData.powerline.git.stash > 0 && (\r\n            <span className=\"status-indicator text-purple-500\">⧇{effectiveData.powerline.git.stash}</span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"segment model\">\r\n          <Cpu size={14} />\r\n          <span className=\"value\">{effectiveData.powerline.model.displayName}</span>\r\n          {effectiveData.powerline.model.provider && (\r\n            <span className=\"provider text-xs text-gray-400\">({effectiveData.powerline.model.provider})</span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className={`segment cost ${getCostColor(effectiveData.powerline.cost.session, effectiveData.powerline.cost.budget * 0.4)}`}>\r\n          <DollarSign size={14} />\r\n          <span className=\"value\">Session: ${effectiveData.powerline.cost.session.toFixed(2)}</span>\r\n        </div>\r\n        \r\n        <div className={`segment cost ${getCostColor(effectiveData.powerline.cost.today, effectiveData.powerline.cost.budget)}`}>\r\n          <DollarSign size={14} />\r\n          <span className=\"value\">Today: ${effectiveData.powerline.cost.today.toFixed(2)}/${effectiveData.powerline.cost.budget}</span>\r\n          <div className=\"progress-bar mini\">\r\n            <div \r\n              className=\"progress-fill\" \r\n              style={{ width: `${effectiveData.powerline.cost.percentage}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"segment context\">\r\n          <Activity size={14} />\r\n          <span className=\"value\">{(effectiveData.powerline.context.tokens / 1000).toFixed(1)}k tokens</span>\r\n          <div className=\"progress-bar mini\">\r\n            <div \r\n              className=\"progress-fill\" \r\n              style={{ width: `${effectiveData.powerline.context.percentage}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Line 2: Dev Stack Monitoring (Zach) - Agents, Tasks, Hooks, Audio */}\r\n      <div className=\"statusline-row devstack\">\r\n        <div className=\"segment agents\">\r\n          <span className=\"icon\">🤖</span>\r\n          <span className={`value ${getStatusColor(effectiveData.devStack.agents.status)}`}>\r\n            {effectiveData.devStack.agents.active}/{effectiveData.devStack.agents.total}\r\n          </span>\r\n          <span className={`status-indicator ${getStatusColor(effectiveData.devStack.agents.status)}`}>\r\n            {getStatusIcon(effectiveData.devStack.agents.status)}\r\n          </span>\r\n          {effectiveData.devStack.agents.performance.errorCount > 0 && (\r\n            <span className=\"error-count text-red-500\">⚠{effectiveData.devStack.agents.performance.errorCount}</span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"segment tasks\">\r\n          <Zap size={14} />\r\n          <span className={`value ${getStatusColor(effectiveData.devStack.tasks.status)}`}>\r\n            {effectiveData.devStack.tasks.active}/{effectiveData.devStack.tasks.total} \r\n            ({effectiveData.devStack.tasks.completed} done)\r\n          </span>\r\n          {effectiveData.devStack.tasks.queued > 0 && (\r\n            <span className=\"queue-indicator text-orange-500\">Q:{effectiveData.devStack.tasks.queued}</span>\r\n          )}\r\n          <span className={`status-indicator ${getStatusColor(effectiveData.devStack.tasks.status)}`}>\r\n            {getStatusIcon(effectiveData.devStack.tasks.status)}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"segment hooks\">\r\n          <Settings size={14} />\r\n          <span className={`value ${getStatusColor(effectiveData.devStack.hooks.status)}`}>\r\n            {effectiveData.devStack.hooks.triggered}/{effectiveData.devStack.hooks.total}\r\n          </span>\r\n          {effectiveData.devStack.hooks.errors > 0 && (\r\n            <span className=\"status-indicator text-red-500\">\r\n              <AlertTriangle size={12} />\r\n              {effectiveData.devStack.hooks.errors}\r\n            </span>\r\n          )}\r\n          <span className={`status-indicator ${getStatusColor(effectiveData.devStack.hooks.status)}`}>\r\n            {getStatusIcon(effectiveData.devStack.hooks.status)}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"segment audio\">\r\n          <Volume2 size={14} />\r\n          <span className={`value ${getStatusColor(effectiveData.devStack.audio.status)}`}>\r\n            {effectiveData.devStack.audio.enabled ? `${Math.round(effectiveData.devStack.audio.volume * 100)}%` : 'Off'}\r\n            {effectiveData.devStack.audio.queue > 0 && ` (Q:${effectiveData.devStack.audio.queue})`}\r\n          </span>\r\n          <span className={`status-indicator ${getStatusColor(effectiveData.devStack.audio.status)}`}>\r\n            {effectiveData.devStack.audio.enabled ? '🔊' : '🔇'}\r\n          </span>\r\n          <span className=\"last-event text-xs text-gray-400\">{effectiveData.devStack.audio.lastEvent}</span>\r\n        </div>\r\n        \r\n        <div className=\"segment system\">\r\n          <Server size={14} />\r\n          <span className=\"value text-gray-600\">\r\n            CPU:{effectiveData.devStack.system.cpu.toFixed(1)}% \r\n            MEM:{effectiveData.devStack.system.memory.toFixed(1)}%\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"segment connection\">\r\n          {isConnected ? (\r\n            <>\r\n              <Wifi size={14} className=\"text-green-500\" />\r\n              <span className=\"value text-green-500\">{effectiveData.performance.updateLatency}ms</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <WifiOff size={14} className=\"text-red-500\" />\r\n              <span className=\"value text-red-500\">{connectionStatus}</span>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"segment timestamp\">\r\n          <Clock size={14} />\r\n          <span className=\"value text-gray-400\">\r\n            {new Date(effectiveData.timestamp).toLocaleTimeString()}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Performance Metrics Row (Optional) */}\r\n      {showPerformanceMetrics && (\r\n        <div className=\"statusline-row performance\">\r\n          <div className=\"segment perf-update\">\r\n            <Activity size={12} />\r\n            <span className=\"label\">Update:</span>\r\n            <span className=\"value\">{effectiveData.performance.updateLatency}ms</span>\r\n          </div>\r\n          \r\n          <div className=\"segment perf-data\">\r\n            <span className=\"label\">Data:</span>\r\n            <span className=\"value\">{effectiveData.performance.dataCollectionTime}ms</span>\r\n          </div>\r\n          \r\n          <div className=\"segment perf-render\">\r\n            <span className=\"label\">Render:</span>\r\n            <span className=\"value\">{effectiveData.performance.renderTime}ms</span>\r\n          </div>\r\n          \r\n          <div className=\"segment perf-memory\">\r\n            <span className=\"label\">Memory:</span>\r\n            <span className=\"value\">{formatBytes(effectiveData.performance.memoryUsage * 1024 * 1024)}</span>\r\n          </div>\r\n          \r\n          <div className=\"segment update-id\">\r\n            <span className=\"label\">ID:</span>\r\n            <span className=\"value text-xs font-mono\">{effectiveData.updateId.slice(-8)}</span>\r\n          </div>\r\n          \r\n          <div className=\"segment attribution\">\r\n            <span className=\"value text-xs text-gray-500\">\r\n              @Owloops/claude-powerline + Dev Stack v3.0 by Zach\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Home, CheckSquare, Volume2, Server, Monitor, Code } from 'lucide-react'\r\n\r\nexport const Navigation: React.FC = () => {\r\n  const location = useLocation()\r\n\r\n  const navItems = [\r\n    { path: '/', label: 'Dashboard', icon: Home },\r\n    { path: '/tasks', label: 'Tasks', icon: CheckSquare },\r\n    { path: '/audio', label: 'Audio', icon: Volume2 },\r\n    { path: '/mcp', label: 'MCP', icon: Server },\r\n    { path: '/browser', label: 'Browser', icon: Monitor },\r\n    { path: '/api-generator', label: 'API Gen', icon: Code }\r\n  ]\r\n\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <div className=\"nav-container\">\r\n        {navItems.map(({ path, label, icon: Icon }) => (\r\n          <Link\r\n            key={path}\r\n            to={path}\r\n            className={`nav-item ${location.pathname === path ? 'active' : ''}`}\r\n          >\r\n            <Icon size={16} />\r\n            <span>{label}</span>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React from 'react'\r\nimport { Bot, Activity, Zap, Clock, CheckCircle, AlertCircle } from 'lucide-react'\r\n\r\ninterface AgentDashboardProps {\r\n  agents: { active: number; total: number }\r\n}\r\n\r\nexport const AgentDashboard: React.FC<AgentDashboardProps> = ({ agents }) => {\r\n  // Mock agent data - in real implementation, this would come from props or API\r\n  const agentList = [\r\n    {\r\n      id: 'agent-prod-frontend',\r\n      name: 'Production Frontend Agent',\r\n      status: 'active',\r\n      description: 'Building production-grade React applications',\r\n      tasksCompleted: 12,\r\n      uptime: '2h 15m',\r\n      performance: 95\r\n    },\r\n    {\r\n      id: 'agent-testing-automation',\r\n      name: 'Testing Automation Agent',\r\n      status: 'active',\r\n      description: 'Automated testing and quality assurance',\r\n      tasksCompleted: 8,\r\n      uptime: '1h 45m',\r\n      performance: 98\r\n    },\r\n    {\r\n      id: 'agent-ui-ux-design',\r\n      name: 'UI/UX Design Agent',\r\n      status: 'idle',\r\n      description: 'User interface and experience design',\r\n      tasksCompleted: 5,\r\n      uptime: '30m',\r\n      performance: 87\r\n    },\r\n    {\r\n      id: 'agent-mobile-development',\r\n      name: 'Mobile Development Agent',\r\n      status: 'active',\r\n      description: 'Cross-platform mobile app development',\r\n      tasksCompleted: 15,\r\n      uptime: '3h 20m',\r\n      performance: 92\r\n    },\r\n    {\r\n      id: 'agent-backend-development',\r\n      name: 'Backend Development Agent',\r\n      status: 'error',\r\n      description: 'Server-side development and APIs',\r\n      tasksCompleted: 3,\r\n      uptime: '15m',\r\n      performance: 45\r\n    },\r\n    {\r\n      id: 'agent-devops-engineering',\r\n      name: 'DevOps Engineering Agent',\r\n      status: 'active',\r\n      description: 'Infrastructure and deployment automation',\r\n      tasksCompleted: 7,\r\n      uptime: '1h 30m',\r\n      performance: 89\r\n    }\r\n  ]\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return <CheckCircle size={16} className=\"text-green-500\" />\r\n      case 'idle':\r\n        return <Clock size={16} className=\"text-yellow-500\" />\r\n      case 'error':\r\n        return <AlertCircle size={16} className=\"text-red-500\" />\r\n      default:\r\n        return <Activity size={16} className=\"text-gray-500\" />\r\n    }\r\n  }\r\n\r\n  const getPerformanceColor = (performance: number) => {\r\n    if (performance >= 90) return 'text-green-500'\r\n    if (performance >= 70) return 'text-yellow-500'\r\n    return 'text-red-500'\r\n  }\r\n\r\n  return (\r\n    <div className=\"agent-dashboard\">\r\n      {/* Dashboard Header */}\r\n      <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n        <div className=\"card-header\">\r\n          <h2 className=\"card-title\">\r\n            <Bot size={20} />\r\n            Agent Dashboard\r\n          </h2>\r\n          <div className=\"flex items-center gap-4 text-sm\">\r\n            <span className=\"text-success\">\r\n              Active: {agents.active}\r\n            </span>\r\n            <span className=\"text-muted\">\r\n              Total: {agents.total}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <p>Real-time monitoring of all Claude Code Dev Stack agents</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Agent Cards */}\r\n      {agentList.map((agent) => (\r\n        <div key={agent.id} className=\"agent-card\">\r\n          <div className=\"agent-status\">\r\n            {getStatusIcon(agent.status)}\r\n            <span className=\"font-medium\">{agent.name}</span>\r\n          </div>\r\n          \r\n          <p className=\"text-sm text-secondary mb-3\">\r\n            {agent.description}\r\n          </p>\r\n          \r\n          <div className=\"agent-metrics\">\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value\">{agent.tasksCompleted}</div>\r\n              <div className=\"metric-label\">Tasks</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value\">{agent.uptime}</div>\r\n              <div className=\"metric-label\">Uptime</div>\r\n            </div>\r\n            <div className=\"metric\" style={{ gridColumn: '1 / -1' }}>\r\n              <div className={`metric-value ${getPerformanceColor(agent.performance)}`}>\r\n                {agent.performance}%\r\n              </div>\r\n              <div className=\"metric-label\">Performance</div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Performance Bar */}\r\n          <div className=\"mt-3\">\r\n            <div className=\"task-progress\">\r\n              <div \r\n                className=\"task-progress-bar\"\r\n                style={{ width: `${agent.performance}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {/* System Overview */}\r\n      <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n        <div className=\"card-header\">\r\n          <h3 className=\"card-title\">\r\n            <Activity size={18} />\r\n            System Overview\r\n          </h3>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"grid grid-cols-4 gap-4\">\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value text-green-500\">\r\n                {agentList.filter(a => a.status === 'active').length}\r\n              </div>\r\n              <div className=\"metric-label\">Active Agents</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value text-yellow-500\">\r\n                {agentList.filter(a => a.status === 'idle').length}\r\n              </div>\r\n              <div className=\"metric-label\">Idle Agents</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value text-red-500\">\r\n                {agentList.filter(a => a.status === 'error').length}\r\n              </div>\r\n              <div className=\"metric-label\">Error Agents</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value text-blue-500\">\r\n                {agentList.reduce((sum, agent) => sum + agent.tasksCompleted, 0)}\r\n              </div>\r\n              <div className=\"metric-label\">Total Tasks</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Zap, Clock, CheckCircle, XCircle, Play, Pause, RotateCcw } from 'lucide-react'\r\n\r\ninterface TaskMonitorProps {\r\n  tasks: { completed: number; total: number }\r\n}\r\n\r\ninterface Task {\r\n  id: string\r\n  name: string\r\n  description: string\r\n  status: 'pending' | 'running' | 'completed' | 'error'\r\n  progress: number\r\n  startTime: string\r\n  estimatedDuration: string\r\n  agent: string\r\n}\r\n\r\nexport const TaskMonitor: React.FC<TaskMonitorProps> = ({ tasks }) => {\r\n  const [filter, setFilter] = useState<string>('all')\r\n  \r\n  // Mock task data - in real implementation, this would come from WebSocket or API\r\n  const taskList: Task[] = [\r\n    {\r\n      id: 'task-1',\r\n      name: 'Build React Components',\r\n      description: 'Creating reusable UI components for the dashboard',\r\n      status: 'completed',\r\n      progress: 100,\r\n      startTime: '2 hours ago',\r\n      estimatedDuration: '45 minutes',\r\n      agent: 'agent-prod-frontend'\r\n    },\r\n    {\r\n      id: 'task-2',\r\n      name: 'Setup PWA Configuration',\r\n      description: 'Configuring service worker and manifest for PWA support',\r\n      status: 'running',\r\n      progress: 75,\r\n      startTime: '30 minutes ago',\r\n      estimatedDuration: '20 minutes',\r\n      agent: 'agent-prod-frontend'\r\n    },\r\n    {\r\n      id: 'task-3',\r\n      name: 'Generate Test Suite',\r\n      description: 'Creating comprehensive unit and integration tests',\r\n      status: 'running',\r\n      progress: 45,\r\n      startTime: '15 minutes ago',\r\n      estimatedDuration: '1 hour',\r\n      agent: 'agent-testing-automation'\r\n    },\r\n    {\r\n      id: 'task-4',\r\n      name: 'Design Mobile Layout',\r\n      description: 'Creating responsive mobile-first design patterns',\r\n      status: 'pending',\r\n      progress: 0,\r\n      startTime: 'Not started',\r\n      estimatedDuration: '1.5 hours',\r\n      agent: 'agent-ui-ux-design'\r\n    },\r\n    {\r\n      id: 'task-5',\r\n      name: 'API Integration',\r\n      description: 'Connecting frontend with backend services',\r\n      status: 'error',\r\n      progress: 25,\r\n      startTime: '1 hour ago',\r\n      estimatedDuration: '30 minutes',\r\n      agent: 'agent-backend-development'\r\n    },\r\n    {\r\n      id: 'task-6',\r\n      name: 'Deploy to Production',\r\n      description: 'Setting up CI/CD pipeline and deployment',\r\n      status: 'pending',\r\n      progress: 0,\r\n      startTime: 'Not started',\r\n      estimatedDuration: '45 minutes',\r\n      agent: 'agent-devops-engineering'\r\n    }\r\n  ]\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircle size={16} className=\"text-green-500\" />\r\n      case 'running':\r\n        return <Play size={16} className=\"text-blue-500\" />\r\n      case 'pending':\r\n        return <Clock size={16} className=\"text-yellow-500\" />\r\n      case 'error':\r\n        return <XCircle size={16} className=\"text-red-500\" />\r\n      default:\r\n        return <Pause size={16} className=\"text-gray-500\" />\r\n    }\r\n  }\r\n\r\n  const getStatusClass = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'completed'\r\n      case 'error':\r\n        return 'error'\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  const filteredTasks = filter === 'all' \r\n    ? taskList \r\n    : taskList.filter(task => task.status === filter)\r\n\r\n  const taskCounts = {\r\n    all: taskList.length,\r\n    running: taskList.filter(t => t.status === 'running').length,\r\n    completed: taskList.filter(t => t.status === 'completed').length,\r\n    pending: taskList.filter(t => t.status === 'pending').length,\r\n    error: taskList.filter(t => t.status === 'error').length\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-monitor\">\r\n      {/* Header */}\r\n      <div className=\"card-header\">\r\n        <h2 className=\"card-title\">\r\n          <Zap size={20} />\r\n          Task Monitor\r\n        </h2>\r\n        <div className=\"flex items-center gap-2\">\r\n          <span className=\"text-sm text-muted\">\r\n            {tasks.completed}/{tasks.total} completed\r\n          </span>\r\n          <button className=\"btn btn-secondary\" onClick={() => window.location.reload()}>\r\n            <RotateCcw size={14} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filter Tabs */}\r\n      <div className=\"mb-4\">\r\n        <div className=\"flex gap-2 flex-wrap\">\r\n          {Object.entries(taskCounts).map(([status, count]) => (\r\n            <button\r\n              key={status}\r\n              onClick={() => setFilter(status)}\r\n              className={`btn ${filter === status ? 'btn-primary' : 'btn-secondary'} text-sm`}\r\n            >\r\n              {status.charAt(0).toUpperCase() + status.slice(1)} ({count})\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Task List */}\r\n      <div className=\"task-list\">\r\n        {filteredTasks.map((task) => (\r\n          <div key={task.id} className={`task-item ${getStatusClass(task.status)}`}>\r\n            <div className=\"task-info\">\r\n              <div className=\"flex items-center gap-2 mb-1\">\r\n                {getStatusIcon(task.status)}\r\n                <span className=\"task-name\">{task.name}</span>\r\n                <span className=\"text-xs text-muted bg-tertiary px-2 py-1 rounded\">\r\n                  {task.agent.replace('agent-', '')}\r\n                </span>\r\n              </div>\r\n              <p className=\"task-description\">{task.description}</p>\r\n              <div className=\"flex items-center gap-4 mt-2 text-xs text-muted\">\r\n                <span>Started: {task.startTime}</span>\r\n                <span>Duration: {task.estimatedDuration}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col items-end gap-2\">\r\n              <span className=\"text-sm font-medium\">{task.progress}%</span>\r\n              <div className=\"task-progress\">\r\n                <div \r\n                  className=\"task-progress-bar\"\r\n                  style={{ width: `${task.progress}%` }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {filteredTasks.length === 0 && (\r\n          <div className=\"text-center py-8 text-muted\">\r\n            <Zap size={48} className=\"mx-auto mb-2 opacity-50\" />\r\n            <p>No tasks found for the selected filter.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Task Statistics */}\r\n      <div className=\"mt-6 p-4 bg-secondary rounded-lg\">\r\n        <h3 className=\"font-medium mb-3\">Task Statistics</h3>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n          <div className=\"metric\">\r\n            <div className=\"metric-value text-blue-500\">{taskCounts.running}</div>\r\n            <div className=\"metric-label\">Running</div>\r\n          </div>\r\n          <div className=\"metric\">\r\n            <div className=\"metric-value text-green-500\">{taskCounts.completed}</div>\r\n            <div className=\"metric-label\">Completed</div>\r\n          </div>\r\n          <div className=\"metric\">\r\n            <div className=\"metric-value text-yellow-500\">{taskCounts.pending}</div>\r\n            <div className=\"metric-label\">Pending</div>\r\n          </div>\r\n          <div className=\"metric\">\r\n            <div className=\"metric-value text-red-500\">{taskCounts.error}</div>\r\n            <div className=\"metric-label\">Errors</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Volume2, VolumeX, Play, Pause, SkipBack, SkipForward, Mic, MicOff, Settings, Activity } from 'lucide-react'\r\n\r\ninterface AudioControllerProps {\r\n  lastAudio: string\r\n}\r\n\r\ninterface AudioEvent {\r\n  id: string\r\n  type: 'system' | 'agent' | 'phase' | 'error' | 'success'\r\n  phase: string\r\n  agent?: string\r\n  operation: string\r\n  timestamp: number\r\n  audioFile?: string\r\n}\r\n\r\ninterface PhaseAudioSettings {\r\n  enabled: boolean\r\n  volume: number\r\n  frequency: 'low' | 'normal' | 'high'\r\n}\r\n\r\nexport const AudioController: React.FC<AudioControllerProps> = ({ lastAudio }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false)\r\n  const [isMuted, setIsMuted] = useState(false)\r\n  const [isRecording, setIsRecording] = useState(false)\r\n  const [volume, setVolume] = useState(0.7)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n  const [duration, setDuration] = useState(0)\r\n  const audioRef = useRef<HTMLAudioElement>(null)\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null)\r\n  \r\n  // Enhanced audio system state\r\n  const [currentPhase, setCurrentPhase] = useState('initialization')\r\n  const [activeAgents, setActiveAgents] = useState<string[]>([])\r\n  const [audioEvents, setAudioEvents] = useState<AudioEvent[]>([])\r\n  const [phaseSettings, setPhaseSettings] = useState<Record<string, PhaseAudioSettings>>({\r\n    initialization: { enabled: true, volume: 0.8, frequency: 'high' },\r\n    planning: { enabled: true, volume: 0.6, frequency: 'normal' },\r\n    implementation: { enabled: true, volume: 0.5, frequency: 'normal' },\r\n    testing: { enabled: true, volume: 0.7, frequency: 'high' },\r\n    deployment: { enabled: true, volume: 0.9, frequency: 'high' }\r\n  })\r\n  const [showSettings, setShowSettings] = useState(false)\r\n  \r\n  // Complete audio file list from the system\r\n  const [audioFiles, setAudioFiles] = useState<string[]>([\r\n    'startup.wav',\r\n    'ready_for_input.wav',\r\n    'agent_activated.wav',\r\n    'pipeline_complete.wav',\r\n    'pipeline_initiated.wav',\r\n    'confirm_required.wav',\r\n    'file_operation_complete.wav',\r\n    'command_successful.wav',\r\n    'phase_complete.wav',\r\n    'milestone_complete.wav',\r\n    'build_successful.wav',\r\n    'tests_passed.wav',\r\n    'git_commit.wav',\r\n    'frontend_agent.wav',\r\n    'backend_agent.wav',\r\n    'database_agent.wav',\r\n    'master_orchestrator.wav',\r\n    'v3_feature_activated.wav'\r\n  ])\r\n\r\n  // Mock audio visualizer data\r\n  const [audioData, setAudioData] = useState<number[]>(\r\n    Array.from({ length: 40 }, () => Math.random() * 100)\r\n  )\r\n\r\n  // API connection for real-time audio events\r\n  useEffect(() => {\r\n    // Simulate real-time audio visualization\r\n    if (isPlaying || isRecording) {\r\n      const interval = setInterval(() => {\r\n        setAudioData(prev => prev.map(() => Math.random() * 100))\r\n      }, 100)\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [isPlaying, isRecording])\r\n\r\n  // Listen for phase-aware audio events\r\n  useEffect(() => {\r\n    // Simulate receiving audio events from the backend\r\n    const interval = setInterval(() => {\r\n      // Mock event generation\r\n      if (Math.random() > 0.8) {\r\n        const mockEvent: AudioEvent = {\r\n          id: `event_${Date.now()}`,\r\n          type: ['system', 'agent', 'phase', 'success', 'error'][Math.floor(Math.random() * 5)] as any,\r\n          phase: currentPhase,\r\n          agent: activeAgents[Math.floor(Math.random() * activeAgents.length)],\r\n          operation: ['file_edit', 'git_commit', 'test_run', 'build'][Math.floor(Math.random() * 4)],\r\n          timestamp: Date.now(),\r\n          audioFile: audioFiles[Math.floor(Math.random() * audioFiles.length)]\r\n        }\r\n        \r\n        setAudioEvents(prev => [mockEvent, ...prev.slice(0, 49)]) // Keep last 50 events\r\n        \r\n        // Auto-play if enabled\r\n        if (phaseSettings[currentPhase]?.enabled) {\r\n          playAudioEvent(mockEvent)\r\n        }\r\n      }\r\n    }, 5000)\r\n    \r\n    return () => clearInterval(interval)\r\n  }, [currentPhase, activeAgents, audioFiles, phaseSettings])\r\n\r\n  useEffect(() => {\r\n    const audio = audioRef.current\r\n    if (!audio) return\r\n\r\n    const updateTime = () => setCurrentTime(audio.currentTime)\r\n    const updateDuration = () => setDuration(audio.duration || 0)\r\n    const handleEnded = () => setIsPlaying(false)\r\n\r\n    audio.addEventListener('timeupdate', updateTime)\r\n    audio.addEventListener('loadedmetadata', updateDuration)\r\n    audio.addEventListener('ended', handleEnded)\r\n\r\n    return () => {\r\n      audio.removeEventListener('timeupdate', updateTime)\r\n      audio.removeEventListener('loadedmetadata', updateDuration)\r\n      audio.removeEventListener('ended', handleEnded)\r\n    }\r\n  }, [])\r\n\r\n  const togglePlay = () => {\r\n    const audio = audioRef.current\r\n    if (!audio) return\r\n\r\n    if (isPlaying) {\r\n      audio.pause()\r\n    } else {\r\n      audio.play().catch(console.error)\r\n    }\r\n    setIsPlaying(!isPlaying)\r\n  }\r\n\r\n  const toggleMute = () => {\r\n    const audio = audioRef.current\r\n    if (!audio) return\r\n\r\n    audio.muted = !isMuted\r\n    setIsMuted(!isMuted)\r\n  }\r\n\r\n  const handleVolumeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newVolume = parseFloat(e.target.value)\r\n    setVolume(newVolume)\r\n    \r\n    const audio = audioRef.current\r\n    if (audio) {\r\n      audio.volume = newVolume\r\n    }\r\n  }\r\n\r\n  const handleSeek = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newTime = parseFloat(e.target.value)\r\n    setCurrentTime(newTime)\r\n    \r\n    const audio = audioRef.current\r\n    if (audio) {\r\n      audio.currentTime = newTime\r\n    }\r\n  }\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true })\r\n      const mediaRecorder = new MediaRecorder(stream)\r\n      mediaRecorderRef.current = mediaRecorder\r\n      \r\n      const chunks: BlobPart[] = []\r\n      \r\n      mediaRecorder.ondataavailable = (event) => {\r\n        chunks.push(event.data)\r\n      }\r\n      \r\n      mediaRecorder.onstop = () => {\r\n        const blob = new Blob(chunks, { type: 'audio/wav' })\r\n        const audioUrl = URL.createObjectURL(blob)\r\n        const fileName = `recording-${Date.now()}.wav`\r\n        setAudioFiles(prev => [...prev, fileName])\r\n        console.log('Recording saved:', fileName)\r\n      }\r\n      \r\n      mediaRecorder.start()\r\n      setIsRecording(true)\r\n    } catch (error) {\r\n      console.error('Error starting recording:', error)\r\n    }\r\n  }\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current && isRecording) {\r\n      mediaRecorderRef.current.stop()\r\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop())\r\n      setIsRecording(false)\r\n    }\r\n  }\r\n\r\n  const formatTime = (time: number) => {\r\n    const minutes = Math.floor(time / 60)\r\n    const seconds = Math.floor(time % 60)\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`\r\n  }\r\n\r\n  const playAudioEvent = (event: AudioEvent) => {\r\n    if (event.audioFile && !isMuted) {\r\n      const audio = new Audio(`/audio/${event.audioFile}`)\r\n      const phaseVol = phaseSettings[event.phase]?.volume || volume\r\n      audio.volume = phaseVol\r\n      audio.play().catch(console.error)\r\n    }\r\n  }\r\n\r\n  const handlePhaseChange = (newPhase: string) => {\r\n    setCurrentPhase(newPhase)\r\n    // Trigger phase transition sound\r\n    const phaseEvent: AudioEvent = {\r\n      id: `phase_${Date.now()}`,\r\n      type: 'phase',\r\n      phase: newPhase,\r\n      operation: 'phase_transition',\r\n      timestamp: Date.now(),\r\n      audioFile: 'phase_complete.wav'\r\n    }\r\n    setAudioEvents(prev => [phaseEvent, ...prev.slice(0, 49)])\r\n    playAudioEvent(phaseEvent)\r\n  }\r\n\r\n  const addAgent = (agentName: string) => {\r\n    if (!activeAgents.includes(agentName)) {\r\n      setActiveAgents(prev => [...prev, agentName])\r\n      const agentEvent: AudioEvent = {\r\n        id: `agent_${Date.now()}`,\r\n        type: 'agent',\r\n        phase: currentPhase,\r\n        agent: agentName,\r\n        operation: 'agent_activate',\r\n        timestamp: Date.now(),\r\n        audioFile: 'agent_activated.wav'\r\n      }\r\n      setAudioEvents(prev => [agentEvent, ...prev.slice(0, 49)])\r\n      playAudioEvent(agentEvent)\r\n    }\r\n  }\r\n\r\n  const removeAgent = (agentName: string) => {\r\n    setActiveAgents(prev => prev.filter(agent => agent !== agentName))\r\n  }\r\n\r\n  const testAudioFile = (filename: string) => {\r\n    const audio = new Audio(`/audio/${filename}`)\r\n    audio.volume = volume\r\n    audio.play().catch(console.error)\r\n  }\r\n\r\n  const getEventTypeColor = (type: string) => {\r\n    const colors = {\r\n      system: 'bg-blue-500',\r\n      agent: 'bg-green-500',\r\n      phase: 'bg-purple-500',\r\n      success: 'bg-green-600',\r\n      error: 'bg-red-500'\r\n    }\r\n    return colors[type as keyof typeof colors] || 'bg-gray-500'\r\n  }\r\n\r\n  return (\r\n    <div className=\"audio-controller\">\r\n      <div className=\"card-header\">\r\n        <h2 className=\"card-title\">\r\n          <Volume2 size={20} />\r\n          Phase-Aware Audio Controller\r\n        </h2>\r\n        <div className=\"flex items-center gap-4 text-sm text-muted\">\r\n          <span>Phase: <strong className=\"text-accent-primary\">{currentPhase}</strong></span>\r\n          <span>Agents: <strong className=\"text-accent-primary\">{activeAgents.length}</strong></span>\r\n          <span>Events: <strong className=\"text-accent-primary\">{audioEvents.length}</strong></span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Phase Controls */}\r\n      <div className=\"mb-4 p-3 bg-secondary rounded-lg\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <h3 className=\"font-medium\">Development Phase</h3>\r\n          <button \r\n            onClick={() => setShowSettings(!showSettings)}\r\n            className=\"btn btn-secondary text-xs\"\r\n          >\r\n            <Settings size={14} />\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-3 gap-2\">\r\n          {Object.keys(phaseSettings).map(phase => (\r\n            <button\r\n              key={phase}\r\n              onClick={() => handlePhaseChange(phase)}\r\n              className={`btn text-xs py-2 ${\r\n                currentPhase === phase \r\n                  ? 'btn-primary' \r\n                  : 'btn-secondary'\r\n              }`}\r\n            >\r\n              {phase.charAt(0).toUpperCase() + phase.slice(1)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Active Agents */}\r\n      <div className=\"mb-4 p-3 bg-secondary rounded-lg\">\r\n        <h3 className=\"font-medium mb-2\">Active Agents</h3>\r\n        <div className=\"flex flex-wrap gap-2 mb-3\">\r\n          {activeAgents.map(agent => (\r\n            <span \r\n              key={agent}\r\n              className=\"px-2 py-1 bg-accent-primary text-white rounded text-xs flex items-center gap-1\"\r\n            >\r\n              <Activity size={12} />\r\n              {agent}\r\n              <button \r\n                onClick={() => removeAgent(agent)}\r\n                className=\"ml-1 hover:bg-white hover:bg-opacity-20 rounded\"\r\n              >\r\n                ×\r\n              </button>\r\n            </span>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-2 gap-2\">\r\n          {['frontend', 'backend', 'database', 'mobile', 'testing', 'orchestrator'].map(agent => (\r\n            <button\r\n              key={agent}\r\n              onClick={() => addAgent(agent)}\r\n              disabled={activeAgents.includes(agent)}\r\n              className=\"btn btn-outline text-xs py-1 disabled:opacity-50\"\r\n            >\r\n              Add {agent}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Audio Controls */}\r\n      <div className=\"audio-controls\">\r\n        <button className=\"audio-button\" onClick={() => console.log('Previous track')}>\r\n          <SkipBack size={16} />\r\n        </button>\r\n        \r\n        <button className=\"audio-button\" onClick={togglePlay}>\r\n          {isPlaying ? <Pause size={20} /> : <Play size={20} />}\r\n        </button>\r\n        \r\n        <button className=\"audio-button\" onClick={() => console.log('Next track')}>\r\n          <SkipForward size={16} />\r\n        </button>\r\n        \r\n        <button className=\"audio-button\" onClick={toggleMute}>\r\n          {isMuted ? <VolumeX size={16} /> : <Volume2 size={16} />}\r\n        </button>\r\n        \r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.1\"\r\n          value={volume}\r\n          onChange={handleVolumeChange}\r\n          className=\"w-24\"\r\n        />\r\n        \r\n        <button \r\n          className={`audio-button ${isRecording ? 'bg-red-500' : ''}`}\r\n          onClick={isRecording ? stopRecording : startRecording}\r\n        >\r\n          {isRecording ? <MicOff size={16} /> : <Mic size={16} />}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Audio Visualizer */}\r\n      <div className=\"audio-waveform\">\r\n        <div className=\"flex items-end justify-center h-full gap-1 px-4\">\r\n          {audioData.map((value, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"bg-white bg-opacity-30 rounded-sm transition-all duration-75\"\r\n              style={{\r\n                height: `${Math.max(2, value)}%`,\r\n                width: '3px'\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n        {(isPlaying || isRecording) && <div className=\"waveform-animation\" />}\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"mt-4\">\r\n        <div className=\"flex items-center gap-3 text-sm\">\r\n          <span className=\"font-mono\">{formatTime(currentTime)}</span>\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max={duration || 0}\r\n            value={currentTime}\r\n            onChange={handleSeek}\r\n            className=\"flex-1\"\r\n            disabled={!duration}\r\n          />\r\n          <span className=\"font-mono\">{formatTime(duration)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Audio Events Log */}\r\n      <div className=\"mt-6\">\r\n        <h3 className=\"font-medium mb-3\">Recent Audio Events</h3>\r\n        <div className=\"space-y-2 max-h-60 overflow-y-auto\">\r\n          {audioEvents.slice(0, 10).map((event) => (\r\n            <div\r\n              key={event.id}\r\n              className=\"flex items-center justify-between p-2 rounded bg-secondary hover:bg-tertiary transition-colors\"\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className={`w-2 h-2 rounded-full ${getEventTypeColor(event.type)}`} />\r\n                <div className=\"text-sm\">\r\n                  <div className=\"font-medium\">{event.operation}</div>\r\n                  <div className=\"text-xs text-muted\">\r\n                    {event.agent && `${event.agent} • `}\r\n                    {new Date(event.timestamp).toLocaleTimeString()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button \r\n                onClick={() => event.audioFile && testAudioFile(event.audioFile)}\r\n                className=\"btn btn-secondary text-xs\"\r\n                disabled={!event.audioFile}\r\n              >\r\n                Play\r\n              </button>\r\n            </div>\r\n          ))}\r\n          {audioEvents.length === 0 && (\r\n            <div className=\"text-center text-muted text-sm py-4\">\r\n              No audio events yet\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Audio File Library */}\r\n      <div className=\"mt-6\">\r\n        <h3 className=\"font-medium mb-3\">Audio Library ({audioFiles.length} files)</h3>\r\n        <div className=\"space-y-2 max-h-40 overflow-y-auto\">\r\n          {audioFiles.map((file, index) => (\r\n            <div\r\n              key={index}\r\n              className={`flex items-center justify-between p-2 rounded bg-secondary hover:bg-tertiary transition-colors ${\r\n                file === lastAudio ? 'border-l-2 border-accent-primary' : ''\r\n              }`}\r\n            >\r\n              <span className=\"text-sm font-mono\">{file}</span>\r\n              <button \r\n                className=\"btn btn-secondary text-xs\"\r\n                onClick={() => testAudioFile(file)}\r\n              >\r\n                Test\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Audio Element */}\r\n      <audio\r\n        ref={audioRef}\r\n        onPlay={() => setIsPlaying(true)}\r\n        onPause={() => setIsPlaying(false)}\r\n        preload=\"metadata\"\r\n      >\r\n        <source src=\"/audio/sample.mp3\" type=\"audio/mpeg\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n\r\n      {/* Enhanced Audio Settings */}\r\n      {showSettings && (\r\n        <div className=\"mt-6 p-4 bg-secondary rounded-lg\">\r\n          <h3 className=\"font-medium mb-3\">Phase-Aware Audio Settings</h3>\r\n          \r\n          {/* Global Settings */}\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"text-sm font-medium mb-2\">Global Settings</h4>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm mb-1\">Output Device</label>\r\n                <select className=\"w-full text-sm\">\r\n                  <option>Default Audio</option>\r\n                  <option>Speakers</option>\r\n                  <option>Headphones</option>\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm mb-1\">Audio Quality</label>\r\n                <select className=\"w-full text-sm\">\r\n                  <option>High Quality</option>\r\n                  <option>Standard</option>\r\n                  <option>Low Bandwidth</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Phase-Specific Settings */}\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"text-sm font-medium mb-2\">Phase-Specific Settings</h4>\r\n            <div className=\"space-y-3\">\r\n              {Object.entries(phaseSettings).map(([phase, settings]) => (\r\n                <div key={phase} className=\"p-3 bg-tertiary rounded\">\r\n                  <div className=\"flex items-center justify-between mb-2\">\r\n                    <span className=\"text-sm font-medium capitalize\">{phase}</span>\r\n                    <label className=\"flex items-center gap-2 text-sm\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={settings.enabled}\r\n                        onChange={(e) => setPhaseSettings(prev => ({\r\n                          ...prev,\r\n                          [phase]: { ...prev[phase], enabled: e.target.checked }\r\n                        }))}\r\n                      />\r\n                      Enabled\r\n                    </label>\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-2 gap-3\">\r\n                    <div>\r\n                      <label className=\"block text-xs mb-1\">Volume</label>\r\n                      <input\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max=\"1\"\r\n                        step=\"0.1\"\r\n                        value={settings.volume}\r\n                        onChange={(e) => setPhaseSettings(prev => ({\r\n                          ...prev,\r\n                          [phase]: { ...prev[phase], volume: parseFloat(e.target.value) }\r\n                        }))}\r\n                        className=\"w-full\"\r\n                      />\r\n                      <span className=\"text-xs text-muted\">{Math.round(settings.volume * 100)}%</span>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <label className=\"block text-xs mb-1\">Frequency</label>\r\n                      <select\r\n                        value={settings.frequency}\r\n                        onChange={(e) => setPhaseSettings(prev => ({\r\n                          ...prev,\r\n                          [phase]: { ...prev[phase], frequency: e.target.value as any }\r\n                        }))}\r\n                        className=\"w-full text-xs\"\r\n                      >\r\n                        <option value=\"low\">Low</option>\r\n                        <option value=\"normal\">Normal</option>\r\n                        <option value=\"high\">High</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Advanced Settings */}\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm\">Auto-play notifications</span>\r\n              <input type=\"checkbox\" defaultChecked />\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm\">Agent transition sounds</span>\r\n              <input type=\"checkbox\" defaultChecked />\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm\">Error emphasis</span>\r\n              <input type=\"checkbox\" defaultChecked />\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm\">Success celebrations</span>\r\n              <input type=\"checkbox\" defaultChecked />\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm\">Cross-platform compatibility</span>\r\n              <input type=\"checkbox\" defaultChecked />\r\n            </div>\r\n          </div>\r\n\r\n          {/* System Info */}\r\n          <div className=\"mt-4 p-3 bg-tertiary rounded\">\r\n            <h4 className=\"text-sm font-medium mb-2\">System Information</h4>\r\n            <div className=\"text-xs text-muted space-y-1\">\r\n              <div>Platform: {navigator.platform}</div>\r\n              <div>Audio Context: {typeof AudioContext !== 'undefined' ? 'Supported' : 'Not Supported'}</div>\r\n              <div>Web Audio API: {typeof window.AudioContext !== 'undefined' ? 'Available' : 'Unavailable'}</div>\r\n              <div>Media Devices: {navigator.mediaDevices ? 'Supported' : 'Not Supported'}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { Settings, Server, Play, Square, RotateCcw, CheckCircle, XCircle, AlertTriangle, Wifi, WifiOff, RefreshCw } from 'lucide-react'\r\n\r\ninterface MCPService {\r\n  id: string\r\n  name: string\r\n  type: string\r\n  status: 'running' | 'stopped' | 'error' | 'starting' | 'unknown'\r\n  description: string\r\n  host: string\r\n  port: number\r\n  url: string\r\n  version: string\r\n  is_healthy: boolean\r\n  metrics: {\r\n    requests_total: number\r\n    error_count: number\r\n    response_time_avg: number\r\n    cpu_usage: number\r\n    memory_usage: number\r\n    uptime: number\r\n  }\r\n  last_seen?: string\r\n  tags: string[]\r\n}\r\n\r\ninterface MCPManagerStatus {\r\n  total_services: number\r\n  status_breakdown: Record<string, number>\r\n  healthy_services: number\r\n  service_types: string[]\r\n}\r\n\r\ninterface MCPManagerConfig {\r\n  health_check_interval: number\r\n  load_balancing: {\r\n    default_algorithm: string\r\n    health_check_timeout: number\r\n  }\r\n  logging: {\r\n    level: string\r\n    file: string\r\n  }\r\n}\r\n\r\n// MCP Manager API configuration\r\nconst MCP_API_BASE = process.env.NEXT_PUBLIC_MCP_API_URL || 'http://localhost:8000'\r\n\r\nexport const MCPManager: React.FC = () => {\r\n  const [services, setServices] = useState<MCPService[]>([])\r\n  const [status, setStatus] = useState<MCPManagerStatus | null>(null)\r\n  const [config, setConfig] = useState<MCPManagerConfig | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [isConnected, setIsConnected] = useState(false)\r\n  const [lastUpdated, setLastUpdated] = useState<Date | null>(null)\r\n  const [wsConnection, setWsConnection] = useState<WebSocket | null>(null)\r\n\r\n  // API functions\r\n  const fetchServices = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${MCP_API_BASE}/mcp/services`)\r\n      if (!response.ok) throw new Error('Failed to fetch services')\r\n      const data = await response.json()\r\n      setServices(data.services || [])\r\n      setIsConnected(true)\r\n      setError(null)\r\n      setLastUpdated(new Date())\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to fetch services')\r\n      setIsConnected(false)\r\n    }\r\n  }, [])\r\n\r\n  const fetchStatus = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${MCP_API_BASE}/mcp/status`)\r\n      if (!response.ok) throw new Error('Failed to fetch status')\r\n      const data = await response.json()\r\n      setStatus(data)\r\n    } catch (err) {\r\n      console.error('Failed to fetch status:', err)\r\n    }\r\n  }, [])\r\n\r\n  const fetchConfig = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${MCP_API_BASE}/mcp/config`)\r\n      if (!response.ok) throw new Error('Failed to fetch config')\r\n      const data = await response.json()\r\n      setConfig(data)\r\n    } catch (err) {\r\n      console.error('Failed to fetch config:', err)\r\n    }\r\n  }, [])\r\n\r\n  const performServiceAction = async (serviceId: string, action: 'start' | 'stop' | 'restart') => {\r\n    try {\r\n      setServices(prev => prev.map(service => \r\n        service.id === serviceId \r\n          ? { ...service, status: action === 'stop' ? 'stopped' : 'starting' }\r\n          : service\r\n      ))\r\n\r\n      const response = await fetch(`${MCP_API_BASE}/mcp/services/${serviceId}/actions`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ action })\r\n      })\r\n\r\n      if (!response.ok) throw new Error(`Failed to ${action} service`)\r\n\r\n      // Refresh services after action\r\n      setTimeout(fetchServices, 1000)\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : `Failed to ${action} service`)\r\n      fetchServices() // Refresh to get correct state\r\n    }\r\n  }\r\n\r\n  const discoverServices = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const response = await fetch(`${MCP_API_BASE}/mcp/discover`, {\r\n        method: 'POST'\r\n      })\r\n      if (!response.ok) throw new Error('Failed to discover services')\r\n      setTimeout(() => {\r\n        fetchServices()\r\n        fetchStatus()\r\n      }, 1000)\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to discover services')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // WebSocket connection for real-time updates\r\n  const connectWebSocket = useCallback(() => {\r\n    if (wsConnection) return\r\n\r\n    try {\r\n      const ws = new WebSocket(`${MCP_API_BASE.replace('http', 'ws')}/mcp/ws`)\r\n      \r\n      ws.onopen = () => {\r\n        console.log('MCP WebSocket connected')\r\n        setIsConnected(true)\r\n      }\r\n\r\n      ws.onmessage = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.data)\r\n          \r\n          switch (data.type) {\r\n            case 'initial_status':\r\n              setStatus(data.status)\r\n              break\r\n            case 'service_registered':\r\n            case 'service_unregistered':\r\n            case 'service_action':\r\n              fetchServices()\r\n              fetchStatus()\r\n              break\r\n            case 'config_updated':\r\n              setConfig(data.config)\r\n              break\r\n            case 'services_discovered':\r\n              fetchServices()\r\n              fetchStatus()\r\n              break\r\n          }\r\n          \r\n          setLastUpdated(new Date())\r\n        } catch (err) {\r\n          console.error('Failed to parse WebSocket message:', err)\r\n        }\r\n      }\r\n\r\n      ws.onclose = () => {\r\n        console.log('MCP WebSocket disconnected')\r\n        setIsConnected(false)\r\n        setWsConnection(null)\r\n        // Attempt reconnection after 5 seconds\r\n        setTimeout(connectWebSocket, 5000)\r\n      }\r\n\r\n      ws.onerror = (error) => {\r\n        console.error('MCP WebSocket error:', error)\r\n        setIsConnected(false)\r\n      }\r\n\r\n      setWsConnection(ws)\r\n    } catch (err) {\r\n      console.error('Failed to connect WebSocket:', err)\r\n      setIsConnected(false)\r\n    }\r\n  }, [wsConnection, fetchServices, fetchStatus])\r\n\r\n  // Initial data loading\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setLoading(true)\r\n      await Promise.all([\r\n        fetchServices(),\r\n        fetchStatus(),\r\n        fetchConfig()\r\n      ])\r\n      setLoading(false)\r\n    }\r\n\r\n    loadData()\r\n    connectWebSocket()\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      if (wsConnection) {\r\n        wsConnection.close()\r\n      }\r\n    }\r\n  }, [fetchServices, fetchStatus, fetchConfig, connectWebSocket])\r\n\r\n  // Periodic refresh fallback\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!isConnected) {\r\n        fetchServices()\r\n        fetchStatus()\r\n      }\r\n    }, 30000) // 30 seconds\r\n\r\n    return () => clearInterval(interval)\r\n  }, [isConnected, fetchServices, fetchStatus])\r\n\r\n  const formatUptime = (seconds: number): string => {\r\n    if (seconds < 60) return `${Math.floor(seconds)}s`\r\n    if (seconds < 3600) return `${Math.floor(seconds / 60)}m`\r\n    if (seconds < 86400) return `${Math.floor(seconds / 3600)}h ${Math.floor((seconds % 3600) / 60)}m`\r\n    return `${Math.floor(seconds / 86400)}d ${Math.floor((seconds % 86400) / 3600)}h`\r\n  }\r\n\r\n  const getServiceTypeColor = (type: string): string => {\r\n    switch (type) {\r\n      case 'playwright': return 'bg-purple-100 text-purple-700'\r\n      case 'github': return 'bg-blue-100 text-blue-700'\r\n      case 'websearch': return 'bg-green-100 text-green-700'\r\n      case 'proxy': return 'bg-orange-100 text-orange-700'\r\n      case 'gateway': return 'bg-red-100 text-red-700'\r\n      default: return 'bg-gray-100 text-gray-700'\r\n    }\r\n  }\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'running':\r\n        return <CheckCircle size={16} className=\"text-green-500\" />\r\n      case 'stopped':\r\n        return <Square size={16} className=\"text-gray-500\" />\r\n      case 'error':\r\n        return <XCircle size={16} className=\"text-red-500\" />\r\n      case 'starting':\r\n        return <AlertTriangle size={16} className=\"text-yellow-500\" />\r\n      case 'unknown':\r\n        return <AlertTriangle size={16} className=\"text-gray-400\" />\r\n      default:\r\n        return <Square size={16} className=\"text-gray-500\" />\r\n    }\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'running':\r\n        return 'text-green-500'\r\n      case 'stopped':\r\n        return 'text-gray-500'\r\n      case 'error':\r\n        return 'text-red-500'\r\n      case 'starting':\r\n        return 'text-yellow-500'\r\n      case 'unknown':\r\n        return 'text-gray-400'\r\n      default:\r\n        return 'text-gray-500'\r\n    }\r\n  }\r\n\r\n  // Calculate summary statistics\r\n  const runningServices = services.filter(s => s.status === 'running').length\r\n  const errorServices = services.filter(s => s.status === 'error').length\r\n  const totalRequests = services.reduce((sum, s) => sum + s.metrics.requests_total, 0)\r\n  const totalErrors = services.reduce((sum, s) => sum + s.metrics.error_count, 0)\r\n  const healthyServices = services.filter(s => s.is_healthy).length\r\n\r\n  if (loading && services.length === 0) {\r\n    return (\r\n      <div className=\"mcp-manager\">\r\n        <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n          <div className=\"card-content\">\r\n            <div className=\"flex items-center justify-center py-8\">\r\n              <RefreshCw size={24} className=\"animate-spin text-blue-500 mr-3\" />\r\n              <span>Loading MCP Manager...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"mcp-manager\">\r\n      {/* Header */}\r\n      <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n        <div className=\"card-header\">\r\n          <h2 className=\"card-title\">\r\n            <Server size={20} />\r\n            MCP Manager\r\n            <span className={`ml-2 text-xs px-2 py-1 rounded ${isConnected ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`}>\r\n              {isConnected ? <Wifi size={12} className=\"inline mr-1\" /> : <WifiOff size={12} className=\"inline mr-1\" />}\r\n              {isConnected ? 'Connected' : 'Disconnected'}\r\n            </span>\r\n          </h2>\r\n          <div className=\"flex items-center gap-4 text-sm\">\r\n            <span className=\"text-success\">Running: {runningServices}</span>\r\n            <span className=\"text-error\">Errors: {errorServices}</span>\r\n            <span className=\"text-blue-500\">Healthy: {healthyServices}</span>\r\n            {lastUpdated && (\r\n              <span className=\"text-gray-500\">\r\n                Updated: {lastUpdated.toLocaleTimeString()}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <p>Manage Model Context Protocol services and microservices</p>\r\n            <div className=\"flex gap-2\">\r\n              <button \r\n                className=\"btn btn-secondary text-xs\"\r\n                onClick={discoverServices}\r\n                disabled={loading}\r\n              >\r\n                <RefreshCw size={12} className={loading ? 'animate-spin' : ''} />\r\n                Discover Services\r\n              </button>\r\n              <button \r\n                className=\"btn btn-secondary text-xs\"\r\n                onClick={fetchServices}\r\n              >\r\n                <RefreshCw size={12} />\r\n                Refresh\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {error && (\r\n            <div className=\"mt-3 p-3 bg-red-50 border border-red-200 rounded text-red-700 text-sm\">\r\n              <div className=\"flex items-center\">\r\n                <XCircle size={16} className=\"mr-2\" />\r\n                {error}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Service Cards */}\r\n      {services.length === 0 ? (\r\n        <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n          <div className=\"card-content\">\r\n            <div className=\"text-center py-8 text-gray-500\">\r\n              <Server size={48} className=\"mx-auto mb-4 opacity-50\" />\r\n              <p className=\"text-lg font-medium mb-2\">No MCP Services Found</p>\r\n              <p className=\"text-sm mb-4\">\r\n                {isConnected \r\n                  ? \"Click 'Discover Services' to scan for available MCP services\"\r\n                  : \"Unable to connect to MCP Manager API\"\r\n                }\r\n              </p>\r\n              {isConnected && (\r\n                <button \r\n                  className=\"btn btn-primary\"\r\n                  onClick={discoverServices}\r\n                  disabled={loading}\r\n                >\r\n                  <RefreshCw size={16} className={loading ? 'animate-spin' : ''} />\r\n                  Discover Services\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        services.map((service) => (\r\n          <div key={service.id} className={`mcp-service ${service.is_healthy ? 'active' : ''}`}>\r\n            <div className=\"mcp-header\">\r\n              <div>\r\n                <div className=\"flex items-center gap-2 mb-1\">\r\n                  {getStatusIcon(service.status)}\r\n                  <h3 className=\"font-medium\">{service.name}</h3>\r\n                  <span className=\"text-xs bg-tertiary px-2 py-1 rounded\">\r\n                    v{service.version}\r\n                  </span>\r\n                  <span className={`text-xs px-2 py-1 rounded ${getServiceTypeColor(service.type)}`}>\r\n                    {service.type}\r\n                  </span>\r\n                </div>\r\n                <p className=\"text-sm text-secondary\">{service.description}</p>\r\n                <div className=\"flex items-center gap-2 mt-1\">\r\n                  <span className=\"text-xs text-gray-500\">{service.url}</span>\r\n                  {service.tags.length > 0 && (\r\n                    <div className=\"flex gap-1\">\r\n                      {service.tags.slice(0, 3).map(tag => (\r\n                        <span key={tag} className=\"text-xs bg-gray-100 text-gray-600 px-1 py-0.5 rounded\">\r\n                          {tag}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mcp-actions\">\r\n                {service.status === 'running' ? (\r\n                  <>\r\n                    <button \r\n                      className=\"btn btn-secondary text-xs\"\r\n                      onClick={() => performServiceAction(service.id, 'restart')}\r\n                      title=\"Restart service\"\r\n                    >\r\n                      <RotateCcw size={12} />\r\n                    </button>\r\n                    <button \r\n                      className=\"btn btn-secondary text-xs\"\r\n                      onClick={() => performServiceAction(service.id, 'stop')}\r\n                      title=\"Stop service\"\r\n                    >\r\n                      <Square size={12} />\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <button \r\n                    className=\"btn btn-primary text-xs\"\r\n                    onClick={() => performServiceAction(service.id, 'start')}\r\n                    disabled={service.status === 'starting'}\r\n                    title=\"Start service\"\r\n                  >\r\n                    <Play size={12} />\r\n                    {service.status === 'starting' ? 'Starting...' : 'Start'}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"mcp-stats\">\r\n              <div className=\"metric\">\r\n                <div className=\"metric-value\">{service.port}</div>\r\n                <div className=\"metric-label\">Port</div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <div className=\"metric-value\">{formatUptime(service.metrics.uptime)}</div>\r\n                <div className=\"metric-label\">Uptime</div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <div className=\"metric-value text-blue-500\">{service.metrics.requests_total.toLocaleString()}</div>\r\n                <div className=\"metric-label\">Requests</div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <div className={`metric-value ${service.metrics.error_count > 0 ? 'text-red-500' : 'text-green-500'}`}>\r\n                  {service.metrics.error_count}\r\n                </div>\r\n                <div className=\"metric-label\">Errors</div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Additional metrics */}\r\n            <div className=\"mcp-stats mt-2 pt-2 border-t\">\r\n              <div className=\"metric\">\r\n                <div className=\"metric-value text-purple-500\">{service.metrics.response_time_avg.toFixed(0)}ms</div>\r\n                <div className=\"metric-label\">Avg Response</div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <div className=\"metric-value text-orange-500\">{service.metrics.cpu_usage.toFixed(1)}%</div>\r\n                <div className=\"metric-label\">CPU Usage</div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <div className=\"metric-value text-cyan-500\">{service.metrics.memory_usage.toFixed(1)}%</div>\r\n                <div className=\"metric-label\">Memory</div>\r\n              </div>\r\n              <div className=\"metric\">\r\n                <div className={`metric-value ${service.is_healthy ? 'text-green-500' : 'text-red-500'}`}>\r\n                  {service.is_healthy ? 'Yes' : 'No'}\r\n                </div>\r\n                <div className=\"metric-label\">Healthy</div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Status Indicator */}\r\n            <div className=\"mt-3 flex items-center justify-between\">\r\n              <span className={`text-sm font-medium ${getStatusColor(service.status)}`}>\r\n                {service.status.charAt(0).toUpperCase() + service.status.slice(1)}\r\n              </span>\r\n              {service.status === 'running' && service.is_healthy && (\r\n                <div className=\"flex items-center gap-1 text-xs text-muted\">\r\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\r\n                  Live\r\n                </div>\r\n              )}\r\n              {service.last_seen && (\r\n                <span className=\"text-xs text-gray-400\">\r\n                  Last seen: {new Date(service.last_seen).toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      {/* System Overview */}\r\n      <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n        <div className=\"card-header\">\r\n          <h3 className=\"card-title\">\r\n            <Settings size={18} />\r\n            System Overview\r\n          </h3>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value text-green-500\">{runningServices}</div>\r\n              <div className=\"metric-label\">Running Services</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value text-red-500\">{errorServices}</div>\r\n              <div className=\"metric-label\">Failed Services</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value text-blue-500\">{totalRequests.toLocaleString()}</div>\r\n              <div className=\"metric-label\">Total Requests</div>\r\n            </div>\r\n            <div className=\"metric\">\r\n              <div className=\"metric-value text-yellow-500\">{totalErrors}</div>\r\n              <div className=\"metric-label\">Total Errors</div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Actions */}\r\n          <div className=\"mt-6 flex gap-2 flex-wrap\">\r\n            <button className=\"btn btn-primary\">\r\n              Start All Services\r\n            </button>\r\n            <button className=\"btn btn-secondary\">\r\n              Restart All\r\n            </button>\r\n            <button className=\"btn btn-secondary\">\r\n              View Logs\r\n            </button>\r\n            <button className=\"btn btn-secondary\">\r\n              Export Config\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Configuration Panel */}\r\n      <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n        <div className=\"card-header\">\r\n          <h3 className=\"card-title\">Configuration</h3>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Default Port Range</label>\r\n              <input \r\n                type=\"text\" \r\n                defaultValue=\"8080-8090\" \r\n                className=\"w-full\"\r\n                placeholder=\"8080-8090\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Health Check Interval</label>\r\n              <select className=\"w-full\">\r\n                <option value=\"30\">30 seconds</option>\r\n                <option value=\"60\" selected>1 minute</option>\r\n                <option value=\"300\">5 minutes</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Auto-restart on failure</label>\r\n              <input type=\"checkbox\" defaultChecked className=\"mt-1\" />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium mb-2\">Log Level</label>\r\n              <select className=\"w-full\">\r\n                <option value=\"error\">Error</option>\r\n                <option value=\"warn\">Warning</option>\r\n                <option value=\"info\" selected>Info</option>\r\n                <option value=\"debug\">Debug</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","/**\r\n * WebSocket Hook for Dev Stack Integration\r\n * =======================================\r\n * \r\n * Provides WebSocket connectivity to the Claude Code Browser adapter\r\n * and Dev Stack API for real-time monitoring and updates.\r\n */\r\n\r\nimport { useState, useEffect, useRef, useCallback } from 'react';\r\n\r\ninterface WebSocketOptions {\r\n  reconnectInterval?: number;\r\n  heartbeatInterval?: number;\r\n  maxReconnectAttempts?: number;\r\n}\r\n\r\ninterface WebSocketData {\r\n  type: string;\r\n  payload: any;\r\n  timestamp?: number;\r\n}\r\n\r\ninterface UseWebSocketReturn {\r\n  data: WebSocketData | null;\r\n  isConnected: boolean;\r\n  connectionState: 'connecting' | 'connected' | 'disconnected' | 'error';\r\n  send: (data: any) => void;\r\n  reconnect: () => void;\r\n}\r\n\r\nexport const useWebSocket = (\r\n  url: string, \r\n  options: WebSocketOptions = {}\r\n): UseWebSocketReturn => {\r\n  const {\r\n    reconnectInterval = 1000,\r\n    heartbeatInterval = 30000,\r\n    maxReconnectAttempts = 10\r\n  } = options;\r\n\r\n  const [data, setData] = useState<WebSocketData | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [connectionState, setConnectionState] = useState<'connecting' | 'connected' | 'disconnected' | 'error'>('disconnected');\r\n  \r\n  const websocketRef = useRef<WebSocket | null>(null);\r\n  const reconnectTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const heartbeatTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const reconnectAttemptsRef = useRef(0);\r\n  const mountedRef = useRef(true);\r\n\r\n  const clearTimeouts = useCallback(() => {\r\n    if (reconnectTimeoutRef.current) {\r\n      clearTimeout(reconnectTimeoutRef.current);\r\n      reconnectTimeoutRef.current = null;\r\n    }\r\n    if (heartbeatTimeoutRef.current) {\r\n      clearTimeout(heartbeatTimeoutRef.current);\r\n      heartbeatTimeoutRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  const startHeartbeat = useCallback(() => {\r\n    if (heartbeatInterval > 0) {\r\n      heartbeatTimeoutRef.current = setTimeout(() => {\r\n        if (websocketRef.current?.readyState === WebSocket.OPEN) {\r\n          websocketRef.current.send(JSON.stringify({ type: 'ping' }));\r\n          startHeartbeat(); // Schedule next heartbeat\r\n        }\r\n      }, heartbeatInterval);\r\n    }\r\n  }, [heartbeatInterval]);\r\n\r\n  const connect = useCallback(() => {\r\n    if (!mountedRef.current) return;\r\n\r\n    try {\r\n      setConnectionState('connecting');\r\n      websocketRef.current = new WebSocket(url);\r\n\r\n      websocketRef.current.onopen = () => {\r\n        if (!mountedRef.current) return;\r\n        \r\n        console.log('🔌 WebSocket connected to', url);\r\n        setIsConnected(true);\r\n        setConnectionState('connected');\r\n        reconnectAttemptsRef.current = 0;\r\n        startHeartbeat();\r\n      };\r\n\r\n      websocketRef.current.onmessage = (event) => {\r\n        if (!mountedRef.current) return;\r\n        \r\n        try {\r\n          const parsedData = JSON.parse(event.data);\r\n          \r\n          // Handle pong responses\r\n          if (parsedData.type === 'pong') {\r\n            return;\r\n          }\r\n          \r\n          setData(parsedData);\r\n        } catch (error) {\r\n          console.warn('Failed to parse WebSocket message:', event.data);\r\n        }\r\n      };\r\n\r\n      websocketRef.current.onclose = (event) => {\r\n        if (!mountedRef.current) return;\r\n        \r\n        console.log('🔌 WebSocket disconnected from', url, event.code, event.reason);\r\n        setIsConnected(false);\r\n        setConnectionState('disconnected');\r\n        clearTimeouts();\r\n        \r\n        // Auto-reconnect if not a manual close\r\n        if (event.code !== 1000 && reconnectAttemptsRef.current < maxReconnectAttempts) {\r\n          reconnectAttemptsRef.current++;\r\n          const delay = Math.min(reconnectInterval * Math.pow(2, reconnectAttemptsRef.current - 1), 30000);\r\n          \r\n          console.log(`🔄 Attempting to reconnect in ${delay}ms (attempt ${reconnectAttemptsRef.current}/${maxReconnectAttempts})`);\r\n          \r\n          reconnectTimeoutRef.current = setTimeout(() => {\r\n            if (mountedRef.current) {\r\n              connect();\r\n            }\r\n          }, delay);\r\n        }\r\n      };\r\n\r\n      websocketRef.current.onerror = (error) => {\r\n        if (!mountedRef.current) return;\r\n        \r\n        console.error('🔌 WebSocket error:', error);\r\n        setConnectionState('error');\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Failed to create WebSocket connection:', error);\r\n      setConnectionState('error');\r\n    }\r\n  }, [url, reconnectInterval, maxReconnectAttempts, startHeartbeat, clearTimeouts]);\r\n\r\n  const disconnect = useCallback(() => {\r\n    clearTimeouts();\r\n    \r\n    if (websocketRef.current) {\r\n      websocketRef.current.close(1000, 'Manual disconnect');\r\n      websocketRef.current = null;\r\n    }\r\n    \r\n    setIsConnected(false);\r\n    setConnectionState('disconnected');\r\n  }, [clearTimeouts]);\r\n\r\n  const send = useCallback((data: any) => {\r\n    if (websocketRef.current?.readyState === WebSocket.OPEN) {\r\n      try {\r\n        const message = typeof data === 'string' ? data : JSON.stringify(data);\r\n        websocketRef.current.send(message);\r\n      } catch (error) {\r\n        console.error('Failed to send WebSocket message:', error);\r\n      }\r\n    } else {\r\n      console.warn('WebSocket not connected, cannot send message');\r\n    }\r\n  }, []);\r\n\r\n  const reconnect = useCallback(() => {\r\n    disconnect();\r\n    reconnectAttemptsRef.current = 0;\r\n    setTimeout(connect, 100); // Small delay before reconnecting\r\n  }, [disconnect, connect]);\r\n\r\n  // Initial connection\r\n  useEffect(() => {\r\n    connect();\r\n    \r\n    return () => {\r\n      mountedRef.current = false;\r\n      disconnect();\r\n    };\r\n  }, [connect, disconnect]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    data,\r\n    isConnected,\r\n    connectionState,\r\n    send,\r\n    reconnect\r\n  };\r\n};","/**\n * Claude Code Browser Monitor Component\n * ====================================\n * \n * Integrates the Claude Code Browser (@zainhoda, AGPL-3.0) monitoring\n * capabilities into the Dev Stack v3.0 PWA while maintaining proper\n * attribution and license compliance.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Monitor, Activity, Database, Users, Clock, Eye, ExternalLink, Command, Zap, Code, Terminal } from 'lucide-react';\nimport { useWebSocket } from '../hooks/useWebSocket';\n\ninterface BrowserSession {\n  uuid: string;\n  filename: string;\n  modTime: string;\n  size: number;\n  latestTodos: any;\n  project_name?: string;\n  content_preview?: string;\n  session_type?: string;\n  tags?: string[];\n}\n\ninterface BrowserProject {\n  name: string;\n  path: string;\n  modTime: string;\n  sessions: BrowserSession[];\n}\n\ninterface BrowserMonitorProps {\n  apiUrl?: string;\n}\n\nexport const BrowserMonitor: React.FC<BrowserMonitorProps> = ({ \n  apiUrl = 'http://localhost:8081' \n}) => {\n  const [projects, setProjects] = useState<BrowserProject[]>([]);\n  const [selectedProject, setSelectedProject] = useState<string | null>(null);\n  const [sessions, setSessions] = useState<BrowserSession[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [attribution, setAttribution] = useState<any>(null);\n  const [devStackCommands, setDevStackCommands] = useState<any[]>([]);\n  const [realTimeData, setRealTimeData] = useState<any>(null);\n  const [commandInput, setCommandInput] = useState('');\n  const [commandHistory, setCommandHistory] = useState<any[]>([]);\n  \n  // WebSocket connection for real-time updates\n  const { data: wsData, isConnected: wsConnected, send: wsSend } = useWebSocket(\n    `ws://localhost:8081/ws`, \n    {\n      reconnectInterval: 2000,\n      heartbeatInterval: 30000,\n      maxReconnectAttempts: 5\n    }\n  );\n\n  useEffect(() => {\n    loadProjects();\n    loadAttribution();\n  }, []);\n\n  // Handle WebSocket data updates\n  useEffect(() => {\n    if (wsData) {\n      console.log('📡 WebSocket data received:', wsData);\n      \n      switch (wsData.type) {\n        case 'projects_update':\n          setProjects(wsData.projects || []);\n          setRealTimeData(wsData);\n          break;\n        \n        case 'project_sessions':\n          setSessions(wsData.sessions || []);\n          break;\n        \n        case 'session_content':\n          if (wsData.dev_stack_commands) {\n            setDevStackCommands(wsData.dev_stack_commands);\n          }\n          break;\n        \n        case 'command_executed':\n          setCommandHistory(prev => [wsData, ...prev.slice(0, 49)]); // Keep last 50\n          break;\n        \n        case 'data_update':\n          setProjects(wsData.projects || []);\n          setRealTimeData(wsData);\n          break;\n        \n        case 'system_status':\n          setRealTimeData(wsData);\n          break;\n      }\n    }\n  }, [wsData]);\n\n  // Update connection status based on WebSocket\n  useEffect(() => {\n    setIsConnected(wsConnected);\n  }, [wsConnected]);\n\n  const loadProjects = async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Fetch projects from the adapter API which proxies to original browser\n      const response = await fetch(`${apiUrl}/api/browser/projects`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      setProjects(data.projects || []);\n      setIsConnected(true);\n      \n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load projects');\n      setIsConnected(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadAttribution = async () => {\n    try {\n      const response = await fetch(`${apiUrl}/api/attribution`);\n      if (response.ok) {\n        const data = await response.json();\n        setAttribution(data);\n      }\n    } catch (err) {\n      console.warn('Failed to load attribution info:', err);\n    }\n  };\n\n  const loadProjectSessions = async (projectName: string) => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Try WebSocket first for real-time data\n      if (wsSend) {\n        wsSend({\n          type: 'get_project_sessions',\n          project_name: projectName\n        });\n      }\n      \n      // Fallback to HTTP API\n      const response = await fetch(`${apiUrl}/api/browser/project/${projectName}`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      setSessions(data.sessions || []);\n      setSelectedProject(projectName);\n      \n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load sessions');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const executeDevStackCommand = async (command: string, sessionUuid?: string) => {\n    if (!command.trim()) return;\n    \n    try {\n      // Send via WebSocket for real-time execution\n      if (wsSend) {\n        wsSend({\n          type: 'execute_dev_stack_command',\n          command: {\n            command: command,\n            agent_target: extractAgentTarget(command),\n            parameters: parseCommandParameters(command),\n            execution_context: {\n              session_uuid: sessionUuid,\n              source: 'browser_monitor_ui'\n            }\n          },\n          session_uuid: sessionUuid\n        });\n      }\n      \n      // Also send via HTTP API for reliability\n      const response = await fetch(`${apiUrl}/api/commands/execute`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          command: command,\n          agent_target: extractAgentTarget(command),\n          parameters: parseCommandParameters(command),\n          session_uuid: sessionUuid,\n          execution_context: {\n            source: 'browser_monitor_ui',\n            timestamp: new Date().toISOString()\n          }\n        })\n      });\n      \n      if (response.ok) {\n        const result = await response.json();\n        setCommandHistory(prev => [result, ...prev.slice(0, 49)]);\n      }\n      \n    } catch (err) {\n      console.error('Failed to execute command:', err);\n      setError(`Command execution failed: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    }\n  };\n\n  const extractAgentTarget = (command: string): string | null => {\n    const agentMatch = command.match(/@agent-([a-z-]+)/i);\n    return agentMatch ? agentMatch[1] : null;\n  };\n\n  const parseCommandParameters = (command: string): Record<string, any> => {\n    const params: Record<string, any> = { raw_command: command };\n    \n    // Parse common patterns\n    const orchestrateMatch = command.match(/!orchestrate\\s+(.+)/i);\n    if (orchestrateMatch) {\n      params.orchestration_request = orchestrateMatch[1];\n    }\n    \n    const statusMatch = command.match(/\\?status\\s+(.+)/i);\n    if (statusMatch) {\n      params.status_query = statusMatch[1];\n    }\n    \n    const contextMatch = command.match(/@context\\s+(\\w+)\\s*(.*)?/i);\n    if (contextMatch) {\n      params.context_operation = contextMatch[1];\n      params.context_parameters = contextMatch[2] || '';\n    }\n    \n    return params;\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    const units = ['B', 'KB', 'MB', 'GB'];\n    let size = bytes;\n    let unitIndex = 0;\n    \n    while (size >= 1024 && unitIndex < units.length - 1) {\n      size /= 1024;\n      unitIndex++;\n    }\n    \n    return `${size.toFixed(1)} ${units[unitIndex]}`;\n  };\n\n  const formatTimeAgo = (dateString: string): string => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMins / 60);\n    const diffDays = Math.floor(diffHours / 24);\n    \n    if (diffMins < 60) return `${diffMins}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    return `${diffDays}d ago`;\n  };\n\n  const openOriginalBrowser = () => {\n    window.open('http://localhost:8080', '_blank');\n  };\n\n  const openSession = (projectName: string, sessionUuid: string) => {\n    window.open(`http://localhost:8080/session/${projectName}/${sessionUuid}`, '_blank');\n  };\n\n  return (\n    <div className=\"browser-monitor p-6 bg-white rounded-lg shadow-lg\">\n      {/* Header with Attribution and Real-time Status */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Monitor className=\"w-6 h-6 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900\">\n            Claude Code Browser Monitor\n          </h2>\n          <div className={`w-3 h-3 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`} />\n          {wsConnected && (\n            <div className=\"flex items-center space-x-2 bg-green-50 px-3 py-1 rounded-full\">\n              <Zap className=\"w-4 h-4 text-green-600\" />\n              <span className=\"text-sm text-green-700\">Live</span>\n            </div>\n          )}\n          {realTimeData && (\n            <div className=\"text-sm text-gray-600\">\n              Last update: {new Date(realTimeData.timestamp).toLocaleTimeString()}\n            </div>\n          )}\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => executeDevStackCommand('?status system')}\n            className=\"flex items-center space-x-2 px-3 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            <Terminal className=\"w-4 h-4\" />\n            <span>System Status</span>\n          </button>\n          <button\n            onClick={openOriginalBrowser}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <ExternalLink className=\"w-4 h-4\" />\n            <span>Open Full Browser</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Attribution Notice */}\n      {attribution && (\n        <div className=\"mb-6 p-4 bg-blue-50 border-l-4 border-blue-500 rounded-r-lg\">\n          <div className=\"flex items-start space-x-2\">\n            <Eye className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n            <div>\n              <p className=\"text-sm text-blue-800\">\n                <strong>Claude Code Browser</strong> by{' '}\n                <a \n                  href=\"https://github.com/zainhoda\" \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"underline hover:text-blue-900\"\n                >\n                  @zainhoda\n                </a>\n              </p>\n              <p className=\"text-xs text-blue-600 mt-1\">\n                Licensed under AGPL-3.0 • Integrated via adapter pattern\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Error State */}\n      {error && (\n        <div className=\"mb-6 p-4 bg-red-50 border-l-4 border-red-500 rounded-r-lg\">\n          <p className=\"text-red-800\">\n            <strong>Connection Error:</strong> {error}\n          </p>\n          <button\n            onClick={loadProjects}\n            className=\"mt-2 text-red-600 hover:text-red-800 underline text-sm\"\n          >\n            Retry Connection\n          </button>\n        </div>\n      )}\n\n      {/* Loading State */}\n      {isLoading && (\n        <div className=\"flex items-center justify-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          <span className=\"ml-3 text-gray-600\">Loading...</span>\n        </div>\n      )}\n\n      {/* Projects List */}\n      {!isLoading && !selectedProject && (\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900 flex items-center space-x-2\">\n            <Database className=\"w-5 h-5\" />\n            <span>Claude Code Projects ({projects.length})</span>\n          </h3>\n          \n          {projects.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <Database className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n              <p>No Claude Code projects found</p>\n              <p className=\"text-sm\">Projects are stored in ~/.claude/projects/</p>\n            </div>\n          ) : (\n            <div className=\"grid gap-4\">\n              {projects.map((project) => (\n                <div\n                  key={project.name}\n                  onClick={() => loadProjectSessions(project.name)}\n                  className=\"p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-colors\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Users className=\"w-5 h-5 text-gray-500\" />\n                      <div>\n                        <h4 className=\"font-medium text-gray-900\">{project.name}</h4>\n                        <p className=\"text-sm text-gray-500\">\n                          {project.sessions?.length || 0} sessions\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"text-right\">\n                      <div className=\"flex items-center space-x-1 text-sm text-gray-500\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span>{formatTimeAgo(project.modTime)}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Dev Stack Command Interface */}\n      <div className=\"mb-6 p-4 bg-gray-50 border border-gray-200 rounded-lg\">\n        <div className=\"flex items-center space-x-2 mb-3\">\n          <Command className=\"w-5 h-5 text-gray-700\" />\n          <h3 className=\"font-semibold text-gray-900\">Dev Stack Command Interface</h3>\n        </div>\n        \n        <div className=\"flex space-x-2\">\n          <input\n            type=\"text\"\n            value={commandInput}\n            onChange={(e) => setCommandInput(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                executeDevStackCommand(commandInput);\n                setCommandInput('');\n              }\n            }}\n            placeholder=\"Enter Dev Stack command (e.g., @agent-api-integration, !orchestrate, ?status)\"\n            className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n          <button\n            onClick={() => {\n              executeDevStackCommand(commandInput);\n              setCommandInput('');\n            }}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            Execute\n          </button>\n        </div>\n        \n        {/* Quick Command Buttons */}\n        <div className=\"flex flex-wrap gap-2 mt-3\">\n          {[\n            { label: 'API Integration', cmd: '@agent-api-integration analyze current project' },\n            { label: 'System Status', cmd: '?status all' },\n            { label: 'Orchestrate', cmd: '!orchestrate frontend and backend agents' },\n            { label: 'Context Snapshot', cmd: '@context snapshot current' }\n          ].map((quickCmd) => (\n            <button\n              key={quickCmd.label}\n              onClick={() => executeDevStackCommand(quickCmd.cmd)}\n              className=\"px-3 py-1 text-sm bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n            >\n              {quickCmd.label}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Dev Stack Commands Found in Sessions */}\n      {devStackCommands.length > 0 && (\n        <div className=\"mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <div className=\"flex items-center space-x-2 mb-3\">\n            <Code className=\"w-5 h-5 text-yellow-700\" />\n            <h3 className=\"font-semibold text-yellow-900\">Dev Stack Commands Found</h3>\n          </div>\n          \n          <div className=\"space-y-2\">\n            {devStackCommands.slice(0, 5).map((cmd, index) => (\n              <div key={index} className=\"flex items-center justify-between bg-white p-2 rounded border\">\n                <span className=\"font-mono text-sm text-gray-700\">{cmd.command}</span>\n                <button\n                  onClick={() => executeDevStackCommand(cmd.command, cmd.session_uuid)}\n                  className=\"px-2 py-1 text-xs bg-yellow-600 text-white rounded hover:bg-yellow-700\"\n                >\n                  Execute\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Command History */}\n      {commandHistory.length > 0 && (\n        <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n          <div className=\"flex items-center space-x-2 mb-3\">\n            <Activity className=\"w-5 h-5 text-green-700\" />\n            <h3 className=\"font-semibold text-green-900\">Recent Command Executions</h3>\n          </div>\n          \n          <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n            {commandHistory.slice(0, 10).map((execution, index) => (\n              <div key={index} className=\"bg-white p-3 rounded border\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"font-mono text-sm text-gray-700\">\n                    {execution.command?.command || execution.result?.command || 'Unknown command'}\n                  </span>\n                  <span className={`text-xs px-2 py-1 rounded ${\n                    execution.result?.success || execution.success \n                      ? 'bg-green-100 text-green-800' \n                      : 'bg-red-100 text-red-800'\n                  }`}>\n                    {execution.result?.success || execution.success ? 'Success' : 'Failed'}\n                  </span>\n                </div>\n                {execution.timestamp && (\n                  <div className=\"text-xs text-gray-500\">\n                    {new Date(execution.timestamp).toLocaleTimeString()}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Sessions List */}\n      {!isLoading && selectedProject && (\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center space-x-2\">\n              <Activity className=\"w-5 h-5\" />\n              <span>Sessions in {selectedProject}</span>\n            </h3>\n            \n            <button\n              onClick={() => {\n                setSelectedProject(null);\n                setSessions([]);\n              }}\n              className=\"text-blue-600 hover:text-blue-800 text-sm\"\n            >\n              ← Back to Projects\n            </button>\n          </div>\n          \n          {sessions.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <Activity className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n              <p>No sessions found in this project</p>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              {sessions.map((session) => (\n                <div\n                  key={session.uuid}\n                  onClick={() => openSession(selectedProject, session.uuid)}\n                  className=\"p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 cursor-pointer transition-colors\"\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-2 h-2 rounded-full ${\n                        session.tags?.includes('dev_stack_commands') ? 'bg-purple-500' : 'bg-green-500'\n                      }`}></div>\n                      <div>\n                        <div className=\"flex items-center space-x-2\">\n                          <h4 className=\"font-mono text-sm text-gray-900\">\n                            {session.uuid.substring(0, 8)}...\n                          </h4>\n                          {session.tags?.includes('dev_stack_commands') && (\n                            <span className=\"px-2 py-1 text-xs bg-purple-100 text-purple-800 rounded-full\">\n                              Dev Stack\n                            </span>\n                          )}\n                          {session.tags?.includes('orchestration_capable') && (\n                            <span className=\"px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full\">\n                              Orchestration\n                            </span>\n                          )}\n                        </div>\n                        <p className=\"text-xs text-gray-500\">\n                          {formatFileSize(session.size)}\n                        </p>\n                        {session.content_preview && (\n                          <p className=\"text-xs text-gray-600 mt-1 truncate max-w-md\">\n                            {session.content_preview.substring(0, 100)}...\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"text-right\">\n                      <div className=\"flex items-center space-x-1 text-sm text-gray-500\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span>{formatTimeAgo(session.modTime)}</span>\n                      </div>\n                      <div className=\"flex items-center space-x-1 mt-1\">\n                        <ExternalLink className=\"w-4 h-4 text-gray-400\" />\n                        {session.tags?.includes('dev_stack_commands') && (\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              // Load session content to get Dev Stack commands\n                              if (wsSend) {\n                                wsSend({\n                                  type: 'get_session_content',\n                                  session_uuid: session.uuid\n                                });\n                              }\n                            }}\n                            className=\"ml-2 px-2 py-1 text-xs bg-purple-600 text-white rounded hover:bg-purple-700\"\n                          >\n                            <Command className=\"w-3 h-3\" />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {session.latestTodos && (\n                    <div className=\"mt-2 text-xs text-gray-600\">\n                      Latest todos: {session.latestTodos.todos?.length || 0} items\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};","import React, { useState, useCallback } from 'react'\r\nimport { Code, Upload, Download, Settings, Play, CheckCircle, XCircle, AlertTriangle, Loader2, FileText, Server, Zap } from 'lucide-react'\r\n\r\ninterface OpenAPISpec {\r\n  name: string\r\n  content: string\r\n  version: string\r\n  servers: Array<{ url: string; description?: string }>\r\n  info: {\r\n    title: string\r\n    description?: string\r\n    version: string\r\n  }\r\n}\r\n\r\ninterface GenerationResult {\r\n  generator: 'python' | 'nodejs'\r\n  success: boolean\r\n  output?: string\r\n  error?: string\r\n  timestamp: Date\r\n  mcpServer?: {\r\n    name: string\r\n    port: number\r\n    endpoints: string[]\r\n  }\r\n}\r\n\r\ninterface ValidationResult {\r\n  valid: boolean\r\n  errors: string[]\r\n  warnings: string[]\r\n  info: {\r\n    paths: number\r\n    operations: number\r\n    schemas: number\r\n  }\r\n}\r\n\r\nconst API_GENERATOR_BASE = process.env.NEXT_PUBLIC_API_GENERATOR_URL || 'http://localhost:8082'\r\n\r\nexport const APIGenerator: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<'upload' | 'generate' | 'deploy'>('upload')\r\n  const [openApiSpec, setOpenApiSpec] = useState<OpenAPISpec | null>(null)\r\n  const [validationResult, setValidationResult] = useState<ValidationResult | null>(null)\r\n  const [selectedGenerator, setSelectedGenerator] = useState<'python' | 'nodejs' | 'both'>('both')\r\n  const [generationResults, setGenerationResults] = useState<GenerationResult[]>([])\r\n  const [isValidating, setIsValidating] = useState(false)\r\n  const [isGenerating, setIsGenerating] = useState(false)\r\n  const [isDeploying, setIsDeploying] = useState(false)\r\n  const [deploymentStatus, setDeploymentStatus] = useState<string>('')\r\n\r\n  // File upload handler\r\n  const handleFileUpload = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0]\r\n    if (!file) return\r\n\r\n    try {\r\n      const content = await file.text()\r\n      const spec = JSON.parse(content)\r\n      \r\n      const openApiSpec: OpenAPISpec = {\r\n        name: file.name.replace('.json', ''),\r\n        content,\r\n        version: spec.openapi || spec.swagger || '3.0.0',\r\n        servers: spec.servers || [],\r\n        info: spec.info || { title: 'API', version: '1.0.0' }\r\n      }\r\n\r\n      setOpenApiSpec(openApiSpec)\r\n      validateOpenApiSpec(openApiSpec)\r\n    } catch (error) {\r\n      console.error('Failed to parse OpenAPI spec:', error)\r\n      alert('Invalid OpenAPI specification file')\r\n    }\r\n  }, [])\r\n\r\n  // Manual spec input handler\r\n  const handleSpecInput = useCallback((content: string) => {\r\n    try {\r\n      const spec = JSON.parse(content)\r\n      \r\n      const openApiSpec: OpenAPISpec = {\r\n        name: spec.info?.title || 'API',\r\n        content,\r\n        version: spec.openapi || spec.swagger || '3.0.0',\r\n        servers: spec.servers || [],\r\n        info: spec.info || { title: 'API', version: '1.0.0' }\r\n      }\r\n\r\n      setOpenApiSpec(openApiSpec)\r\n      validateOpenApiSpec(openApiSpec)\r\n    } catch (error) {\r\n      console.error('Failed to parse OpenAPI spec:', error)\r\n    }\r\n  }, [])\r\n\r\n  // OpenAPI validation\r\n  const validateOpenApiSpec = async (spec: OpenAPISpec) => {\r\n    setIsValidating(true)\r\n    try {\r\n      const response = await fetch(`${API_GENERATOR_BASE}/validate`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ spec: JSON.parse(spec.content) })\r\n      })\r\n\r\n      if (!response.ok) throw new Error('Validation failed')\r\n\r\n      const result = await response.json()\r\n      setValidationResult(result)\r\n    } catch (error) {\r\n      setValidationResult({\r\n        valid: false,\r\n        errors: [error instanceof Error ? error.message : 'Validation failed'],\r\n        warnings: [],\r\n        info: { paths: 0, operations: 0, schemas: 0 }\r\n      })\r\n    } finally {\r\n      setIsValidating(false)\r\n    }\r\n  }\r\n\r\n  // Generate MCP servers\r\n  const generateMCPServers = async () => {\r\n    if (!openApiSpec || !validationResult?.valid) return\r\n\r\n    setIsGenerating(true)\r\n    setGenerationResults([])\r\n\r\n    const generators = selectedGenerator === 'both' ? ['python', 'nodejs'] : [selectedGenerator]\r\n\r\n    try {\r\n      const results = await Promise.allSettled(\r\n        generators.map(async (generator) => {\r\n          const response = await fetch(`${API_GENERATOR_BASE}/generate/${generator}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              spec: JSON.parse(openApiSpec.content),\r\n              options: {\r\n                serverName: openApiSpec.name,\r\n                generateTests: true,\r\n                includeDocumentation: true\r\n              }\r\n            })\r\n          })\r\n\r\n          if (!response.ok) throw new Error(`${generator} generation failed`)\r\n\r\n          const result = await response.json()\r\n          return {\r\n            generator: generator as 'python' | 'nodejs',\r\n            success: true,\r\n            output: result.output,\r\n            timestamp: new Date(),\r\n            mcpServer: result.mcpServer\r\n          }\r\n        })\r\n      )\r\n\r\n      const processedResults = results.map((result, index) => {\r\n        if (result.status === 'fulfilled') {\r\n          return result.value\r\n        } else {\r\n          return {\r\n            generator: generators[index] as 'python' | 'nodejs',\r\n            success: false,\r\n            error: result.reason.message,\r\n            timestamp: new Date()\r\n          }\r\n        }\r\n      })\r\n\r\n      setGenerationResults(processedResults)\r\n    } catch (error) {\r\n      console.error('Generation failed:', error)\r\n    } finally {\r\n      setIsGenerating(false)\r\n    }\r\n  }\r\n\r\n  // Deploy MCP servers\r\n  const deployMCPServers = async () => {\r\n    const successfulResults = generationResults.filter(r => r.success && r.mcpServer)\r\n    if (successfulResults.length === 0) return\r\n\r\n    setIsDeploying(true)\r\n    setDeploymentStatus('Preparing deployment...')\r\n\r\n    try {\r\n      for (const result of successfulResults) {\r\n        setDeploymentStatus(`Deploying ${result.generator} MCP server...`)\r\n        \r\n        const response = await fetch(`${API_GENERATOR_BASE}/deploy`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            generator: result.generator,\r\n            mcpServer: result.mcpServer,\r\n            autoStart: true\r\n          })\r\n        })\r\n\r\n        if (!response.ok) throw new Error(`Failed to deploy ${result.generator} server`)\r\n      }\r\n\r\n      setDeploymentStatus('All MCP servers deployed successfully!')\r\n      setTimeout(() => setDeploymentStatus(''), 3000)\r\n    } catch (error) {\r\n      setDeploymentStatus(`Deployment failed: ${error instanceof Error ? error.message : 'Unknown error'}`)\r\n      setTimeout(() => setDeploymentStatus(''), 5000)\r\n    } finally {\r\n      setIsDeploying(false)\r\n    }\r\n  }\r\n\r\n  // Download generated code\r\n  const downloadGeneratedCode = (result: GenerationResult) => {\r\n    if (!result.output) return\r\n\r\n    const blob = new Blob([result.output], { type: 'application/zip' })\r\n    const url = URL.createObjectURL(blob)\r\n    const a = document.createElement('a')\r\n    a.href = url\r\n    a.download = `${openApiSpec?.name}-${result.generator}-mcp-server.zip`\r\n    document.body.appendChild(a)\r\n    a.click()\r\n    document.body.removeChild(a)\r\n    URL.revokeObjectURL(url)\r\n  }\r\n\r\n  return (\r\n    <div className=\"api-generator\">\r\n      {/* Header */}\r\n      <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n        <div className=\"card-header\">\r\n          <h2 className=\"card-title\">\r\n            <Code size={20} />\r\n            API Generator - OpenAPI to MCP\r\n          </h2>\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded\">\r\n              @cnoe-io/openapi-mcp-codegen\r\n            </span>\r\n            <span className=\"text-xs bg-green-100 text-green-700 px-2 py-1 rounded\">\r\n              @harsha-iiiv/openapi-mcp-generator\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <p>Convert OpenAPI specifications to Model Context Protocol (MCP) servers with Python and Node.js generators</p>\r\n          \r\n          {/* Tab Navigation */}\r\n          <div className=\"mt-4 border-b\">\r\n            <nav className=\"flex space-x-8\">\r\n              {[\r\n                { id: 'upload' as const, label: 'Upload & Validate', icon: Upload },\r\n                { id: 'generate' as const, label: 'Generate MCP', icon: Zap },\r\n                { id: 'deploy' as const, label: 'Deploy Servers', icon: Server }\r\n              ].map(({ id, label, icon: Icon }) => (\r\n                <button\r\n                  key={id}\r\n                  onClick={() => setActiveTab(id)}\r\n                  className={`flex items-center gap-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === id\r\n                      ? 'border-blue-500 text-blue-600'\r\n                      : 'border-transparent text-gray-500 hover:text-gray-700'\r\n                  }`}\r\n                >\r\n                  <Icon size={16} />\r\n                  {label}\r\n                </button>\r\n              ))}\r\n            </nav>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Upload & Validate Tab */}\r\n      {activeTab === 'upload' && (\r\n        <>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">\r\n                <Upload size={18} />\r\n                Upload OpenAPI Specification\r\n              </h3>\r\n            </div>\r\n            <div className=\"card-content\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-2\">Upload JSON File</label>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".json,.yaml,.yml\"\r\n                    onChange={handleFileUpload}\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"text-center text-gray-500\">— OR —</div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-2\">Paste OpenAPI JSON</label>\r\n                  <textarea\r\n                    rows={10}\r\n                    className=\"w-full font-mono text-sm\"\r\n                    placeholder=\"Paste your OpenAPI 3.x JSON specification here...\"\r\n                    onChange={(e) => handleSpecInput(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Validation Results */}\r\n          {openApiSpec && (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"card-title\">\r\n                  <FileText size={18} />\r\n                  Specification Details\r\n                </h3>\r\n              </div>\r\n              <div className=\"card-content\">\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <label className=\"text-sm font-medium\">Name</label>\r\n                      <p className=\"text-sm text-gray-600\">{openApiSpec.name}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"text-sm font-medium\">Version</label>\r\n                      <p className=\"text-sm text-gray-600\">{openApiSpec.info.version}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"text-sm font-medium\">OpenAPI Version</label>\r\n                      <p className=\"text-sm text-gray-600\">{openApiSpec.version}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"text-sm font-medium\">Servers</label>\r\n                      <p className=\"text-sm text-gray-600\">{openApiSpec.servers.length} defined</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {openApiSpec.info.description && (\r\n                    <div>\r\n                      <label className=\"text-sm font-medium\">Description</label>\r\n                      <p className=\"text-sm text-gray-600\">{openApiSpec.info.description}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Validation Status */}\r\n          {isValidating && (\r\n            <div className=\"card\">\r\n              <div className=\"card-content\">\r\n                <div className=\"flex items-center justify-center py-4\">\r\n                  <Loader2 size={20} className=\"animate-spin text-blue-500 mr-2\" />\r\n                  <span>Validating OpenAPI specification...</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {validationResult && (\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"card-title\">\r\n                  {validationResult.valid ? (\r\n                    <CheckCircle size={18} className=\"text-green-500\" />\r\n                  ) : (\r\n                    <XCircle size={18} className=\"text-red-500\" />\r\n                  )}\r\n                  Validation Results\r\n                </h3>\r\n              </div>\r\n              <div className=\"card-content\">\r\n                <div className=\"space-y-4\">\r\n                  {/* Status */}\r\n                  <div className={`p-3 rounded ${\r\n                    validationResult.valid \r\n                      ? 'bg-green-50 border border-green-200 text-green-700'\r\n                      : 'bg-red-50 border border-red-200 text-red-700'\r\n                  }`}>\r\n                    <div className=\"flex items-center\">\r\n                      {validationResult.valid ? (\r\n                        <CheckCircle size={16} className=\"mr-2\" />\r\n                      ) : (\r\n                        <XCircle size={16} className=\"mr-2\" />\r\n                      )}\r\n                      <span className=\"font-medium\">\r\n                        {validationResult.valid ? 'Valid OpenAPI Specification' : 'Invalid OpenAPI Specification'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Statistics */}\r\n                  <div className=\"grid grid-cols-3 gap-4\">\r\n                    <div className=\"metric\">\r\n                      <div className=\"metric-value text-blue-500\">{validationResult.info.paths}</div>\r\n                      <div className=\"metric-label\">Paths</div>\r\n                    </div>\r\n                    <div className=\"metric\">\r\n                      <div className=\"metric-value text-green-500\">{validationResult.info.operations}</div>\r\n                      <div className=\"metric-label\">Operations</div>\r\n                    </div>\r\n                    <div className=\"metric\">\r\n                      <div className=\"metric-value text-purple-500\">{validationResult.info.schemas}</div>\r\n                      <div className=\"metric-label\">Schemas</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Errors */}\r\n                  {validationResult.errors.length > 0 && (\r\n                    <div>\r\n                      <h4 className=\"font-medium text-red-700 mb-2\">Errors:</h4>\r\n                      <ul className=\"space-y-1\">\r\n                        {validationResult.errors.map((error, index) => (\r\n                          <li key={index} className=\"text-sm text-red-600 flex items-start\">\r\n                            <XCircle size={14} className=\"mr-2 mt-0.5 flex-shrink-0\" />\r\n                            {error}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Warnings */}\r\n                  {validationResult.warnings.length > 0 && (\r\n                    <div>\r\n                      <h4 className=\"font-medium text-yellow-700 mb-2\">Warnings:</h4>\r\n                      <ul className=\"space-y-1\">\r\n                        {validationResult.warnings.map((warning, index) => (\r\n                          <li key={index} className=\"text-sm text-yellow-600 flex items-start\">\r\n                            <AlertTriangle size={14} className=\"mr-2 mt-0.5 flex-shrink-0\" />\r\n                            {warning}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Generate Tab */}\r\n      {activeTab === 'generate' && (\r\n        <>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"card-title\">\r\n                <Settings size={18} />\r\n                Generator Configuration\r\n              </h3>\r\n            </div>\r\n            <div className=\"card-content\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium mb-2\">Select Generator</label>\r\n                  <div className=\"space-y-2\">\r\n                    {[\r\n                      { value: 'python', label: 'Python (@cnoe-io/openapi-mcp-codegen)', description: 'FastAPI-based MCP server with Python' },\r\n                      { value: 'nodejs', label: 'Node.js (@harsha-iiiv/openapi-mcp-generator)', description: 'Express-based MCP server with TypeScript' },\r\n                      { value: 'both', label: 'Both Generators', description: 'Generate both Python and Node.js implementations' }\r\n                    ].map((option) => (\r\n                      <label key={option.value} className=\"flex items-start space-x-3 cursor-pointer\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          name=\"generator\"\r\n                          value={option.value}\r\n                          checked={selectedGenerator === option.value}\r\n                          onChange={(e) => setSelectedGenerator(e.target.value as 'python' | 'nodejs' | 'both')}\r\n                          className=\"mt-1\"\r\n                        />\r\n                        <div>\r\n                          <div className=\"font-medium\">{option.label}</div>\r\n                          <div className=\"text-sm text-gray-600\">{option.description}</div>\r\n                        </div>\r\n                      </label>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between pt-4 border-t\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600\">\r\n                      {openApiSpec ? `Ready to generate MCP server for \"${openApiSpec.name}\"` : 'No OpenAPI specification loaded'}\r\n                    </p>\r\n                    {validationResult && !validationResult.valid && (\r\n                      <p className=\"text-sm text-red-600 mt-1\">\r\n                        Please fix validation errors before generating\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    onClick={generateMCPServers}\r\n                    disabled={!openApiSpec || !validationResult?.valid || isGenerating}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    {isGenerating ? (\r\n                      <>\r\n                        <Loader2 size={16} className=\"animate-spin mr-2\" />\r\n                        Generating...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Play size={16} className=\"mr-2\" />\r\n                        Generate MCP Servers\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Generation Results */}\r\n          {generationResults.length > 0 && (\r\n            <div className=\"card\" style={{ gridColumn: '1 / -1' }}>\r\n              <div className=\"card-header\">\r\n                <h3 className=\"card-title\">\r\n                  <Code size={18} />\r\n                  Generation Results\r\n                </h3>\r\n              </div>\r\n              <div className=\"card-content\">\r\n                <div className=\"space-y-4\">\r\n                  {generationResults.map((result, index) => (\r\n                    <div key={index} className={`p-4 border rounded ${\r\n                      result.success ? 'border-green-200 bg-green-50' : 'border-red-200 bg-red-50'\r\n                    }`}>\r\n                      <div className=\"flex items-center justify-between mb-3\">\r\n                        <div className=\"flex items-center\">\r\n                          {result.success ? (\r\n                            <CheckCircle size={20} className=\"text-green-500 mr-2\" />\r\n                          ) : (\r\n                            <XCircle size={20} className=\"text-red-500 mr-2\" />\r\n                          )}\r\n                          <div>\r\n                            <h4 className=\"font-medium capitalize\">{result.generator} Generator</h4>\r\n                            <p className=\"text-sm text-gray-600\">\r\n                              {result.timestamp.toLocaleString()}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        {result.success && result.output && (\r\n                          <button\r\n                            onClick={() => downloadGeneratedCode(result)}\r\n                            className=\"btn btn-secondary text-xs\"\r\n                          >\r\n                            <Download size={12} className=\"mr-1\" />\r\n                            Download\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n\r\n                      {result.success && result.mcpServer && (\r\n                        <div className=\"grid grid-cols-3 gap-4 mb-3\">\r\n                          <div>\r\n                            <label className=\"text-sm font-medium\">Server Name</label>\r\n                            <p className=\"text-sm text-gray-600\">{result.mcpServer.name}</p>\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"text-sm font-medium\">Port</label>\r\n                            <p className=\"text-sm text-gray-600\">{result.mcpServer.port}</p>\r\n                          </div>\r\n                          <div>\r\n                            <label className=\"text-sm font-medium\">Endpoints</label>\r\n                            <p className=\"text-sm text-gray-600\">{result.mcpServer.endpoints.length} endpoints</p>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {result.error && (\r\n                        <div className=\"text-sm text-red-600 font-mono bg-red-100 p-2 rounded\">\r\n                          {result.error}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Deploy Tab */}\r\n      {activeTab === 'deploy' && (\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">\r\n              <Server size={18} />\r\n              Deploy MCP Servers\r\n            </h3>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"space-y-4\">\r\n              {generationResults.filter(r => r.success).length > 0 ? (\r\n                <>\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 mb-4\">\r\n                      Deploy the generated MCP servers to the local environment for immediate use.\r\n                    </p>\r\n                    \r\n                    <div className=\"space-y-3\">\r\n                      {generationResults.filter(r => r.success).map((result, index) => (\r\n                        <div key={index} className=\"flex items-center justify-between p-3 border rounded\">\r\n                          <div>\r\n                            <h4 className=\"font-medium capitalize\">{result.generator} MCP Server</h4>\r\n                            <p className=\"text-sm text-gray-600\">\r\n                              {result.mcpServer?.name} on port {result.mcpServer?.port}\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <span className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded\">\r\n                              Ready\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between pt-4 border-t\">\r\n                    <div>\r\n                      {deploymentStatus && (\r\n                        <p className=\"text-sm text-blue-600\">{deploymentStatus}</p>\r\n                      )}\r\n                    </div>\r\n                    <button\r\n                      onClick={deployMCPServers}\r\n                      disabled={isDeploying}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      {isDeploying ? (\r\n                        <>\r\n                          <Loader2 size={16} className=\"animate-spin mr-2\" />\r\n                          Deploying...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <Server size={16} className=\"mr-2\" />\r\n                          Deploy All Servers\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"text-center py-8 text-gray-500\">\r\n                  <Server size={48} className=\"mx-auto mb-4 opacity-50\" />\r\n                  <p className=\"text-lg font-medium mb-2\">No Servers Ready for Deployment</p>\r\n                  <p className=\"text-sm mb-4\">\r\n                    Generate MCP servers first before deploying them.\r\n                  </p>\r\n                  <button\r\n                    onClick={() => setActiveTab('generate')}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Go to Generator\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport { Statusline } from './components/Statusline'\r\nimport { Navigation } from './components/Navigation'\r\nimport { AgentDashboard } from './components/AgentDashboard'\r\nimport { TaskMonitor } from './components/TaskMonitor'\r\nimport { AudioController } from './components/AudioController'\r\nimport { MCPManager } from './components/MCPManager'\r\nimport { BrowserMonitor } from './components/BrowserMonitor'\r\nimport { APIGenerator } from './components/APIGenerator'\r\nimport { useWebSocket } from './hooks/useWebSocket'\r\nimport './App.css'\r\n\r\n// Claude Code Dev Stack v3.0\r\n// Main PWA Application\r\n// Integrates:\r\n// - Claude Powerline (@Owloops) for statusline\r\n// - Claude Code Browser (@zainhoda) for monitoring\r\n// - MCP Manager (@qdhenry) for service orchestration\r\n// See CREDITS.md for full attribution\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nfunction App() {\r\n  const [agents, setAgents] = useState({ active: 0, total: 28 })\r\n  const [tasks, setTasks] = useState({ completed: 0, total: 0 })\r\n  const [hooks, setHooks] = useState({ triggered: 0, total: 28 })\r\n  const [lastAudio, setLastAudio] = useState<string>('')\r\n\r\n  // WebSocket connection for real-time updates (100ms)\r\n  // Connect to Dev Stack API WebSocket (integrates with browser adapter)\r\n  const { data, isConnected } = useWebSocket('ws://localhost:8081/ws', {\r\n    reconnectInterval: 1000,\r\n    heartbeatInterval: 100\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      // Update metrics from WebSocket\r\n      if (data.type === 'agent-update') {\r\n        setAgents(data.payload)\r\n      } else if (data.type === 'task-update') {\r\n        setTasks(data.payload)\r\n      } else if (data.type === 'hook-update') {\r\n        setHooks(data.payload)\r\n      } else if (data.type === 'audio-event') {\r\n        setLastAudio(data.payload.file)\r\n      }\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <Router>\r\n        <div className=\"app\">\r\n          {/* Ultimate Statusline - Powerline + Dev Stack */}\r\n          <Statusline \r\n            agents={agents}\r\n            tasks={tasks}\r\n            hooks={hooks}\r\n            lastAudio={lastAudio}\r\n            isConnected={isConnected}\r\n          />\r\n          \r\n          <Navigation />\r\n          \r\n          <main className=\"main-content\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<AgentDashboard agents={agents} />} />\r\n              <Route path=\"/tasks\" element={<TaskMonitor tasks={tasks} />} />\r\n              <Route path=\"/audio\" element={<AudioController lastAudio={lastAudio} />} />\r\n              <Route path=\"/mcp\" element={<MCPManager />} />\r\n              <Route path=\"/browser\" element={<BrowserMonitor />} />\r\n              <Route path=\"/api-generator\" element={<APIGenerator />} />\r\n            </Routes>\r\n          </main>\r\n        </div>\r\n      </Router>\r\n    </QueryClientProvider>\r\n  )\r\n}\r\n\r\nexport default App","// src/client/build/register.ts\nvar autoUpdateMode = \"true\";\nvar selfDestroying = \"false\";\nvar auto = autoUpdateMode === \"true\";\nvar autoDestroy = selfDestroying === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisteredSW,\n    onRegisterError\n  } = options;\n  let wb;\n  let registerPromise;\n  let sendSkipWaitingMessage;\n  const updateServiceWorker = async (_reloadPage = true) => {\n    await registerPromise;\n    if (!auto) {\n      await sendSkipWaitingMessage?.();\n    }\n  };\n  async function register() {\n    if (\"serviceWorker\" in navigator) {\n      wb = await import(\"workbox-window\").then(({ Workbox }) => {\n        return new Workbox(\"/sw.js\", { scope: \"/\", type: \"classic\" });\n      }).catch((e) => {\n        onRegisterError?.(e);\n        return void 0;\n      });\n      if (!wb)\n        return;\n      sendSkipWaitingMessage = async () => {\n        await wb?.messageSkipWaiting();\n      };\n      if (!autoDestroy) {\n        if (auto) {\n          wb.addEventListener(\"activated\", (event) => {\n            if (event.isUpdate || event.isExternal)\n              window.location.reload();\n          });\n          wb.addEventListener(\"installed\", (event) => {\n            if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n        } else {\n          let onNeedRefreshCalled = false;\n          const showSkipWaitingPrompt = () => {\n            onNeedRefreshCalled = true;\n            wb?.addEventListener(\"controlling\", (event) => {\n              if (event.isUpdate)\n                window.location.reload();\n            });\n            onNeedRefresh?.();\n          };\n          wb.addEventListener(\"installed\", (event) => {\n            if (typeof event.isUpdate === \"undefined\") {\n              if (typeof event.isExternal !== \"undefined\") {\n                if (event.isExternal)\n                  showSkipWaitingPrompt();\n                else\n                  !onNeedRefreshCalled && onOfflineReady?.();\n              } else {\n                if (event.isExternal)\n                  window.location.reload();\n                else\n                  !onNeedRefreshCalled && onOfflineReady?.();\n              }\n            } else if (!event.isUpdate) {\n              onOfflineReady?.();\n            }\n          });\n          wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n          wb.addEventListener(\"externalwaiting\", showSkipWaitingPrompt);\n        }\n      }\n      wb.register({ immediate }).then((r) => {\n        if (onRegisteredSW)\n          onRegisteredSW(\"/sw.js\", r);\n        else\n          onRegistered?.(r);\n      }).catch((e) => {\n        onRegisterError?.(e);\n      });\n    }\n  }\n  registerPromise = register();\n  return updateServiceWorker;\n}\nexport {\n  registerSW\n};\n","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App'\r\nimport { registerSW } from 'virtual:pwa-register'\r\nimport './index.css'\r\n\r\n// Claude Code Dev Stack v3.0 - PWA Bootstrap\r\n// Service Worker Registration with Auto-Update\r\n\r\n// Register service worker for PWA functionality\r\nconst updateSW = registerSW({\r\n  onNeedRefresh() {\r\n    console.log('🔄 New content available, refreshing...')\r\n    // Auto-refresh for seamless updates\r\n    updateSW(true)\r\n  },\r\n  onOfflineReady() {\r\n    console.log('✅ App ready to work offline')\r\n    // Show offline ready notification\r\n    showOfflineNotification()\r\n  },\r\n  onRegistered(r) {\r\n    console.log('✅ Service Worker registered:', r)\r\n  },\r\n  onRegisterError(error) {\r\n    console.error('❌ Service Worker registration error:', error)\r\n  }\r\n})\r\n\r\n// Offline notification\r\nfunction showOfflineNotification() {\r\n  const notification = document.createElement('div')\r\n  notification.innerHTML = `\r\n    <div style=\"position: fixed; bottom: 20px; left: 20px; background: #10b981; color: white; padding: 12px 16px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.3); z-index: 1002; font-size: 14px;\">\r\n      ✅ App is ready to work offline!\r\n    </div>\r\n  `\r\n  document.body.appendChild(notification)\r\n  \r\n  // Auto-remove after 3 seconds\r\n  setTimeout(() => {\r\n    notification.remove()\r\n  }, 3000)\r\n}\r\n\r\n// Network status monitoring\r\nwindow.addEventListener('online', () => {\r\n  console.log('🌐 Back online')\r\n  showNetworkStatus('online')\r\n})\r\n\r\nwindow.addEventListener('offline', () => {\r\n  console.log('📴 Gone offline')\r\n  showNetworkStatus('offline')\r\n})\r\n\r\nfunction showNetworkStatus(status: 'online' | 'offline') {\r\n  const notification = document.createElement('div')\r\n  const isOnline = status === 'online'\r\n  \r\n  notification.innerHTML = `\r\n    <div style=\"position: fixed; top: 20px; left: 20px; background: ${isOnline ? '#10b981' : '#ef4444'}; color: white; padding: 12px 16px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.3); z-index: 1002; font-size: 14px;\">\r\n      ${isOnline ? '🌐 Back online' : '📴 You are offline'}\r\n    </div>\r\n  `\r\n  document.body.appendChild(notification)\r\n  \r\n  // Auto-remove after 2 seconds\r\n  setTimeout(() => {\r\n    notification.remove()\r\n  }, 2000)\r\n}\r\n\r\n// Performance monitoring\r\nif ('performance' in window) {\r\n  window.addEventListener('load', () => {\r\n    const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\r\n    console.log('📊 Page Load Performance:', {\r\n      domContentLoaded: navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart,\r\n      loadComplete: navigation.loadEventEnd - navigation.loadEventStart,\r\n      firstPaint: performance.getEntriesByName('first-paint')[0]?.startTime,\r\n      firstContentfulPaint: performance.getEntriesByName('first-contentful-paint')[0]?.startTime\r\n    })\r\n  })\r\n}\r\n\r\n// Error boundary for PWA\r\nclass PWAErrorBoundary extends React.Component<\r\n  { children: React.ReactNode },\r\n  { hasError: boolean; error?: Error }\r\n> {\r\n  constructor(props: { children: React.ReactNode }) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error }\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error('PWA Error Boundary caught an error:', error, errorInfo)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          height: '100vh',\r\n          padding: '20px',\r\n          textAlign: 'center',\r\n          backgroundColor: '#1a1b26',\r\n          color: 'white'\r\n        }}>\r\n          <h1 style={{ marginBottom: '20px' }}>Something went wrong</h1>\r\n          <p style={{ marginBottom: '20px', opacity: 0.7 }}>\r\n            The application encountered an error. Please try refreshing the page.\r\n          </p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            style={{\r\n              background: '#007acc',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '12px 24px',\r\n              borderRadius: '6px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            Refresh App\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n\r\n// Render application with error boundary\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <PWAErrorBoundary>\r\n      <App />\r\n    </PWAErrorBoundary>\r\n  </React.StrictMode>\r\n)"],"file":"assets/index-qObnXoUI.js"}