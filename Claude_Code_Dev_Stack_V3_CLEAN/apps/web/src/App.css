/* Claude Code Dev Stack v3.0 - App Component Styles */

.app {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  background-color: var(--bg-primary);
  color: var(--text-primary);
}

/* Main Content Area */
.main-content {
  flex: 1;
  padding: var(--spacing-md);
  max-width: 100%;
  overflow-x: auto;
}

/* Responsive Grid for Components */
.component-grid {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

/* Card Component */
.card {
  background-color: var(--bg-secondary);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  box-shadow: var(--shadow-md);
  border: 1px solid var(--bg-tertiary);
  transition: all var(--transition-normal);
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.card-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--spacing-md);
  padding-bottom: var(--spacing-sm);
  border-bottom: 1px solid var(--bg-tertiary);
}

.card-title {
  font-size: 1.125rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
}

.card-content {
  color: var(--text-secondary);
}

/* Agent Dashboard Styles */
.agent-dashboard {
  display: grid;
  gap: var(--spacing-md);
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.agent-card {
  background: linear-gradient(135deg, var(--bg-secondary) 0%, var(--bg-tertiary) 100%);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  border: 1px solid var(--bg-tertiary);
  position: relative;
  overflow: hidden;
}

.agent-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
}

.agent-status {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  margin-bottom: var(--spacing-sm);
}

.status-indicator {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: var(--success);
}

.status-indicator.inactive {
  background-color: var(--text-muted);
}

.status-indicator.error {
  background-color: var(--error);
}

.agent-metrics {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--spacing-sm);
  margin-top: var(--spacing-md);
}

.metric {
  text-align: center;
  padding: var(--spacing-sm);
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: var(--radius-md);
}

.metric-value {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--accent-primary);
}

.metric-label {
  font-size: 0.75rem;
  color: var(--text-muted);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* Task Monitor Styles */
.task-monitor {
  background-color: var(--bg-secondary);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  border: 1px solid var(--bg-tertiary);
}

.task-list {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.task-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-md);
  background-color: var(--bg-primary);
  border-radius: var(--radius-md);
  border-left: 3px solid var(--accent-primary);
  transition: all var(--transition-fast);
}

.task-item:hover {
  background-color: var(--bg-tertiary);
}

.task-item.completed {
  border-left-color: var(--success);
  opacity: 0.7;
}

.task-item.error {
  border-left-color: var(--error);
}

.task-info {
  flex: 1;
}

.task-name {
  font-weight: 500;
  color: var(--text-primary);
  margin-bottom: var(--spacing-xs);
}

.task-description {
  font-size: 0.875rem;
  color: var(--text-muted);
}

.task-progress {
  width: 120px;
  height: 6px;
  background-color: var(--bg-tertiary);
  border-radius: 3px;
  overflow: hidden;
}

.task-progress-bar {
  height: 100%;
  background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
  transition: width var(--transition-normal);
}

/* Audio Controller Styles */
.audio-controller {
  background-color: var(--bg-secondary);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  border: 1px solid var(--bg-tertiary);
}

.audio-controls {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-md);
}

.audio-button {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background-color: var(--accent-primary);
  color: white;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all var(--transition-fast);
}

.audio-button:hover {
  background-color: var(--accent-secondary);
  transform: scale(1.05);
}

.audio-waveform {
  flex: 1;
  height: 60px;
  background: linear-gradient(90deg, 
    var(--accent-primary) 0%,
    var(--accent-secondary) 50%,
    var(--accent-primary) 100%);
  border-radius: var(--radius-md);
  position: relative;
  overflow: hidden;
}

.waveform-animation {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: repeating-linear-gradient(
    90deg,
    transparent 0px,
    rgba(255, 255, 255, 0.1) 1px,
    rgba(255, 255, 255, 0.1) 2px,
    transparent 3px,
    transparent 8px
  );
  animation: waveform 2s linear infinite;
}

@keyframes waveform {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* MCP Manager Styles */
.mcp-manager {
  display: grid;
  gap: var(--spacing-md);
}

.mcp-service {
  background-color: var(--bg-secondary);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  border: 1px solid var(--bg-tertiary);
  position: relative;
}

.mcp-service.active::before {
  content: '';
  position: absolute;
  top: var(--spacing-sm);
  right: var(--spacing-sm);
  width: 12px;
  height: 12px;
  background-color: var(--success);
  border-radius: 50%;
  box-shadow: 0 0 8px var(--success);
}

.mcp-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--spacing-md);
}

.mcp-actions {
  display: flex;
  gap: var(--spacing-sm);
}

.mcp-stats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  gap: var(--spacing-md);
  margin-top: var(--spacing-md);
}

/* Responsive Design */
@media (max-width: 768px) {
  .main-content {
    padding: var(--spacing-sm);
  }
  
  .component-grid {
    grid-template-columns: 1fr;
    gap: var(--spacing-sm);
  }
  
  .agent-dashboard {
    grid-template-columns: 1fr;
  }
  
  .card {
    padding: var(--spacing-md);
  }
  
  .task-item {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }
  
  .audio-controls {
    flex-direction: column;
    align-items: stretch;
  }
  
  .audio-waveform {
    height: 40px;
  }
  
  .mcp-stats {
    grid-template-columns: 1fr 1fr;
  }
}

@media (max-width: 480px) {
  .card-header {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }
  
  .agent-metrics {
    grid-template-columns: 1fr;
  }
  
  .mcp-header {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-sm);
  }
  
  .mcp-actions {
    width: 100%;
    justify-content: center;
  }
}

/* Loading Animations */
.loading-spinner {
  width: 24px;
  height: 24px;
  border: 2px solid var(--bg-tertiary);
  border-top: 2px solid var(--accent-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

/* Accessibility Improvements */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Focus Indicators */
.card:focus-within {
  outline: 2px solid var(--accent-primary);
  outline-offset: 2px;
}

/* High Contrast Mode Support */
@media (prefers-contrast: high) {
  .card {
    border: 2px solid var(--text-primary);
  }
  
  .agent-card::before {
    height: 4px;
  }
  
  .task-item {
    border-left-width: 4px;
  }
}