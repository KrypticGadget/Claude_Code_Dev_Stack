# Development Team Configuration
# Code implementation and engineering excellence

team:
  id: "development"
  name: "Development Team"
  icon: "ðŸ’»"
  description: "Code implementation, feature development, and engineering excellence"
  tier_focus: [3]
  priority: 3
  status: "active"

# Team Members and Roles
members:
  team_lead:
    agent: "agent-react-specialist"
    role: "Senior Frontend Developer & Team Lead"
    responsibilities:
      - "Frontend development leadership"
      - "Code quality oversight"
      - "Team technical mentoring"
      - "Sprint execution coordination"
    authority_level: "technical_lead"
    
  integration_specialist:
    agent: "agent-api-integration"
    role: "API & Integration Specialist"
    responsibilities:
      - "API development and maintenance"
      - "Third-party integration management"
      - "Service connectivity solutions"
      - "Authentication and security implementation"
    authority_level: "senior_developer"
    
  quality_engineer:
    agent: "agent-qa-tester"
    role: "Quality Assurance Lead"
    responsibilities:
      - "Test strategy development"
      - "Automated testing implementation"
      - "Quality gate enforcement"
      - "Bug tracking and resolution"
    authority_level: "senior_developer"
    
  mobile_specialist:
    agent: "agent-mobile-developer"
    role: "Mobile Development Specialist"
    responsibilities:
      - "Mobile application development"
      - "Cross-platform solutions"
      - "Mobile performance optimization"
      - "App store deployment management"
    authority_level: "senior_developer"
    
  code_quality_guardian:
    agent: "agent-code-reviewer"
    role: "Code Quality & Standards Guardian"
    responsibilities:
      - "Code review coordination"
      - "Best practices enforcement"
      - "Technical debt management"
      - "Refactoring initiatives"
    authority_level: "senior_developer"

# Communication Protocols
communication:
  meeting_cadence:
    daily_standup:
      frequency: "daily"
      duration: "15 minutes"
      participants: ["all_developers"]
      focus: "progress_blockers_coordination"
      
    sprint_planning:
      frequency: "bi_weekly"
      duration: "2 hours"
      participants: ["all_team", "product_owner", "scrum_master"]
      focus: "work_estimation_commitment"
      
    retrospective:
      frequency: "bi_weekly"
      duration: "90 minutes"
      participants: ["all_team"]
      focus: "process_improvement"
      
    technical_discussion:
      frequency: "weekly"
      duration: "60 minutes"
      participants: ["technical_leads"]
      focus: "architectural_decisions"

  collaboration_tools:
    code_collaboration: ["github", "pair_programming", "mob_programming"]
    communication: ["slack", "discord", "teams"]
    documentation: ["confluence", "notion", "markdown"]
    project_tracking: ["jira", "azure_devops", "linear"]

  code_standards:
    review_process:
      required_reviewers: 2
      automated_checks: ["linting", "testing", "security_scan"]
      merge_criteria: ["all_checks_pass", "approval_required"]
      
    coding_conventions:
      style_guide: "team_agreed_standards"
      documentation: "inline_comments_required"
      testing: "unit_test_coverage_80_percent"
      
    git_workflow:
      branching_strategy: "feature_branch_workflow"
      commit_message_format: "conventional_commits"
      pr_template: "required_sections"

# Escalation Paths
escalation:
  level_1:
    trigger: "technical_implementation_issues"
    handler: "agent-react-specialist"
    response_time: "4 hours"
    
  level_2:
    trigger: "cross_service_integration_problems"
    handler: "agent-api-integration"
    response_time: "2 hours"
    
  level_3:
    trigger: "architectural_constraints"
    handler: "architecture_team"
    response_time: "8 hours"
    
  emergency:
    trigger: "production_breaking_issues"
    handler: "operations_team"
    response_time: "immediate"
    notify: ["team_lead", "architecture_team"]

# BMAD Integration
bmad_integration:
  coordination_role: "implementation_executor"
  workflow_participation:
    business_model_phase:
      role: "technical_feasibility_input"
      contributions: ["implementation_complexity_assessment"]
      
    architecture_phase:
      role: "implementation_planning_participant"
      contributions: ["development_effort_estimation", "technical_constraints"]
      
    design_phase:
      role: "implementation_readiness_validator"
      contributions: ["ui_implementation_feasibility", "technical_design_review"]
      
  bmad_handoff_preparation:
    documentation_requirements:
      - "technical_specifications_review"
      - "implementation_plan_creation"
      - "testing_strategy_definition"
      - "deployment_checklist_preparation"
      
    transition_criteria:
      - "architecture_approval_received"
      - "design_specifications_finalized"
      - "development_environment_prepared"
      - "team_capacity_allocated"

# Development Processes
development_processes:
  agile_methodology:
    framework: "scrum"
    sprint_length: "2_weeks"
    velocity_tracking: "story_points"
    burn_down_monitoring: "daily"
    
  development_lifecycle:
    phases: ["planning", "implementation", "testing", "review", "deployment"]
    quality_gates: ["code_review", "automated_tests", "integration_tests", "security_scan"]
    
  continuous_integration:
    automated_testing: "on_every_commit"
    code_quality_checks: "sonarqube_analysis"
    security_scanning: "snyk_integration"
    deployment_automation: "github_actions"
    
  code_quality_practices:
    pair_programming: "encouraged_for_complex_features"
    mob_programming: "used_for_knowledge_sharing"
    code_kata: "weekly_practice_sessions"
    tech_debt_management: "dedicated_sprint_time"

# Performance Metrics
metrics:
  team_performance:
    velocity_consistency: "variance_less_than_20_percent"
    sprint_commitment: ">90_percent_completion"
    code_quality_score: ">8.5_out_of_10"
    bug_escape_rate: "<5_percent"
    
  individual_performance:
    code_review_quality: ">85_percent_approval"
    test_coverage_contribution: ">80_percent"
    knowledge_sharing: "monthly_tech_talks"
    continuous_learning: "quarterly_skill_assessment"
    
  technical_metrics:
    build_success_rate: ">95_percent"
    deployment_frequency: "multiple_per_day"
    lead_time_for_changes: "<2_days"
    mean_time_to_recovery: "<4_hours"
    
  bmad_integration_metrics:
    implementation_accuracy: ">95_percent_to_design"
    development_timeline_adherence: "within_planned_sprints"
    quality_delivery: "first_time_right_>90_percent"

# Technical Specializations
specializations:
  frontend_development:
    technologies: ["react", "typescript", "next_js", "tailwind"]
    responsibilities: ["ui_implementation", "state_management", "performance_optimization"]
    quality_standards: ["accessibility_wcag_aa", "responsive_design", "browser_compatibility"]
    
  api_development:
    technologies: ["node_js", "express", "graphql", "rest"]
    responsibilities: ["endpoint_creation", "data_validation", "authentication", "rate_limiting"]
    quality_standards: ["openapi_documentation", "error_handling", "security_compliance"]
    
  mobile_development:
    technologies: ["react_native", "flutter", "ionic"]
    responsibilities: ["cross_platform_apps", "native_integrations", "performance_optimization"]
    quality_standards: ["app_store_guidelines", "offline_functionality", "responsive_ui"]
    
  testing_automation:
    technologies: ["jest", "cypress", "playwright", "selenium"]
    responsibilities: ["test_automation", "ci_cd_integration", "quality_metrics"]
    quality_standards: ["80_percent_coverage", "reliable_tests", "fast_execution"]

# Collaboration Patterns
collaboration:
  cross_functional_work:
    with_designers: "design_system_collaboration"
    with_product: "feature_refinement_sessions"
    with_qa: "test_driven_development"
    with_devops: "deployment_pipeline_collaboration"
    
  knowledge_management:
    documentation: "living_documentation_approach"
    code_comments: "self_documenting_code_standards"
    team_wiki: "technical_knowledge_base"
    
  mentoring_program:
    buddy_system: "new_team_member_onboarding"
    skill_sharing: "weekly_tech_talks"
    career_development: "quarterly_growth_planning"
    
  innovation_time:
    hack_days: "monthly_innovation_sessions"
    tech_exploration: "20_percent_time_for_learning"
    process_improvement: "continuous_improvement_initiatives"

# Integration Points
integration_points:
  upstream_dependencies:
    - "technical_specifications"
    - "design_mockups"
    - "api_contracts"
    - "business_requirements"
    
  downstream_deliverables:
    - "implemented_features"
    - "tested_code"
    - "deployment_packages"
    - "technical_documentation"
    
  cross_team_interfaces:
    architecture_team: "implementation_guidance_consumption"
    operations_team: "deployment_coordination"
    product_team: "feature_delivery_coordination"
    security_team: "security_requirement_implementation"
    bmad_team: "design_to_code_translation"

# Technology Proficiency Matrix
technology_proficiency:
  required_skills:
    - "version_control_git"
    - "javascript_typescript"
    - "react_ecosystem"
    - "api_development"
    - "testing_frameworks"
    
  advanced_skills:
    - "performance_optimization"
    - "security_best_practices"
    - "ci_cd_pipeline_management"
    - "cross_platform_development"
    - "database_optimization"
    
  emerging_skills:
    - "ai_ml_integration"
    - "blockchain_development"
    - "iot_connectivity"
    - "edge_computing"
    - "microservices_architecture"